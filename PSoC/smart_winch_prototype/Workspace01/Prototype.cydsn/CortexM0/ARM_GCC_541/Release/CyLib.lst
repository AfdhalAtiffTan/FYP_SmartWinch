ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CySysTickServiceCallbacks, %function
  24              	CySysTickServiceCallbacks:
  25              	.LFB49:
  26              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.60
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 2


  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 3


  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 4


 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 5


 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 6


 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 7


 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 8


 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 9


 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 10


 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 11


 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 577:Generated_Source\PSoC4/CyLib.c **** }
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 12


 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 13


 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 14


 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 15


 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 16


 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 17


 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 18


 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 19


1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 20


1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 21


1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 22


1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 23


1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 24


1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 25


1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 26


1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 27


1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 28


1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 29


1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 30


1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 31


1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 32


1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 33


1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 34


1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 35


1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 36


1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 37


2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 38


2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 39


2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 40


2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 41


2255:Generated_Source\PSoC4/CyLib.c **** {
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2257:Generated_Source\PSoC4/CyLib.c **** }
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 42


2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 43


2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 44


2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2440:Generated_Source\PSoC4/CyLib.c **** }
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2459:Generated_Source\PSoC4/CyLib.c **** }
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2474:Generated_Source\PSoC4/CyLib.c **** }
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 45


2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2503:Generated_Source\PSoC4/CyLib.c **** }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 46


2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
2547:Generated_Source\PSoC4/CyLib.c **** }
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
2571:Generated_Source\PSoC4/CyLib.c **** }
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
2585:Generated_Source\PSoC4/CyLib.c **** }
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 47


2597:Generated_Source\PSoC4/CyLib.c **** {
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
2610:Generated_Source\PSoC4/CyLib.c **** }
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 48


2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c **** }
2675:Generated_Source\PSoC4/CyLib.c **** 
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2678:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2679:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2680:Generated_Source\PSoC4/CyLib.c **** *
2681:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2682:Generated_Source\PSoC4/CyLib.c **** *
2683:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2684:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2685:Generated_Source\PSoC4/CyLib.c **** *
2686:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2687:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2688:Generated_Source\PSoC4/CyLib.c **** {
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2691:Generated_Source\PSoC4/CyLib.c **** }
2692:Generated_Source\PSoC4/CyLib.c **** 
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2695:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2696:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLib.c **** *
2698:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2699:Generated_Source\PSoC4/CyLib.c **** *
2700:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2701:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2705:Generated_Source\PSoC4/CyLib.c **** {
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2707:Generated_Source\PSoC4/CyLib.c **** }
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 49


2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *
2714:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2715:Generated_Source\PSoC4/CyLib.c **** *
2716:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2717:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2718:Generated_Source\PSoC4/CyLib.c **** *
2719:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2720:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2721:Generated_Source\PSoC4/CyLib.c **** {
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2723:Generated_Source\PSoC4/CyLib.c **** }
2724:Generated_Source\PSoC4/CyLib.c **** 
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2727:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2728:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2729:Generated_Source\PSoC4/CyLib.c **** *
2730:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2731:Generated_Source\PSoC4/CyLib.c **** *
2732:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2733:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2734:Generated_Source\PSoC4/CyLib.c **** *
2735:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2736:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2737:Generated_Source\PSoC4/CyLib.c **** {
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2739:Generated_Source\PSoC4/CyLib.c **** }
2740:Generated_Source\PSoC4/CyLib.c **** 
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2743:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2744:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2747:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2748:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2749:Generated_Source\PSoC4/CyLib.c **** *
2750:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2751:Generated_Source\PSoC4/CyLib.c **** *
2752:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2753:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2754:Generated_Source\PSoC4/CyLib.c **** {
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2756:Generated_Source\PSoC4/CyLib.c **** }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2760:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2761:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2762:Generated_Source\PSoC4/CyLib.c **** *
2763:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2767:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 50


2768:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2769:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2770:Generated_Source\PSoC4/CyLib.c **** {
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2772:Generated_Source\PSoC4/CyLib.c **** }
2773:Generated_Source\PSoC4/CyLib.c **** 
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2776:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2777:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2778:Generated_Source\PSoC4/CyLib.c **** *
2779:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2780:Generated_Source\PSoC4/CyLib.c **** *
2781:Generated_Source\PSoC4/CyLib.c **** * \return
2782:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2783:Generated_Source\PSoC4/CyLib.c **** *
2784:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2785:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2786:Generated_Source\PSoC4/CyLib.c **** {
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2788:Generated_Source\PSoC4/CyLib.c **** }
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2792:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2793:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2794:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2795:Generated_Source\PSoC4/CyLib.c ****     *
2796:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2797:Generated_Source\PSoC4/CyLib.c ****     *
2798:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2799:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2800:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2801:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2802:Generated_Source\PSoC4/CyLib.c ****     *
2803:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2804:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2805:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2806:Generated_Source\PSoC4/CyLib.c ****     *
2807:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2808:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2809:Generated_Source\PSoC4/CyLib.c ****     *
2810:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2811:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2812:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2814:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2816:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2817:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2818:Generated_Source\PSoC4/CyLib.c ****     {
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2820:Generated_Source\PSoC4/CyLib.c ****         {
2821:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2822:Generated_Source\PSoC4/CyLib.c ****         }
2823:Generated_Source\PSoC4/CyLib.c ****         else
2824:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 51


2825:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2826:Generated_Source\PSoC4/CyLib.c ****         }
2827:Generated_Source\PSoC4/CyLib.c ****     }
2828:Generated_Source\PSoC4/CyLib.c **** 
2829:Generated_Source\PSoC4/CyLib.c ****     
2830:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2831:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2832:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2833:Generated_Source\PSoC4/CyLib.c ****     *
2834:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2835:Generated_Source\PSoC4/CyLib.c ****     *
2836:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2837:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2839:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2841:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2843:Generated_Source\PSoC4/CyLib.c ****     {
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2845:Generated_Source\PSoC4/CyLib.c ****     }
2846:Generated_Source\PSoC4/CyLib.c ****     
2847:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2848:Generated_Source\PSoC4/CyLib.c **** 
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2851:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2852:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2855:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** * \return
2858:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2859:Generated_Source\PSoC4/CyLib.c **** *
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2862:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2863:Generated_Source\PSoC4/CyLib.c **** *
2864:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2865:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2866:Generated_Source\PSoC4/CyLib.c **** {
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2868:Generated_Source\PSoC4/CyLib.c **** }
2869:Generated_Source\PSoC4/CyLib.c **** 
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2872:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2873:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2874:Generated_Source\PSoC4/CyLib.c **** *
2875:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2876:Generated_Source\PSoC4/CyLib.c **** *
2877:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2878:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2879:Generated_Source\PSoC4/CyLib.c **** {
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2881:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 52


2882:Generated_Source\PSoC4/CyLib.c **** 
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2885:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2886:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2887:Generated_Source\PSoC4/CyLib.c **** *
2888:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2889:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2890:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2891:Generated_Source\PSoC4/CyLib.c **** *
2892:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2893:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2894:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2895:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2896:Generated_Source\PSoC4/CyLib.c **** *  functions.
2897:Generated_Source\PSoC4/CyLib.c **** *
2898:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2899:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2902:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2903:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2904:Generated_Source\PSoC4/CyLib.c **** *
2905:Generated_Source\PSoC4/CyLib.c **** * \return
2906:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2907:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2908:Generated_Source\PSoC4/CyLib.c **** *
2909:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2910:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2911:Generated_Source\PSoC4/CyLib.c **** *
2912:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2913:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2914:Generated_Source\PSoC4/CyLib.c **** {
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2916:Generated_Source\PSoC4/CyLib.c **** 
2917:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2920:Generated_Source\PSoC4/CyLib.c **** }
2921:Generated_Source\PSoC4/CyLib.c **** 
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2924:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2925:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2926:Generated_Source\PSoC4/CyLib.c **** *
2927:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2928:Generated_Source\PSoC4/CyLib.c **** *
2929:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2930:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2931:Generated_Source\PSoC4/CyLib.c **** *
2932:Generated_Source\PSoC4/CyLib.c **** * \return
2933:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2934:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2935:Generated_Source\PSoC4/CyLib.c **** *
2936:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2937:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2938:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 53


2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2940:Generated_Source\PSoC4/CyLib.c **** }
2941:Generated_Source\PSoC4/CyLib.c **** 
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2944:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2945:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2946:Generated_Source\PSoC4/CyLib.c **** *
2947:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2948:Generated_Source\PSoC4/CyLib.c **** *
2949:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2950:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2951:Generated_Source\PSoC4/CyLib.c **** {
  27              		.loc 1 2951 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LBB38:
  32              	.LBB39:
2867:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 2867 0
  34 0000 074B     		ldr	r3, .L12
  35              	.LBE39:
  36              	.LBE38:
  37              		.loc 1 2951 0
  38 0002 70B5     		push	{r4, r5, r6, lr}
  39              		.cfi_def_cfa_offset 16
  40              		.cfi_offset 4, -16
  41              		.cfi_offset 5, -12
  42              		.cfi_offset 6, -8
  43              		.cfi_offset 14, -4
  44              	.LBB41:
  45              	.LBB40:
2867:Generated_Source\PSoC4/CyLib.c **** }
  46              		.loc 1 2867 0
  47 0004 1B68     		ldr	r3, [r3]
  48              	.LBE40:
  49              	.LBE41:
2952:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2953:Generated_Source\PSoC4/CyLib.c **** 
2954:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2955:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
  50              		.loc 1 2955 0
  51 0006 DB03     		lsls	r3, r3, #15
  52 0008 00D4     		bmi	.L11
  53              	.L1:
2956:Generated_Source\PSoC4/CyLib.c ****     {
2957:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2958:Generated_Source\PSoC4/CyLib.c ****         {
2959:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
2960:Generated_Source\PSoC4/CyLib.c ****             {
2961:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
2962:Generated_Source\PSoC4/CyLib.c ****             }
2963:Generated_Source\PSoC4/CyLib.c ****         }
2964:Generated_Source\PSoC4/CyLib.c ****     }
2965:Generated_Source\PSoC4/CyLib.c **** }
  54              		.loc 1 2965 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 54


  55              		@ sp needed
  56 000a 70BD     		pop	{r4, r5, r6, pc}
  57              	.L11:
  58 000c 0024     		movs	r4, #0
  59 000e 054D     		ldr	r5, .L12+4
  60              	.L4:
  61              	.LBB42:
2959:Generated_Source\PSoC4/CyLib.c ****             {
  62              		.loc 1 2959 0
  63 0010 2B59     		ldr	r3, [r5, r4]
  64 0012 002B     		cmp	r3, #0
  65 0014 00D0     		beq	.L3
2961:Generated_Source\PSoC4/CyLib.c ****             }
  66              		.loc 1 2961 0
  67 0016 9847     		blx	r3
  68              	.LVL0:
  69              	.L3:
  70 0018 0434     		adds	r4, r4, #4
2957:Generated_Source\PSoC4/CyLib.c ****         {
  71              		.loc 1 2957 0
  72 001a 142C     		cmp	r4, #20
  73 001c F8D1     		bne	.L4
  74 001e F4E7     		b	.L1
  75              	.L13:
  76              		.align	2
  77              	.L12:
  78 0020 10E000E0 		.word	-536813552
  79 0024 00000000 		.word	.LANCHOR0
  80              	.LBE42:
  81              		.cfi_endproc
  82              	.LFE49:
  83              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
  84              		.section	.text.CySysClkImoEnableWcoLock.part.0,"ax",%progbits
  85              		.align	2
  86              		.code	16
  87              		.thumb_func
  88              		.type	CySysClkImoEnableWcoLock.part.0, %function
  89              	CySysClkImoEnableWcoLock.part.0:
  90              	.LFB55:
 175:Generated_Source\PSoC4/CyLib.c ****     {
  91              		.loc 1 175 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 8
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 70B5     		push	{r4, r5, r6, lr}
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 4, -16
  98              		.cfi_offset 5, -12
  99              		.cfi_offset 6, -8
 100              		.cfi_offset 14, -4
 101 0002 82B0     		sub	sp, sp, #8
 102              		.cfi_def_cfa_offset 24
 189:Generated_Source\PSoC4/CyLib.c **** 
 103              		.loc 1 189 0
 104 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 105              	.LVL1:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 55


 106              		.loc 1 203 0
 107 0008 364D     		ldr	r5, .L37
 189:Generated_Source\PSoC4/CyLib.c **** 
 108              		.loc 1 189 0
 109 000a 0400     		movs	r4, r0
 110              	.LVL2:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 111              		.loc 1 201 0
 112 000c 0022     		movs	r2, #0
 113 000e 364E     		ldr	r6, .L37+4
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 114              		.loc 1 203 0
 115 0010 3F20     		movs	r0, #63
 116 0012 02E0     		b	.L18
 117              	.LVL3:
 118              	.L15:
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 119              		.loc 1 201 0
 120 0014 0132     		adds	r2, r2, #1
 121              	.LVL4:
 122 0016 2E2A     		cmp	r2, #46
 123 0018 41D0     		beq	.L35
 124              	.LVL5:
 125              	.L18:
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 126              		.loc 1 203 0
 127 001a 2B68     		ldr	r3, [r5]
 128 001c B15C     		ldrb	r1, [r6, r2]
 129 001e 0340     		ands	r3, r0
 130 0020 8B42     		cmp	r3, r1
 131 0022 F7D1     		bne	.L15
 132 0024 8021     		movs	r1, #128
 133 0026 C901     		lsls	r1, r1, #7
 134 0028 8C46     		mov	ip, r1
 135 002a 304B     		ldr	r3, .L37+8
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 136              		.loc 1 205 0
 137 002c 0332     		adds	r2, r2, #3
 138              	.LVL6:
 139 002e 5343     		muls	r3, r2
 140 0030 6344     		add	r3, r3, ip
 141 0032 DB0B     		lsrs	r3, r3, #15
 142 0034 591E     		subs	r1, r3, #1
 225:Generated_Source\PSoC4/CyLib.c ****                 {
 143              		.loc 1 225 0
 144 0036 2E4B     		ldr	r3, .L37+12
 145 0038 1B68     		ldr	r3, [r3]
 146 003a DB06     		lsls	r3, r3, #27
 147 003c 35D0     		beq	.L16
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 148              		.loc 1 232 0
 149 003e 2D4B     		ldr	r3, .L37+16
 150 0040 1868     		ldr	r0, [r3]
 151 0042 2D4B     		ldr	r3, .L37+20
 152 0044 0340     		ands	r3, r0
 153              	.LVL7:
 238:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 56


 154              		.loc 1 238 0
 155 0046 0B43     		orrs	r3, r1
 156              	.LVL8:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 157              		.loc 1 244 0
 158 0048 192A     		cmp	r2, #25
 159 004a 3CD9     		bls	.L23
 160              	.LVL9:
 161              	.L20:
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 162              		.loc 1 250 0
 163 004c 2B49     		ldr	r1, .L37+24
 164 004e 5118     		adds	r1, r2, r1
 251:Generated_Source\PSoC4/CyLib.c **** 
 165              		.loc 1 251 0
 166 0050 B218     		adds	r2, r6, r2
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 167              		.loc 1 250 0
 168 0052 907D     		ldrb	r0, [r2, #22]
 241:Generated_Source\PSoC4/CyLib.c **** 
 169              		.loc 1 241 0
 170 0054 A022     		movs	r2, #160
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 171              		.loc 1 250 0
 172 0056 0978     		ldrb	r1, [r1]
 173              	.LVL10:
 241:Generated_Source\PSoC4/CyLib.c **** 
 174              		.loc 1 241 0
 175 0058 5203     		lsls	r2, r2, #13
 176 005a 1343     		orrs	r3, r2
 256:Generated_Source\PSoC4/CyLib.c ****             }
 177              		.loc 1 256 0
 178 005c 4218     		adds	r2, r0, r1
 179 005e FF2A     		cmp	r2, #255
 180 0060 34D8     		bhi	.L36
 181              	.L22:
 182 0062 9205     		lsls	r2, r2, #22
 183 0064 1A43     		orrs	r2, r3
 184              	.LVL11:
 185              	.L21:
 259:Generated_Source\PSoC4/CyLib.c **** 
 186              		.loc 1 259 0
 187 0066 234B     		ldr	r3, .L37+16
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 188              		.loc 1 261 0
 189 0068 254D     		ldr	r5, .L37+28
 259:Generated_Source\PSoC4/CyLib.c **** 
 190              		.loc 1 259 0
 191 006a 1A60     		str	r2, [r3]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 192              		.loc 1 261 0
 193 006c 2B68     		ldr	r3, [r5]
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 194              		.loc 1 262 0
 195 006e 3020     		movs	r0, #48
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 196              		.loc 1 261 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 57


 197 0070 0193     		str	r3, [sp, #4]
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 198              		.loc 1 262 0
 199 0072 FFF7FEFF 		bl	CySysFlashSetWaitCycles
 200              	.LVL12:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 201              		.loc 1 263 0
 202 0076 8021     		movs	r1, #128
 203 0078 224A     		ldr	r2, .L37+32
 204 007a C905     		lsls	r1, r1, #23
 205 007c 1368     		ldr	r3, [r2]
 206 007e 0B43     		orrs	r3, r1
 207 0080 1360     		str	r3, [r2]
 208              	.LVL13:
 209              	.LBB45:
 210              	.LBB46:
2570:Generated_Source\PSoC4/CyLib.c **** }
 211              		.loc 1 2570 0
 212 0082 214B     		ldr	r3, .L37+36
 213 0084 1868     		ldr	r0, [r3]
 214 0086 8300     		lsls	r3, r0, #2
 215 0088 1818     		adds	r0, r3, r0
 216 008a 8000     		lsls	r0, r0, #2
 217 008c FFF7FEFF 		bl	CyDelayCycles
 218              	.LVL14:
 219              	.LBE46:
 220              	.LBE45:
 265:Generated_Source\PSoC4/CyLib.c **** 
 221              		.loc 1 265 0
 222 0090 019B     		ldr	r3, [sp, #4]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 223              		.loc 1 267 0
 224 0092 2000     		movs	r0, r4
 265:Generated_Source\PSoC4/CyLib.c **** 
 225              		.loc 1 265 0
 226 0094 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 227              		.loc 1 267 0
 228 0096 FFF7FEFF 		bl	CyExitCriticalSection
 229              	.LVL15:
 269:Generated_Source\PSoC4/CyLib.c **** 
 230              		.loc 1 269 0
 231 009a 02B0     		add	sp, sp, #8
 232              		@ sp needed
 233              	.LVL16:
 234 009c 70BD     		pop	{r4, r5, r6, pc}
 235              	.LVL17:
 236              	.L35:
 225:Generated_Source\PSoC4/CyLib.c ****                 {
 237              		.loc 1 225 0
 238 009e 144B     		ldr	r3, .L37+12
 239 00a0 1B68     		ldr	r3, [r3]
 240 00a2 DB06     		lsls	r3, r3, #27
 241 00a4 14D1     		bne	.L32
 242 00a6 5B21     		movs	r1, #91
 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 243              		.loc 1 200 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 58


 244 00a8 0322     		movs	r2, #3
 245              	.LVL18:
 246              	.L16:
 227:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 247              		.loc 1 227 0
 248 00aa 1F20     		movs	r0, #31
 249 00ac 104D     		ldr	r5, .L37+12
 250 00ae 2B68     		ldr	r3, [r5]
 251 00b0 8343     		bics	r3, r0
 252 00b2 1338     		subs	r0, r0, #19
 253 00b4 0343     		orrs	r3, r0
 254 00b6 2B60     		str	r3, [r5]
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 255              		.loc 1 232 0
 256 00b8 0E4B     		ldr	r3, .L37+16
 257 00ba 1868     		ldr	r0, [r3]
 258 00bc 0E4B     		ldr	r3, .L37+20
 259 00be 0340     		ands	r3, r0
 260              	.LVL19:
 238:Generated_Source\PSoC4/CyLib.c **** 
 261              		.loc 1 238 0
 262 00c0 0B43     		orrs	r3, r1
 263              	.LVL20:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 264              		.loc 1 244 0
 265 00c2 192A     		cmp	r2, #25
 266 00c4 C2D8     		bhi	.L20
 267              	.LVL21:
 268              	.L23:
 246:Generated_Source\PSoC4/CyLib.c ****             }
 269              		.loc 1 246 0
 270 00c6 114A     		ldr	r2, .L37+40
 271 00c8 1A43     		orrs	r2, r3
 272              	.LVL22:
 273 00ca CCE7     		b	.L21
 274              	.LVL23:
 275              	.L36:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 276              		.loc 1 256 0
 277 00cc FF22     		movs	r2, #255
 278 00ce C8E7     		b	.L22
 279              	.LVL24:
 280              	.L32:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 281              		.loc 1 232 0
 282 00d0 084B     		ldr	r3, .L37+16
 283 00d2 1A68     		ldr	r2, [r3]
 284              	.LVL25:
 285 00d4 084B     		ldr	r3, .L37+20
 286 00d6 1340     		ands	r3, r2
 287              	.LVL26:
 238:Generated_Source\PSoC4/CyLib.c **** 
 288              		.loc 1 238 0
 289 00d8 5B22     		movs	r2, #91
 290 00da 1343     		orrs	r3, r2
 291              	.LVL27:
 246:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 59


 292              		.loc 1 246 0
 293 00dc 0B4A     		ldr	r2, .L37+40
 294 00de 1A43     		orrs	r2, r3
 295              	.LVL28:
 296 00e0 C1E7     		b	.L21
 297              	.L38:
 298 00e2 C046     		.align	2
 299              	.L37:
 300 00e4 2CFF0B40 		.word	1074528044
 301 00e8 00000000 		.word	.LANCHOR1
 302 00ec 40420F00 		.word	1000000
 303 00f0 34FF0B40 		.word	1074528052
 304 00f4 08002240 		.word	1075970056
 305 00f8 00F800C0 		.word	-1073678336
 306 00fc CDF1FF0F 		.word	268431821
 307 0100 30001040 		.word	1074790448
 308 0104 00002240 		.word	1075970048
 309 0108 00000000 		.word	.LANCHOR2
 310 010c 0000D43F 		.word	1070858240
 311              		.cfi_endproc
 312              	.LFE55:
 313              		.size	CySysClkImoEnableWcoLock.part.0, .-CySysClkImoEnableWcoLock.part.0
 314              		.section	.text.CySysClkImoStart,"ax",%progbits
 315              		.align	2
 316              		.global	CySysClkImoStart
 317              		.code	16
 318              		.thumb_func
 319              		.type	CySysClkImoStart, %function
 320              	CySysClkImoStart:
 321              	.LFB1:
 108:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 322              		.loc 1 108 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 109:Generated_Source\PSoC4/CyLib.c **** 
 327              		.loc 1 109 0
 328 0000 8021     		movs	r1, #128
 329 0002 034A     		ldr	r2, .L40
 330 0004 0906     		lsls	r1, r1, #24
 331 0006 1368     		ldr	r3, [r2]
 124:Generated_Source\PSoC4/CyLib.c **** 
 332              		.loc 1 124 0
 333              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c **** 
 334              		.loc 1 109 0
 335 0008 0B43     		orrs	r3, r1
 336 000a 1360     		str	r3, [r2]
 124:Generated_Source\PSoC4/CyLib.c **** 
 337              		.loc 1 124 0
 338 000c 7047     		bx	lr
 339              	.L41:
 340 000e C046     		.align	2
 341              	.L40:
 342 0010 08010B40 		.word	1074462984
 343              		.cfi_endproc
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 60


 344              	.LFE1:
 345              		.size	CySysClkImoStart, .-CySysClkImoStart
 346              		.section	.text.CySysClkImoStop,"ax",%progbits
 347              		.align	2
 348              		.global	CySysClkImoStop
 349              		.code	16
 350              		.thumb_func
 351              		.type	CySysClkImoStop, %function
 352              	CySysClkImoStop:
 353              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 354              		.loc 1 140 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LBB47:
 360              	.LBB48:
 287:Generated_Source\PSoC4/CyLib.c ****     }
 361              		.loc 1 287 0
 362 0000 054A     		ldr	r2, .L43
 363 0002 064B     		ldr	r3, .L43+4
 364 0004 1168     		ldr	r1, [r2]
 365              	.LBE48:
 366              	.LBE47:
 150:Generated_Source\PSoC4/CyLib.c **** 
 367              		.loc 1 150 0
 368              		@ sp needed
 369              	.LBB50:
 370              	.LBB49:
 287:Generated_Source\PSoC4/CyLib.c ****     }
 371              		.loc 1 287 0
 372 0006 0B40     		ands	r3, r1
 373 0008 1360     		str	r3, [r2]
 374              	.LBE49:
 375              	.LBE50:
 149:Generated_Source\PSoC4/CyLib.c **** }
 376              		.loc 1 149 0
 377 000a 054A     		ldr	r2, .L43+8
 378 000c 1368     		ldr	r3, [r2]
 379 000e 5B00     		lsls	r3, r3, #1
 380 0010 5B08     		lsrs	r3, r3, #1
 381 0012 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 382              		.loc 1 150 0
 383 0014 7047     		bx	lr
 384              	.L44:
 385 0016 C046     		.align	2
 386              	.L43:
 387 0018 00002240 		.word	1075970048
 388 001c FFFFFFBF 		.word	-1073741825
 389 0020 08010B40 		.word	1074462984
 390              		.cfi_endproc
 391              	.LFE2:
 392              		.size	CySysClkImoStop, .-CySysClkImoStop
 393              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 394              		.align	2
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 61


 395              		.global	CySysClkImoEnableWcoLock
 396              		.code	16
 397              		.thumb_func
 398              		.type	CySysClkImoEnableWcoLock, %function
 399              	CySysClkImoEnableWcoLock:
 400              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 401              		.loc 1 176 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              	.LVL29:
 406 0000 10B5     		push	{r4, lr}
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 187:Generated_Source\PSoC4/CyLib.c ****         {
 410              		.loc 1 187 0
 411 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 412              	.LVL30:
 413 0006 0028     		cmp	r0, #0
 414 0008 01D0     		beq	.L45
 415 000a FFF7FEFF 		bl	CySysClkImoEnableWcoLock.part.0
 416              	.LVL31:
 417              	.L45:
 269:Generated_Source\PSoC4/CyLib.c **** 
 418              		.loc 1 269 0
 419              		@ sp needed
 420 000e 10BD     		pop	{r4, pc}
 421              		.cfi_endproc
 422              	.LFE3:
 423              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 424              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
 425              		.align	2
 426              		.global	CySysClkImoDisableWcoLock
 427              		.code	16
 428              		.thumb_func
 429              		.type	CySysClkImoDisableWcoLock, %function
 430              	CySysClkImoDisableWcoLock:
 431              	.LFB4:
 286:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 432              		.loc 1 286 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 287:Generated_Source\PSoC4/CyLib.c ****     }
 437              		.loc 1 287 0
 438 0000 024A     		ldr	r2, .L51
 439 0002 034B     		ldr	r3, .L51+4
 440 0004 1168     		ldr	r1, [r2]
 288:Generated_Source\PSoC4/CyLib.c **** 
 441              		.loc 1 288 0
 442              		@ sp needed
 287:Generated_Source\PSoC4/CyLib.c ****     }
 443              		.loc 1 287 0
 444 0006 0B40     		ands	r3, r1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 62


 445 0008 1360     		str	r3, [r2]
 288:Generated_Source\PSoC4/CyLib.c **** 
 446              		.loc 1 288 0
 447 000a 7047     		bx	lr
 448              	.L52:
 449              		.align	2
 450              	.L51:
 451 000c 00002240 		.word	1075970048
 452 0010 FFFFFFBF 		.word	-1073741825
 453              		.cfi_endproc
 454              	.LFE4:
 455              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
 456              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 457              		.align	2
 458              		.global	CySysClkImoGetWcoLock
 459              		.code	16
 460              		.thumb_func
 461              		.type	CySysClkImoGetWcoLock, %function
 462              	CySysClkImoGetWcoLock:
 463              	.LFB5:
 305:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 464              		.loc 1 305 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 306:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 469              		.loc 1 306 0
 470 0000 024B     		ldr	r3, .L54
 309:Generated_Source\PSoC4/CyLib.c **** 
 471              		.loc 1 309 0
 472              		@ sp needed
 306:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 473              		.loc 1 306 0
 474 0002 1868     		ldr	r0, [r3]
 475 0004 4000     		lsls	r0, r0, #1
 476 0006 C00F     		lsrs	r0, r0, #31
 309:Generated_Source\PSoC4/CyLib.c **** 
 477              		.loc 1 309 0
 478 0008 7047     		bx	lr
 479              	.L55:
 480 000a C046     		.align	2
 481              	.L54:
 482 000c 00002240 		.word	1075970048
 483              		.cfi_endproc
 484              	.LFE5:
 485              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 486              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 487              		.align	2
 488              		.global	CySysClkWriteHfclkDirect
 489              		.code	16
 490              		.thumb_func
 491              		.type	CySysClkWriteHfclkDirect, %function
 492              	CySysClkWriteHfclkDirect:
 493              	.LFB6:
 430:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 494              		.loc 1 430 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 63


 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              	.LVL32:
 499 0000 10B5     		push	{r4, lr}
 500              		.cfi_def_cfa_offset 8
 501              		.cfi_offset 4, -8
 502              		.cfi_offset 14, -4
 430:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 503              		.loc 1 430 0
 504 0002 0400     		movs	r4, r0
 434:Generated_Source\PSoC4/CyLib.c **** 
 505              		.loc 1 434 0
 506 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 507              	.LVL33:
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 508              		.loc 1 437 0
 509 0008 0723     		movs	r3, #7
 510 000a 0449     		ldr	r1, .L57
 454:Generated_Source\PSoC4/CyLib.c **** 
 511              		.loc 1 454 0
 512              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 513              		.loc 1 437 0
 514 000c 0A68     		ldr	r2, [r1]
 515 000e 9A43     		bics	r2, r3
 516              	.LVL34:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 517              		.loc 1 448 0
 518 0010 2340     		ands	r3, r4
 519 0012 1343     		orrs	r3, r2
 520              	.LVL35:
 451:Generated_Source\PSoC4/CyLib.c **** 
 521              		.loc 1 451 0
 522 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 523              		.loc 1 453 0
 524 0016 FFF7FEFF 		bl	CyExitCriticalSection
 525              	.LVL36:
 526              	.LVL37:
 454:Generated_Source\PSoC4/CyLib.c **** 
 527              		.loc 1 454 0
 528 001a 10BD     		pop	{r4, pc}
 529              	.L58:
 530              		.align	2
 531              	.L57:
 532 001c 00010B40 		.word	1074462976
 533              		.cfi_endproc
 534              	.LFE6:
 535              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 536              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 537              		.align	2
 538              		.global	CySysEnablePumpClock
 539              		.code	16
 540              		.thumb_func
 541              		.type	CySysEnablePumpClock, %function
 542              	CySysEnablePumpClock:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 64


 543              	.LFB7:
 474:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 544              		.loc 1 474 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549              	.LVL38:
 476:Generated_Source\PSoC4/CyLib.c ****         {
 550              		.loc 1 476 0
 551 0000 C307     		lsls	r3, r0, #31
 552 0002 0AD4     		bmi	.L62
 482:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 553              		.loc 1 482 0
 554 0004 094A     		ldr	r2, .L63
 555 0006 0A49     		ldr	r1, .L63+4
 556 0008 1368     		ldr	r3, [r2]
 557 000a 1B01     		lsls	r3, r3, #4
 558 000c 5B0F     		lsrs	r3, r3, #29
 559 000e 4B60     		str	r3, [r1, #4]
 484:Generated_Source\PSoC4/CyLib.c ****         }
 560              		.loc 1 484 0
 561 0010 1168     		ldr	r1, [r2]
 562 0012 084B     		ldr	r3, .L63+8
 563 0014 0B40     		ands	r3, r1
 564 0016 1360     		str	r3, [r2]
 565              	.L59:
 498:Generated_Source\PSoC4/CyLib.c **** 
 566              		.loc 1 498 0
 567              		@ sp needed
 568 0018 7047     		bx	lr
 569              	.L62:
 478:Generated_Source\PSoC4/CyLib.c ****         }
 570              		.loc 1 478 0
 571 001a 054B     		ldr	r3, .L63+4
 572 001c 0349     		ldr	r1, .L63
 573 001e 5B68     		ldr	r3, [r3, #4]
 574 0020 0A68     		ldr	r2, [r1]
 575 0022 5B06     		lsls	r3, r3, #25
 576 0024 1343     		orrs	r3, r2
 577 0026 0B60     		str	r3, [r1]
 578 0028 F6E7     		b	.L59
 579              	.L64:
 580 002a C046     		.align	2
 581              	.L63:
 582 002c 08010B40 		.word	1074462984
 583 0030 00000000 		.word	.LANCHOR2
 584 0034 FFFFFFF1 		.word	-234881025
 585              		.cfi_endproc
 586              	.LFE7:
 587              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 588              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 589              		.align	2
 590              		.global	CySysClkGetSysclkSource
 591              		.code	16
 592              		.thumb_func
 593              		.type	CySysClkGetSysclkSource, %function
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 65


 594              	CySysClkGetSysclkSource:
 595              	.LFB8:
 511:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 596              		.loc 1 511 0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600 0000 10B5     		push	{r4, lr}
 601              		.cfi_def_cfa_offset 8
 602              		.cfi_offset 4, -8
 603              		.cfi_offset 14, -4
 515:Generated_Source\PSoC4/CyLib.c **** 
 604              		.loc 1 515 0
 605 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 606              	.LVL39:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 607              		.loc 1 525 0
 608 0006 034B     		ldr	r3, .L66
 531:Generated_Source\PSoC4/CyLib.c **** 
 609              		.loc 1 531 0
 610              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 611              		.loc 1 525 0
 612 0008 1C68     		ldr	r4, [r3]
 613              	.LVL40:
 528:Generated_Source\PSoC4/CyLib.c **** 
 614              		.loc 1 528 0
 615 000a FFF7FEFF 		bl	CyExitCriticalSection
 616              	.LVL41:
 530:Generated_Source\PSoC4/CyLib.c **** }
 617              		.loc 1 530 0
 618 000e 0720     		movs	r0, #7
 619 0010 2040     		ands	r0, r4
 620              	.LVL42:
 531:Generated_Source\PSoC4/CyLib.c **** 
 621              		.loc 1 531 0
 622 0012 10BD     		pop	{r4, pc}
 623              	.L67:
 624              		.align	2
 625              	.L66:
 626 0014 00010B40 		.word	1074462976
 627              		.cfi_endproc
 628              	.LFE8:
 629              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 630              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 631              		.align	2
 632              		.global	CySysClkWriteSysclkDiv
 633              		.code	16
 634              		.thumb_func
 635              		.type	CySysClkWriteSysclkDiv, %function
 636              	CySysClkWriteSysclkDiv:
 637              	.LFB9:
 566:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 638              		.loc 1 566 0
 639              		.cfi_startproc
 640              		@ args = 0, pretend = 0, frame = 0
 641              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 66


 642              	.LVL43:
 643 0000 70B5     		push	{r4, r5, r6, lr}
 644              		.cfi_def_cfa_offset 16
 645              		.cfi_offset 4, -16
 646              		.cfi_offset 5, -12
 647              		.cfi_offset 6, -8
 648              		.cfi_offset 14, -4
 566:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 649              		.loc 1 566 0
 650 0002 0400     		movs	r4, r0
 569:Generated_Source\PSoC4/CyLib.c **** 
 651              		.loc 1 569 0
 652 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 653              	.LVL44:
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 654              		.loc 1 572 0
 655 0008 E104     		lsls	r1, r4, #19
 656 000a E024     		movs	r4, #224
 657              	.LVL45:
 573:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 658              		.loc 1 573 0
 659 000c 054D     		ldr	r5, .L69
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 660              		.loc 1 572 0
 661 000e A403     		lsls	r4, r4, #14
 573:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 662              		.loc 1 573 0
 663 0010 2B68     		ldr	r3, [r5]
 572:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 664              		.loc 1 572 0
 665 0012 054A     		ldr	r2, .L69+4
 666 0014 2140     		ands	r1, r4
 667 0016 1A40     		ands	r2, r3
 668 0018 0B00     		movs	r3, r1
 669 001a 1343     		orrs	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 670              		.loc 1 571 0
 671 001c 2B60     		str	r3, [r5]
 576:Generated_Source\PSoC4/CyLib.c **** }
 672              		.loc 1 576 0
 673 001e FFF7FEFF 		bl	CyExitCriticalSection
 674              	.LVL46:
 577:Generated_Source\PSoC4/CyLib.c **** 
 675              		.loc 1 577 0
 676              		@ sp needed
 677 0022 70BD     		pop	{r4, r5, r6, pc}
 678              	.L70:
 679              		.align	2
 680              	.L69:
 681 0024 00010B40 		.word	1074462976
 682 0028 FFFFC7FF 		.word	-3670017
 683              		.cfi_endproc
 684              	.LFE9:
 685              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 686              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 687              		.align	2
 688              		.global	CySysClkWriteImoFreq
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 67


 689              		.code	16
 690              		.thumb_func
 691              		.type	CySysClkWriteImoFreq, %function
 692              	CySysClkWriteImoFreq:
 693              	.LFB10:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 694              		.loc 1 624 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 24
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              	.LVL47:
 699 0000 30B5     		push	{r4, r5, lr}
 700              		.cfi_def_cfa_offset 12
 701              		.cfi_offset 4, -12
 702              		.cfi_offset 5, -8
 703              		.cfi_offset 14, -4
 704 0002 87B0     		sub	sp, sp, #28
 705              		.cfi_def_cfa_offset 40
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 706              		.loc 1 624 0
 707 0004 0500     		movs	r5, r0
 647:Generated_Source\PSoC4/CyLib.c **** 
 708              		.loc 1 647 0
 709 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 710              	.LVL48:
 711              	.LBB51:
 712              	.LBB52:
 306:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 713              		.loc 1 306 0
 714 000a 194B     		ldr	r3, .L82
 715              	.LBE52:
 716              	.LBE51:
 647:Generated_Source\PSoC4/CyLib.c **** 
 717              		.loc 1 647 0
 718 000c 0400     		movs	r4, r0
 719              	.LVL49:
 720              	.LBB54:
 721              	.LBB53:
 306:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 722              		.loc 1 306 0
 723 000e 1A68     		ldr	r2, [r3]
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 724              		.loc 1 307 0
 725 0010 5200     		lsls	r2, r2, #1
 726 0012 20D4     		bmi	.L72
 727              	.LBE53:
 728              	.LBE54:
 637:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 729              		.loc 1 637 0
 730 0014 0022     		movs	r2, #0
 731              	.LVL50:
 732              	.L76:
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 733              		.loc 1 681 0
 734 0016 174B     		ldr	r3, .L82+4
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 735              		.loc 1 683 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 68


 736 0018 1748     		ldr	r0, .L82+8
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 737              		.loc 1 681 0
 738 001a 1968     		ldr	r1, [r3]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 739              		.loc 1 683 0
 740 001c 4019     		adds	r0, r0, r5
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 741              		.loc 1 681 0
 742 001e 0291     		str	r1, [sp, #8]
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 743              		.loc 1 682 0
 744 0020 1649     		ldr	r1, .L82+12
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 745              		.loc 1 683 0
 746 0022 0338     		subs	r0, r0, #3
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 747              		.loc 1 682 0
 748 0024 0968     		ldr	r1, [r1]
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 749              		.loc 1 681 0
 750 0026 02AB     		add	r3, sp, #8
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 751              		.loc 1 682 0
 752 0028 0391     		str	r1, [sp, #12]
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 753              		.loc 1 683 0
 754 002a 0178     		ldrb	r1, [r0]
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 755              		.loc 1 692 0
 756 002c 1448     		ldr	r0, .L82+16
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 757              		.loc 1 683 0
 758 002e 0491     		str	r1, [sp, #16]
 684:Generated_Source\PSoC4/CyLib.c **** 
 759              		.loc 1 684 0
 760 0030 1449     		ldr	r1, .L82+20
 761 0032 0968     		ldr	r1, [r1]
 762 0034 0591     		str	r1, [sp, #20]
 686:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 763              		.loc 1 686 0
 764 0036 1449     		ldr	r1, .L82+24
 765 0038 0091     		str	r1, [sp]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 766              		.loc 1 691 0
 767 003a 6946     		mov	r1, sp
 689:Generated_Source\PSoC4/CyLib.c **** 
 768              		.loc 1 689 0
 769 003c 0193     		str	r3, [sp, #4]
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 770              		.loc 1 691 0
 771 003e 134B     		ldr	r3, .L82+28
 772 0040 1960     		str	r1, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 773              		.loc 1 692 0
 774 0042 1349     		ldr	r1, .L82+32
 775 0044 0860     		str	r0, [r1]
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 69


 693:Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 693 0
 777 0046 1B68     		ldr	r3, [r3]
 810:Generated_Source\PSoC4/CyLib.c ****             {
 778              		.loc 1 810 0
 779 0048 012A     		cmp	r2, #1
 780 004a 0AD0     		beq	.L81
 781              	.LVL51:
 782              	.L74:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 783              		.loc 1 823 0
 784 004c 2000     		movs	r0, r4
 785 004e FFF7FEFF 		bl	CyExitCriticalSection
 786              	.LVL52:
 824:Generated_Source\PSoC4/CyLib.c **** 
 787              		.loc 1 824 0
 788 0052 07B0     		add	sp, sp, #28
 789              		@ sp needed
 790              	.LVL53:
 791              	.LVL54:
 792 0054 30BD     		pop	{r4, r5, pc}
 793              	.LVL55:
 794              	.L72:
 795              	.LBB55:
 796              	.LBB56:
 287:Generated_Source\PSoC4/CyLib.c ****     }
 797              		.loc 1 287 0
 798 0056 1968     		ldr	r1, [r3]
 799 0058 0E4A     		ldr	r2, .L82+36
 800 005a 0A40     		ands	r2, r1
 801 005c 1A60     		str	r2, [r3]
 802              	.LBE56:
 803              	.LBE55:
 652:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 804              		.loc 1 652 0
 805 005e 0122     		movs	r2, #1
 806 0060 D9E7     		b	.L76
 807              	.LVL56:
 808              	.L81:
 809              	.LBB57:
 810              	.LBB58:
 187:Generated_Source\PSoC4/CyLib.c ****         {
 811              		.loc 1 187 0
 812 0062 FFF7FEFF 		bl	CySysClkWcoEnabled
 813              	.LVL57:
 814 0066 0028     		cmp	r0, #0
 815 0068 F0D0     		beq	.L74
 816 006a FFF7FEFF 		bl	CySysClkImoEnableWcoLock.part.0
 817              	.LVL58:
 818 006e EDE7     		b	.L74
 819              	.L83:
 820              		.align	2
 821              	.L82:
 822 0070 00002240 		.word	1075970048
 823 0074 08010B40 		.word	1074462984
 824 0078 00000000 		.word	.LANCHOR1
 825 007c 00010B40 		.word	1074462976
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 70


 826 0080 17000080 		.word	-2147483625
 827 0084 30001040 		.word	1074790448
 828 0088 B6EA0000 		.word	60086
 829 008c 08001040 		.word	1074790408
 830 0090 04001040 		.word	1074790404
 831 0094 FFFFFFBF 		.word	-1073741825
 832              	.LBE58:
 833              	.LBE57:
 834              		.cfi_endproc
 835              	.LFE10:
 836              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 837              		.section	.text.CySysLvdEnable,"ax",%progbits
 838              		.align	2
 839              		.global	CySysLvdEnable
 840              		.code	16
 841              		.thumb_func
 842              		.type	CySysLvdEnable, %function
 843              	CySysLvdEnable:
 844              	.LFB11:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 845              		.loc 1 2119 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              	.LVL59:
 850 0000 70B5     		push	{r4, r5, r6, lr}
 851              		.cfi_def_cfa_offset 16
 852              		.cfi_offset 4, -16
 853              		.cfi_offset 5, -12
 854              		.cfi_offset 6, -8
 855              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 856              		.loc 1 2121 0
 857 0002 0224     		movs	r4, #2
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 858              		.loc 1 2124 0
 859 0004 1E21     		movs	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2121 0
 861 0006 0E4D     		ldr	r5, .L85
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 862              		.loc 1 2124 0
 863 0008 0E4A     		ldr	r2, .L85+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 864              		.loc 1 2121 0
 865 000a 2B68     		ldr	r3, [r5]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 866              		.loc 1 2124 0
 867 000c 4000     		lsls	r0, r0, #1
 868              	.LVL60:
2121:Generated_Source\PSoC4/CyLib.c **** 
 869              		.loc 1 2121 0
 870 000e A343     		bics	r3, r4
 871 0010 2B60     		str	r3, [r5]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 872              		.loc 1 2124 0
 873 0012 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 71


 874 0014 0840     		ands	r0, r1
 875 0016 8B43     		bics	r3, r1
 876 0018 1843     		orrs	r0, r3
2128:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2128 0
 878 001a 0123     		movs	r3, #1
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 879              		.loc 1 2124 0
 880 001c 1060     		str	r0, [r2]
2128:Generated_Source\PSoC4/CyLib.c **** 
 881              		.loc 1 2128 0
 882 001e 1168     		ldr	r1, [r2]
2138:Generated_Source\PSoC4/CyLib.c **** 
 883              		.loc 1 2138 0
 884              		@ sp needed
2128:Generated_Source\PSoC4/CyLib.c **** 
 885              		.loc 1 2128 0
 886 0020 0B43     		orrs	r3, r1
 887 0022 1360     		str	r3, [r2]
 888              	.LVL61:
 889              	.LBB59:
 890              	.LBB60:
2584:Generated_Source\PSoC4/CyLib.c **** }
 891              		.loc 1 2584 0
 892 0024 084B     		ldr	r3, .L85+8
 893 0026 187A     		ldrb	r0, [r3, #8]
 894 0028 FA23     		movs	r3, #250
 895 002a 9B00     		lsls	r3, r3, #2
 896 002c 5843     		muls	r0, r3
 897 002e FFF7FEFF 		bl	CyDelayCycles
 898              	.LVL62:
 899              	.LBE60:
 900              	.LBE59:
 901              	.LBB61:
 902              	.LBB62:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 903              		.loc 1 2184 0
 904 0032 064B     		ldr	r3, .L85+12
 905 0034 1C60     		str	r4, [r3]
 906              	.LBE62:
 907              	.LBE61:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 908              		.loc 1 2137 0
 909 0036 2B68     		ldr	r3, [r5]
 910 0038 1C43     		orrs	r4, r3
 911 003a 2C60     		str	r4, [r5]
2138:Generated_Source\PSoC4/CyLib.c **** 
 912              		.loc 1 2138 0
 913 003c 70BD     		pop	{r4, r5, r6, pc}
 914              	.L86:
 915 003e C046     		.align	2
 916              	.L85:
 917 0040 08000B40 		.word	1074462728
 918 0044 18000B40 		.word	1074462744
 919 0048 00000000 		.word	.LANCHOR2
 920 004c 04000B40 		.word	1074462724
 921              		.cfi_endproc
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 72


 922              	.LFE11:
 923              		.size	CySysLvdEnable, .-CySysLvdEnable
 924              		.section	.text.CySysLvdDisable,"ax",%progbits
 925              		.align	2
 926              		.global	CySysLvdDisable
 927              		.code	16
 928              		.thumb_func
 929              		.type	CySysLvdDisable, %function
 930              	CySysLvdDisable:
 931              	.LFB12:
2149:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 932              		.loc 1 2149 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              		@ link register save eliminated.
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 937              		.loc 1 2150 0
 938 0000 0221     		movs	r1, #2
 939 0002 054A     		ldr	r2, .L88
2152:Generated_Source\PSoC4/CyLib.c **** 
 940              		.loc 1 2152 0
 941              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 942              		.loc 1 2150 0
 943 0004 1368     		ldr	r3, [r2]
 944 0006 8B43     		bics	r3, r1
 945 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****     }
 946              		.loc 1 2151 0
 947 000a 044A     		ldr	r2, .L88+4
 948 000c 0139     		subs	r1, r1, #1
 949 000e 1368     		ldr	r3, [r2]
 950 0010 8B43     		bics	r3, r1
 951 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c **** 
 952              		.loc 1 2152 0
 953 0014 7047     		bx	lr
 954              	.L89:
 955 0016 C046     		.align	2
 956              	.L88:
 957 0018 08000B40 		.word	1074462728
 958 001c 18000B40 		.word	1074462744
 959              		.cfi_endproc
 960              	.LFE12:
 961              		.size	CySysLvdDisable, .-CySysLvdDisable
 962              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 963              		.align	2
 964              		.global	CySysLvdGetInterruptSource
 965              		.code	16
 966              		.thumb_func
 967              		.type	CySysLvdGetInterruptSource, %function
 968              	CySysLvdGetInterruptSource:
 969              	.LFB13:
2167:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 970              		.loc 1 2167 0
 971              		.cfi_startproc
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 73


 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              		@ link register save eliminated.
2168:Generated_Source\PSoC4/CyLib.c ****     }
 975              		.loc 1 2168 0
 976 0000 0220     		movs	r0, #2
 977 0002 024B     		ldr	r3, .L91
2169:Generated_Source\PSoC4/CyLib.c **** 
 978              		.loc 1 2169 0
 979              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****     }
 980              		.loc 1 2168 0
 981 0004 1B68     		ldr	r3, [r3]
 982 0006 1840     		ands	r0, r3
2169:Generated_Source\PSoC4/CyLib.c **** 
 983              		.loc 1 2169 0
 984 0008 7047     		bx	lr
 985              	.L92:
 986 000a C046     		.align	2
 987              	.L91:
 988 000c 04000B40 		.word	1074462724
 989              		.cfi_endproc
 990              	.LFE13:
 991              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 992              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 993              		.align	2
 994              		.global	CySysLvdClearInterrupt
 995              		.code	16
 996              		.thumb_func
 997              		.type	CySysLvdClearInterrupt, %function
 998              	CySysLvdClearInterrupt:
 999              	.LFB14:
2183:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 1000              		.loc 1 2183 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 0, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1005              		.loc 1 2184 0
 1006 0000 0222     		movs	r2, #2
 1007 0002 014B     		ldr	r3, .L94
2185:Generated_Source\PSoC4/CyLib.c **** 
 1008              		.loc 1 2185 0
 1009              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1010              		.loc 1 2184 0
 1011 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c **** 
 1012              		.loc 1 2185 0
 1013 0006 7047     		bx	lr
 1014              	.L95:
 1015              		.align	2
 1016              	.L94:
 1017 0008 04000B40 		.word	1074462724
 1018              		.cfi_endproc
 1019              	.LFE14:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 74


 1020              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 1021              		.section	.text.CySysGetResetReason,"ax",%progbits
 1022              		.align	2
 1023              		.global	CySysGetResetReason
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	CySysGetResetReason, %function
 1027              	CySysGetResetReason:
 1028              	.LFB15:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 1029              		.loc 1 2209 0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
 1034              	.LVL63:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 1035              		.loc 1 2209 0
 1036 0000 0200     		movs	r2, r0
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1037              		.loc 1 2212 0
 1038 0002 1920     		movs	r0, #25
 1039              	.LVL64:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1040              		.loc 1 2213 0
 1041 0004 0249     		ldr	r1, .L97
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 1042              		.loc 1 2212 0
 1043 0006 0240     		ands	r2, r0
 1044              	.LVL65:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 1045              		.loc 1 2213 0
 1046 0008 0B68     		ldr	r3, [r1]
 1047              	.LVL66:
2218:Generated_Source\PSoC4/CyLib.c **** 
 1048              		.loc 1 2218 0
 1049              		@ sp needed
2217:Generated_Source\PSoC4/CyLib.c **** }
 1050              		.loc 1 2217 0
 1051 000a 1840     		ands	r0, r3
 1052              	.LVL67:
2215:Generated_Source\PSoC4/CyLib.c **** 
 1053              		.loc 1 2215 0
 1054 000c 0A60     		str	r2, [r1]
2218:Generated_Source\PSoC4/CyLib.c **** 
 1055              		.loc 1 2218 0
 1056 000e 7047     		bx	lr
 1057              	.L98:
 1058              		.align	2
 1059              	.L97:
 1060 0010 00030B40 		.word	1074463488
 1061              		.cfi_endproc
 1062              	.LFE15:
 1063              		.size	CySysGetResetReason, .-CySysGetResetReason
 1064              		.section	.text.CyDisableInts,"ax",%progbits
 1065              		.align	2
 1066              		.global	CyDisableInts
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 75


 1067              		.code	16
 1068              		.thumb_func
 1069              		.type	CyDisableInts, %function
 1070              	CyDisableInts:
 1071              	.LFB16:
2232:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 1072              		.loc 1 2232 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
2239:Generated_Source\PSoC4/CyLib.c **** 
 1077              		.loc 1 2239 0
 1078 0000 0122     		movs	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 1079              		.loc 1 2236 0
 1080 0002 024B     		ldr	r3, .L100
2239:Generated_Source\PSoC4/CyLib.c **** 
 1081              		.loc 1 2239 0
 1082 0004 5242     		rsbs	r2, r2, #0
2236:Generated_Source\PSoC4/CyLib.c **** 
 1083              		.loc 1 2236 0
 1084 0006 1868     		ldr	r0, [r3]
 1085              	.LVL68:
2242:Generated_Source\PSoC4/CyLib.c **** 
 1086              		.loc 1 2242 0
 1087              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 1088              		.loc 1 2239 0
 1089 0008 1A60     		str	r2, [r3]
2242:Generated_Source\PSoC4/CyLib.c **** 
 1090              		.loc 1 2242 0
 1091 000a 7047     		bx	lr
 1092              	.L101:
 1093              		.align	2
 1094              	.L100:
 1095 000c 80E100E0 		.word	-536813184
 1096              		.cfi_endproc
 1097              	.LFE16:
 1098              		.size	CyDisableInts, .-CyDisableInts
 1099              		.section	.text.CyEnableInts,"ax",%progbits
 1100              		.align	2
 1101              		.global	CyEnableInts
 1102              		.code	16
 1103              		.thumb_func
 1104              		.type	CyEnableInts, %function
 1105              	CyEnableInts:
 1106              	.LFB17:
2255:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1107              		.loc 1 2255 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111              		@ link register save eliminated.
 1112              	.LVL69:
2256:Generated_Source\PSoC4/CyLib.c **** }
 1113              		.loc 1 2256 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 76


 1114 0000 014B     		ldr	r3, .L103
2257:Generated_Source\PSoC4/CyLib.c **** 
 1115              		.loc 1 2257 0
 1116              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c **** }
 1117              		.loc 1 2256 0
 1118 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** 
 1119              		.loc 1 2257 0
 1120 0004 7047     		bx	lr
 1121              	.L104:
 1122 0006 C046     		.align	2
 1123              	.L103:
 1124 0008 00E100E0 		.word	-536813312
 1125              		.cfi_endproc
 1126              	.LFE17:
 1127              		.size	CyEnableInts, .-CyEnableInts
 1128              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1129              		.align	2
 1130              		.global	CyIntSetSysVector
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CyIntSetSysVector, %function
 1134              	CyIntSetSysVector:
 1135              	.LFB18:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 1136              		.loc 1 2280 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141              	.LVL70:
2287:Generated_Source\PSoC4/CyLib.c **** 
 1142              		.loc 1 2287 0
 1143 0000 8023     		movs	r3, #128
 1144 0002 8000     		lsls	r0, r0, #2
 1145              	.LVL71:
 1146 0004 9B05     		lsls	r3, r3, #22
 1147 0006 C318     		adds	r3, r0, r3
 1148 0008 1868     		ldr	r0, [r3]
 1149              	.LVL72:
2293:Generated_Source\PSoC4/CyLib.c **** 
 1150              		.loc 1 2293 0
 1151              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 1152              		.loc 1 2290 0
 1153 000a 1960     		str	r1, [r3]
2293:Generated_Source\PSoC4/CyLib.c **** 
 1154              		.loc 1 2293 0
 1155 000c 7047     		bx	lr
 1156              		.cfi_endproc
 1157              	.LFE18:
 1158              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1159 000e C046     		.section	.text.CyIntGetSysVector,"ax",%progbits
 1160              		.align	2
 1161              		.global	CyIntGetSysVector
 1162              		.code	16
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 77


 1163              		.thumb_func
 1164              		.type	CyIntGetSysVector, %function
 1165              	CyIntGetSysVector:
 1166              	.LFB19:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1167              		.loc 1 2314 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172              	.LVL73:
2319:Generated_Source\PSoC4/CyLib.c **** }
 1173              		.loc 1 2319 0
 1174 0000 8023     		movs	r3, #128
 1175 0002 9B05     		lsls	r3, r3, #22
 1176 0004 9C46     		mov	ip, r3
 1177 0006 8000     		lsls	r0, r0, #2
 1178              	.LVL74:
 1179 0008 6044     		add	r0, r0, ip
 1180 000a 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** 
 1181              		.loc 1 2320 0
 1182              		@ sp needed
 1183 000c 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE19:
 1186              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1187 000e C046     		.section	.text.CyIntSetVector,"ax",%progbits
 1188              		.align	2
 1189              		.global	CyIntSetVector
 1190              		.code	16
 1191              		.thumb_func
 1192              		.type	CyIntSetVector, %function
 1193              	CyIntSetVector:
 1194              	.LFB20:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 1195              		.loc 1 2336 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              		@ link register save eliminated.
 1200              	.LVL75:
2343:Generated_Source\PSoC4/CyLib.c **** 
 1201              		.loc 1 2343 0
 1202 0000 024B     		ldr	r3, .L108
 1203 0002 8000     		lsls	r0, r0, #2
 1204              	.LVL76:
 1205 0004 C318     		adds	r3, r0, r3
 1206 0006 1868     		ldr	r0, [r3]
 1207              	.LVL77:
2349:Generated_Source\PSoC4/CyLib.c **** 
 1208              		.loc 1 2349 0
 1209              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 1210              		.loc 1 2346 0
 1211 0008 1960     		str	r1, [r3]
2349:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 78


 1212              		.loc 1 2349 0
 1213 000a 7047     		bx	lr
 1214              	.L109:
 1215              		.align	2
 1216              	.L108:
 1217 000c 40000020 		.word	536870976
 1218              		.cfi_endproc
 1219              	.LFE20:
 1220              		.size	CyIntSetVector, .-CyIntSetVector
 1221              		.section	.text.CyIntGetVector,"ax",%progbits
 1222              		.align	2
 1223              		.global	CyIntGetVector
 1224              		.code	16
 1225              		.thumb_func
 1226              		.type	CyIntGetVector, %function
 1227              	CyIntGetVector:
 1228              	.LFB21:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1229              		.loc 1 2364 0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		@ link register save eliminated.
 1234              	.LVL78:
2369:Generated_Source\PSoC4/CyLib.c **** }
 1235              		.loc 1 2369 0
 1236 0000 024B     		ldr	r3, .L111
 1237 0002 8000     		lsls	r0, r0, #2
 1238              	.LVL79:
 1239 0004 9C46     		mov	ip, r3
 1240 0006 6044     		add	r0, r0, ip
 1241 0008 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** 
 1242              		.loc 1 2370 0
 1243              		@ sp needed
 1244 000a 7047     		bx	lr
 1245              	.L112:
 1246              		.align	2
 1247              	.L111:
 1248 000c 40000020 		.word	536870976
 1249              		.cfi_endproc
 1250              	.LFE21:
 1251              		.size	CyIntGetVector, .-CyIntGetVector
 1252              		.section	.text.CyIntSetPriority,"ax",%progbits
 1253              		.align	2
 1254              		.global	CyIntSetPriority
 1255              		.code	16
 1256              		.thumb_func
 1257              		.type	CyIntSetPriority, %function
 1258              	CyIntSetPriority:
 1259              	.LFB22:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1260              		.loc 1 2383 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264              	.LVL80:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 79


 1265 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1266              		.cfi_def_cfa_offset 24
 1267              		.cfi_offset 3, -24
 1268              		.cfi_offset 4, -20
 1269              		.cfi_offset 5, -16
 1270              		.cfi_offset 6, -12
 1271              		.cfi_offset 7, -8
 1272              		.cfi_offset 14, -4
2391:Generated_Source\PSoC4/CyLib.c **** 
 1273              		.loc 1 2391 0
 1274 0002 0327     		movs	r7, #3
 1275 0004 3D00     		movs	r5, r7
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 1276              		.loc 1 2383 0
 1277 0006 0E00     		movs	r6, r1
 1278 0008 0400     		movs	r4, r0
2391:Generated_Source\PSoC4/CyLib.c **** 
 1279              		.loc 1 2391 0
 1280 000a 0540     		ands	r5, r0
2393:Generated_Source\PSoC4/CyLib.c **** 
 1281              		.loc 1 2393 0
 1282 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1283              	.LVL81:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1284              		.loc 1 2395 0
 1285 0010 084B     		ldr	r3, .L114
 1286 0012 A408     		lsrs	r4, r4, #2
 1287 0014 9C46     		mov	ip, r3
 1288 0016 A400     		lsls	r4, r4, #2
 1289 0018 6444     		add	r4, r4, ip
 1290 001a 2168     		ldr	r1, [r4]
2391:Generated_Source\PSoC4/CyLib.c **** 
 1291              		.loc 1 2391 0
 1292 001c ED00     		lsls	r5, r5, #3
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1293              		.loc 1 2396 0
 1294 001e 0B00     		movs	r3, r1
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1295              		.loc 1 2397 0
 1296 0020 3100     		movs	r1, r6
2391:Generated_Source\PSoC4/CyLib.c **** 
 1297              		.loc 1 2391 0
 1298 0022 0635     		adds	r5, r5, #6
 1299              	.LVL82:
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1300              		.loc 1 2396 0
 1301 0024 AF40     		lsls	r7, r7, r5
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1302              		.loc 1 2397 0
 1303 0026 A940     		lsls	r1, r1, r5
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1304              		.loc 1 2396 0
 1305 0028 BB43     		bics	r3, r7
 1306              	.LVL83:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1307              		.loc 1 2397 0
 1308 002a 1943     		orrs	r1, r3
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 80


 1309              	.LVL84:
2398:Generated_Source\PSoC4/CyLib.c **** 
 1310              		.loc 1 2398 0
 1311 002c 2160     		str	r1, [r4]
2400:Generated_Source\PSoC4/CyLib.c **** }
 1312              		.loc 1 2400 0
 1313 002e FFF7FEFF 		bl	CyExitCriticalSection
 1314              	.LVL85:
2401:Generated_Source\PSoC4/CyLib.c **** 
 1315              		.loc 1 2401 0
 1316              		@ sp needed
 1317              	.LVL86:
 1318 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1319              	.L115:
 1320              		.align	2
 1321              	.L114:
 1322 0034 00E400E0 		.word	-536812544
 1323              		.cfi_endproc
 1324              	.LFE22:
 1325              		.size	CyIntSetPriority, .-CyIntSetPriority
 1326              		.section	.text.CyIntGetPriority,"ax",%progbits
 1327              		.align	2
 1328              		.global	CyIntGetPriority
 1329              		.code	16
 1330              		.thumb_func
 1331              		.type	CyIntGetPriority, %function
 1332              	CyIntGetPriority:
 1333              	.LFB23:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1334              		.loc 1 2417 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              		@ link register save eliminated.
 1339              	.LVL87:
2422:Generated_Source\PSoC4/CyLib.c **** 
 1340              		.loc 1 2422 0
 1341 0000 074A     		ldr	r2, .L117
 1342 0002 8308     		lsrs	r3, r0, #2
 1343 0004 9446     		mov	ip, r2
 1344 0006 9B00     		lsls	r3, r3, #2
 1345 0008 6344     		add	r3, r3, ip
 1346 000a 1A68     		ldr	r2, [r3]
 1347              	.LVL88:
2424:Generated_Source\PSoC4/CyLib.c **** }
 1348              		.loc 1 2424 0
 1349 000c 0321     		movs	r1, #3
 1350 000e 0300     		movs	r3, r0
 1351 0010 0B40     		ands	r3, r1
 1352 0012 DB00     		lsls	r3, r3, #3
 1353 0014 0633     		adds	r3, r3, #6
 1354 0016 DA40     		lsrs	r2, r2, r3
 1355              	.LVL89:
 1356 0018 1000     		movs	r0, r2
 1357              	.LVL90:
2425:Generated_Source\PSoC4/CyLib.c **** 
 1358              		.loc 1 2425 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 81


 1359              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 1360              		.loc 1 2424 0
 1361 001a 0840     		ands	r0, r1
2425:Generated_Source\PSoC4/CyLib.c **** 
 1362              		.loc 1 2425 0
 1363 001c 7047     		bx	lr
 1364              	.L118:
 1365 001e C046     		.align	2
 1366              	.L117:
 1367 0020 00E400E0 		.word	-536812544
 1368              		.cfi_endproc
 1369              	.LFE23:
 1370              		.size	CyIntGetPriority, .-CyIntGetPriority
 1371              		.section	.text.CyIntEnable,"ax",%progbits
 1372              		.align	2
 1373              		.global	CyIntEnable
 1374              		.code	16
 1375              		.thumb_func
 1376              		.type	CyIntEnable, %function
 1377              	CyIntEnable:
 1378              	.LFB24:
2438:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1379              		.loc 1 2438 0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383              		@ link register save eliminated.
 1384              	.LVL91:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1385              		.loc 1 2439 0
 1386 0000 1F23     		movs	r3, #31
 1387 0002 1840     		ands	r0, r3
 1388              	.LVL92:
 1389 0004 1E3B     		subs	r3, r3, #30
 1390 0006 8340     		lsls	r3, r3, r0
 1391 0008 014A     		ldr	r2, .L120
2440:Generated_Source\PSoC4/CyLib.c **** 
 1392              		.loc 1 2440 0
 1393              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c **** }
 1394              		.loc 1 2439 0
 1395 000a 1360     		str	r3, [r2]
2440:Generated_Source\PSoC4/CyLib.c **** 
 1396              		.loc 1 2440 0
 1397 000c 7047     		bx	lr
 1398              	.L121:
 1399 000e C046     		.align	2
 1400              	.L120:
 1401 0010 00E100E0 		.word	-536813312
 1402              		.cfi_endproc
 1403              	.LFE24:
 1404              		.size	CyIntEnable, .-CyIntEnable
 1405              		.section	.text.CyIntGetState,"ax",%progbits
 1406              		.align	2
 1407              		.global	CyIntGetState
 1408              		.code	16
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 82


 1409              		.thumb_func
 1410              		.type	CyIntGetState, %function
 1411              	CyIntGetState:
 1412              	.LFB25:
2456:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 1413              		.loc 1 2456 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              		@ link register save eliminated.
 1418              	.LVL93:
2458:Generated_Source\PSoC4/CyLib.c **** }
 1419              		.loc 1 2458 0
 1420 0000 1F22     		movs	r2, #31
 1421 0002 044B     		ldr	r3, .L123
 1422 0004 1040     		ands	r0, r2
 1423              	.LVL94:
 1424 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** 
 1425              		.loc 1 2459 0
 1426              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 1427              		.loc 1 2458 0
 1428 0008 C340     		lsrs	r3, r3, r0
 1429 000a 1800     		movs	r0, r3
 1430 000c 0123     		movs	r3, #1
 1431 000e 1840     		ands	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** 
 1432              		.loc 1 2459 0
 1433 0010 7047     		bx	lr
 1434              	.L124:
 1435 0012 C046     		.align	2
 1436              	.L123:
 1437 0014 00E100E0 		.word	-536813312
 1438              		.cfi_endproc
 1439              	.LFE25:
 1440              		.size	CyIntGetState, .-CyIntGetState
 1441              		.section	.text.CyIntDisable,"ax",%progbits
 1442              		.align	2
 1443              		.global	CyIntDisable
 1444              		.code	16
 1445              		.thumb_func
 1446              		.type	CyIntDisable, %function
 1447              	CyIntDisable:
 1448              	.LFB26:
2472:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1449              		.loc 1 2472 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 0
 1452              		@ frame_needed = 0, uses_anonymous_args = 0
 1453              		@ link register save eliminated.
 1454              	.LVL95:
2473:Generated_Source\PSoC4/CyLib.c **** }
 1455              		.loc 1 2473 0
 1456 0000 1F23     		movs	r3, #31
 1457 0002 1840     		ands	r0, r3
 1458              	.LVL96:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 83


 1459 0004 1E3B     		subs	r3, r3, #30
 1460 0006 8340     		lsls	r3, r3, r0
 1461 0008 014A     		ldr	r2, .L126
2474:Generated_Source\PSoC4/CyLib.c **** 
 1462              		.loc 1 2474 0
 1463              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c **** }
 1464              		.loc 1 2473 0
 1465 000a 1360     		str	r3, [r2]
2474:Generated_Source\PSoC4/CyLib.c **** 
 1466              		.loc 1 2474 0
 1467 000c 7047     		bx	lr
 1468              	.L127:
 1469 000e C046     		.align	2
 1470              	.L126:
 1471 0010 80E100E0 		.word	-536813184
 1472              		.cfi_endproc
 1473              	.LFE26:
 1474              		.size	CyIntDisable, .-CyIntDisable
 1475              		.section	.text.CyIntSetPending,"ax",%progbits
 1476              		.align	2
 1477              		.global	CyIntSetPending
 1478              		.code	16
 1479              		.thumb_func
 1480              		.type	CyIntSetPending, %function
 1481              	CyIntSetPending:
 1482              	.LFB27:
2486:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1483              		.loc 1 2486 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487              		@ link register save eliminated.
 1488              	.LVL97:
2487:Generated_Source\PSoC4/CyLib.c **** }
 1489              		.loc 1 2487 0
 1490 0000 1F23     		movs	r3, #31
 1491 0002 1840     		ands	r0, r3
 1492              	.LVL98:
 1493 0004 1E3B     		subs	r3, r3, #30
 1494 0006 8340     		lsls	r3, r3, r0
 1495 0008 014A     		ldr	r2, .L129
2488:Generated_Source\PSoC4/CyLib.c **** 
 1496              		.loc 1 2488 0
 1497              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 2487 0
 1499 000a 1360     		str	r3, [r2]
2488:Generated_Source\PSoC4/CyLib.c **** 
 1500              		.loc 1 2488 0
 1501 000c 7047     		bx	lr
 1502              	.L130:
 1503 000e C046     		.align	2
 1504              	.L129:
 1505 0010 00E200E0 		.word	-536813056
 1506              		.cfi_endproc
 1507              	.LFE27:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 84


 1508              		.size	CyIntSetPending, .-CyIntSetPending
 1509              		.section	.text.CyIntClearPending,"ax",%progbits
 1510              		.align	2
 1511              		.global	CyIntClearPending
 1512              		.code	16
 1513              		.thumb_func
 1514              		.type	CyIntClearPending, %function
 1515              	CyIntClearPending:
 1516              	.LFB28:
2501:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1517              		.loc 1 2501 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 0
 1520              		@ frame_needed = 0, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
 1522              	.LVL99:
2502:Generated_Source\PSoC4/CyLib.c **** }
 1523              		.loc 1 2502 0
 1524 0000 1F23     		movs	r3, #31
 1525 0002 1840     		ands	r0, r3
 1526              	.LVL100:
 1527 0004 1E3B     		subs	r3, r3, #30
 1528 0006 8340     		lsls	r3, r3, r0
 1529 0008 014A     		ldr	r2, .L132
2503:Generated_Source\PSoC4/CyLib.c **** 
 1530              		.loc 1 2503 0
 1531              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c **** }
 1532              		.loc 1 2502 0
 1533 000a 1360     		str	r3, [r2]
2503:Generated_Source\PSoC4/CyLib.c **** 
 1534              		.loc 1 2503 0
 1535 000c 7047     		bx	lr
 1536              	.L133:
 1537 000e C046     		.align	2
 1538              	.L132:
 1539 0010 80E200E0 		.word	-536812928
 1540              		.cfi_endproc
 1541              	.LFE28:
 1542              		.size	CyIntClearPending, .-CyIntClearPending
 1543              		.section	.text.CyHalt,"ax",%progbits
 1544              		.align	2
 1545              		.global	CyHalt
 1546              		.code	16
 1547              		.thumb_func
 1548              		.type	CyHalt, %function
 1549              	CyHalt:
 1550              	.LFB29:
2516:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1551              		.loc 1 2516 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555              		@ link register save eliminated.
 1556              	.LVL101:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1557              		.loc 1 2525 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 85


 1558              		.syntax divided
 1559              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1560 0000 01BE     		    bkpt    1
 1561              	@ 0 "" 2
2529:Generated_Source\PSoC4/CyLib.c **** 
 1562              		.loc 1 2529 0
 1563              		.thumb
 1564              		.syntax unified
 1565              		@ sp needed
 1566 0002 7047     		bx	lr
 1567              		.cfi_endproc
 1568              	.LFE29:
 1569              		.size	CyHalt, .-CyHalt
 1570              		.section	.text.CySoftwareReset,"ax",%progbits
 1571              		.align	2
 1572              		.global	CySoftwareReset
 1573              		.code	16
 1574              		.thumb_func
 1575              		.type	CySoftwareReset, %function
 1576              	CySoftwareReset:
 1577              	.LFB30:
2540:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
 1578              		.loc 1 2540 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              		@ link register save eliminated.
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1583              		.loc 1 2545 0
 1584 0000 034A     		ldr	r2, .L136
2546:Generated_Source\PSoC4/CyLib.c **** }
 1585              		.loc 1 2546 0
 1586 0002 0449     		ldr	r1, .L136+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1587              		.loc 1 2545 0
 1588 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** 
 1589              		.loc 1 2547 0
 1590              		@ sp needed
2546:Generated_Source\PSoC4/CyLib.c **** }
 1591              		.loc 1 2546 0
 1592 0006 1B04     		lsls	r3, r3, #16
 1593 0008 1B0C     		lsrs	r3, r3, #16
 1594 000a 0B43     		orrs	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1595              		.loc 1 2545 0
 1596 000c 1360     		str	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** 
 1597              		.loc 1 2547 0
 1598 000e 7047     		bx	lr
 1599              	.L137:
 1600              		.align	2
 1601              	.L136:
 1602 0010 0CED00E0 		.word	-536810228
 1603 0014 0400FA05 		.word	100270084
 1604              		.cfi_endproc
 1605              	.LFE30:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 86


 1606              		.size	CySoftwareReset, .-CySoftwareReset
 1607              		.section	.text.CyDelay,"ax",%progbits
 1608              		.align	2
 1609              		.global	CyDelay
 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	CyDelay, %function
 1613              	CyDelay:
 1614              	.LFB31:
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1615              		.loc 1 2560 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 0, uses_anonymous_args = 0
 1619              	.LVL102:
 1620 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1621              		.cfi_def_cfa_offset 24
 1622              		.cfi_offset 3, -24
 1623              		.cfi_offset 4, -20
 1624              		.cfi_offset 5, -16
 1625              		.cfi_offset 6, -12
 1626              		.cfi_offset 7, -8
 1627              		.cfi_offset 14, -4
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1628              		.loc 1 2561 0
 1629 0002 8025     		movs	r5, #128
2560:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1630              		.loc 1 2560 0
 1631 0004 0700     		movs	r7, r0
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1632              		.loc 1 2561 0
 1633 0006 2D02     		lsls	r5, r5, #8
 1634 0008 A842     		cmp	r0, r5
 1635 000a 14D9     		bls	.L144
 1636 000c 0400     		movs	r4, r0
 1637 000e 0B4E     		ldr	r6, .L145
 1638              	.LVL103:
 1639              	.L140:
2566:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1640              		.loc 1 2566 0
 1641 0010 F068     		ldr	r0, [r6, #12]
 1642 0012 FFF7FEFF 		bl	CyDelayCycles
 1643              	.LVL104:
2567:Generated_Source\PSoC4/CyLib.c ****     }
 1644              		.loc 1 2567 0
 1645 0016 0A4B     		ldr	r3, .L145+4
 1646 0018 9C46     		mov	ip, r3
 1647 001a 6444     		add	r4, r4, ip
 1648              	.LVL105:
2561:Generated_Source\PSoC4/CyLib.c ****     {
 1649              		.loc 1 2561 0
 1650 001c AC42     		cmp	r4, r5
 1651 001e F7D8     		bhi	.L140
 1652 0020 084B     		ldr	r3, .L145+8
 1653 0022 FB18     		adds	r3, r7, r3
 1654 0024 DB0B     		lsrs	r3, r3, #15
 1655 0026 DB03     		lsls	r3, r3, #15
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 87


 1656 0028 6744     		add	r7, r7, ip
 1657 002a FF1A     		subs	r7, r7, r3
 1658              	.LVL106:
 1659              	.L139:
2570:Generated_Source\PSoC4/CyLib.c **** }
 1660              		.loc 1 2570 0
 1661 002c 3068     		ldr	r0, [r6]
2571:Generated_Source\PSoC4/CyLib.c **** 
 1662              		.loc 1 2571 0
 1663              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1664              		.loc 1 2570 0
 1665 002e 7843     		muls	r0, r7
 1666 0030 FFF7FEFF 		bl	CyDelayCycles
 1667              	.LVL107:
2571:Generated_Source\PSoC4/CyLib.c **** 
 1668              		.loc 1 2571 0
 1669 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1670              	.LVL108:
 1671              	.L144:
 1672 0036 014E     		ldr	r6, .L145
 1673 0038 F8E7     		b	.L139
 1674              	.L146:
 1675 003a C046     		.align	2
 1676              	.L145:
 1677 003c 00000000 		.word	.LANCHOR2
 1678 0040 0080FFFF 		.word	-32768
 1679 0044 FF7FFFFF 		.word	-32769
 1680              		.cfi_endproc
 1681              	.LFE31:
 1682              		.size	CyDelay, .-CyDelay
 1683              		.section	.text.CyDelayUs,"ax",%progbits
 1684              		.align	2
 1685              		.global	CyDelayUs
 1686              		.code	16
 1687              		.thumb_func
 1688              		.type	CyDelayUs, %function
 1689              	CyDelayUs:
 1690              	.LFB32:
2583:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1691              		.loc 1 2583 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              	.LVL109:
 1696 0000 10B5     		push	{r4, lr}
 1697              		.cfi_def_cfa_offset 8
 1698              		.cfi_offset 4, -8
 1699              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c **** }
 1700              		.loc 1 2584 0
 1701 0002 034B     		ldr	r3, .L148
2585:Generated_Source\PSoC4/CyLib.c **** 
 1702              		.loc 1 2585 0
 1703              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c **** }
 1704              		.loc 1 2584 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 88


 1705 0004 1B7A     		ldrb	r3, [r3, #8]
 1706 0006 5843     		muls	r0, r3
 1707              	.LVL110:
 1708 0008 FFF7FEFF 		bl	CyDelayCycles
 1709              	.LVL111:
2585:Generated_Source\PSoC4/CyLib.c **** 
 1710              		.loc 1 2585 0
 1711 000c 10BD     		pop	{r4, pc}
 1712              	.L149:
 1713 000e C046     		.align	2
 1714              	.L148:
 1715 0010 00000000 		.word	.LANCHOR2
 1716              		.cfi_endproc
 1717              	.LFE32:
 1718              		.size	CyDelayUs, .-CyDelayUs
 1719              		.global	__aeabi_uidiv
 1720              		.section	.text.CyDelayFreq,"ax",%progbits
 1721              		.align	2
 1722              		.global	CyDelayFreq
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CyDelayFreq, %function
 1726              	CyDelayFreq:
 1727              	.LFB33:
2597:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1728              		.loc 1 2597 0
 1729              		.cfi_startproc
 1730              		@ args = 0, pretend = 0, frame = 0
 1731              		@ frame_needed = 0, uses_anonymous_args = 0
 1732              	.LVL112:
 1733 0000 70B5     		push	{r4, r5, r6, lr}
 1734              		.cfi_def_cfa_offset 16
 1735              		.cfi_offset 4, -16
 1736              		.cfi_offset 5, -12
 1737              		.cfi_offset 6, -8
 1738              		.cfi_offset 14, -4
2597:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1739              		.loc 1 2597 0
 1740 0002 041E     		subs	r4, r0, #0
2598:Generated_Source\PSoC4/CyLib.c ****     {
 1741              		.loc 1 2598 0
 1742 0004 09D1     		bne	.L153
 1743 0006 3025     		movs	r5, #48
 1744 0008 0B4A     		ldr	r2, .L154
 1745 000a 0C48     		ldr	r0, .L154+4
 1746              	.LVL113:
2604:Generated_Source\PSoC4/CyLib.c ****     }
 1747              		.loc 1 2604 0
 1748 000c 0C4C     		ldr	r4, .L154+8
 1749              	.LVL114:
 1750              	.L151:
 1751 000e 0D4B     		ldr	r3, .L154+12
2610:Generated_Source\PSoC4/CyLib.c **** 
 1752              		.loc 1 2610 0
 1753              		@ sp needed
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1754              		.loc 1 2607 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 89


 1755 0010 1D72     		strb	r5, [r3, #8]
 1756 0012 1C61     		str	r4, [r3, #16]
2608:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1757              		.loc 1 2608 0
 1758 0014 1860     		str	r0, [r3]
2609:Generated_Source\PSoC4/CyLib.c **** }
 1759              		.loc 1 2609 0
 1760 0016 DA60     		str	r2, [r3, #12]
2610:Generated_Source\PSoC4/CyLib.c **** 
 1761              		.loc 1 2610 0
 1762 0018 70BD     		pop	{r4, r5, r6, pc}
 1763              	.LVL115:
 1764              	.L153:
 1765 001a 0B4B     		ldr	r3, .L154+16
 1766 001c 0B49     		ldr	r1, .L154+20
 1767 001e C018     		adds	r0, r0, r3
 1768              	.LVL116:
 1769 0020 FFF7FEFF 		bl	__aeabi_uidiv
 1770              	.LVL117:
 1771 0024 FA21     		movs	r1, #250
 1772 0026 0A4B     		ldr	r3, .L154+24
 1773 0028 C5B2     		uxtb	r5, r0
 1774 002a 8900     		lsls	r1, r1, #2
 1775 002c E018     		adds	r0, r4, r3
 1776 002e FFF7FEFF 		bl	__aeabi_uidiv
 1777              	.LVL118:
 1778 0032 C203     		lsls	r2, r0, #15
 1779 0034 EBE7     		b	.L151
 1780              	.L155:
 1781 0036 C046     		.align	2
 1782              	.L154:
 1783 0038 0000C05D 		.word	1572864000
 1784 003c 80BB0000 		.word	48000
 1785 0040 006CDC02 		.word	48000000
 1786 0044 00000000 		.word	.LANCHOR2
 1787 0048 3F420F00 		.word	999999
 1788 004c 40420F00 		.word	1000000
 1789 0050 E7030000 		.word	999
 1790              		.cfi_endproc
 1791              	.LFE33:
 1792              		.size	CyDelayFreq, .-CyDelayFreq
 1793              		.section	.text.CySysTickStart,"ax",%progbits
 1794              		.align	2
 1795              		.global	CySysTickStart
 1796              		.code	16
 1797              		.thumb_func
 1798              		.type	CySysTickStart, %function
 1799              	CySysTickStart:
 1800              	.LFB34:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1801              		.loc 1 2629 0
 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 0
 1804              		@ frame_needed = 0, uses_anonymous_args = 0
 1805 0000 70B5     		push	{r4, r5, r6, lr}
 1806              		.cfi_def_cfa_offset 16
 1807              		.cfi_offset 4, -16
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 90


 1808              		.cfi_offset 5, -12
 1809              		.cfi_offset 6, -8
 1810              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1811              		.loc 1 2630 0
 1812 0002 134C     		ldr	r4, .L158
 1813 0004 6569     		ldr	r5, [r4, #20]
 1814 0006 002D     		cmp	r5, #0
 1815 0008 18D1     		bne	.L157
 1816              	.LVL119:
 1817              	.LBB79:
 1818              	.LBB80:
 1819              	.LBB81:
 1820              	.LBB82:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1821              		.loc 1 2290 0
 1822 000a 124A     		ldr	r2, .L158+4
 1823 000c 124B     		ldr	r3, .L158+8
 1824              	.LBE82:
 1825              	.LBE81:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1826              		.loc 1 2663 0
 1827 000e 2560     		str	r5, [r4]
 1828              	.LVL120:
 1829 0010 6560     		str	r5, [r4, #4]
 1830              	.LVL121:
 1831 0012 A560     		str	r5, [r4, #8]
 1832              	.LVL122:
 1833 0014 E560     		str	r5, [r4, #12]
 1834              	.LVL123:
 1835 0016 2561     		str	r5, [r4, #16]
 1836              	.LVL124:
 1837              	.LBB84:
 1838              	.LBB83:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1839              		.loc 1 2290 0
 1840 0018 1A60     		str	r2, [r3]
 1841              	.LVL125:
 1842              	.LBE83:
 1843              	.LBE84:
 1844              	.LBB85:
 1845              	.LBB86:
 1846              	.LBB87:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1847              		.loc 1 2821 0
 1848 001a 0423     		movs	r3, #4
 1849 001c 0F4A     		ldr	r2, .L158+12
 1850 001e 1168     		ldr	r1, [r2]
 1851 0020 0B43     		orrs	r3, r1
 1852              	.LBE87:
 1853              	.LBE86:
 1854              	.LBE85:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1855              		.loc 1 2672 0
 1856 0022 FA21     		movs	r1, #250
 1857              	.LBB90:
 1858              	.LBB89:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 91


 1859              	.LBB88:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1860              		.loc 1 2821 0
 1861 0024 1360     		str	r3, [r2]
 1862              	.LVL126:
 1863              	.LBE88:
 1864              	.LBE89:
 1865              	.LBE90:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1866              		.loc 1 2672 0
 1867 0026 0E4B     		ldr	r3, .L158+16
 1868 0028 8900     		lsls	r1, r1, #2
 1869 002a 1869     		ldr	r0, [r3, #16]
 1870 002c FFF7FEFF 		bl	__aeabi_uidiv
 1871              	.LVL127:
 1872              	.LBB91:
 1873              	.LBB92:
2755:Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 2755 0
 1875 0030 0C4B     		ldr	r3, .L158+20
 1876 0032 1860     		str	r0, [r3]
 1877              	.LVL128:
 1878              	.LBE92:
 1879              	.LBE91:
 1880              	.LBB93:
 1881              	.LBB94:
2880:Generated_Source\PSoC4/CyLib.c **** }
 1882              		.loc 1 2880 0
 1883 0034 0C4B     		ldr	r3, .L158+24
 1884 0036 1D60     		str	r5, [r3]
 1885              	.LVL129:
 1886              	.LBE94:
 1887              	.LBE93:
 1888              	.LBE80:
 1889              	.LBE79:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1890              		.loc 1 2633 0
 1891 0038 0123     		movs	r3, #1
 1892 003a 6361     		str	r3, [r4, #20]
 1893              	.LVL130:
 1894              	.L157:
 1895              	.LBB95:
 1896              	.LBB96:
 1897              	.LBB97:
 1898              	.LBB98:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1899              		.loc 1 2722 0
 1900 003c 0222     		movs	r2, #2
 1901 003e 074B     		ldr	r3, .L158+12
 1902              	.LBE98:
 1903              	.LBE97:
 1904              	.LBE96:
 1905              	.LBE95:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1906              		.loc 1 2637 0
 1907              		@ sp needed
 1908              	.LBB102:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 92


 1909              	.LBB101:
 1910              	.LBB100:
 1911              	.LBB99:
2722:Generated_Source\PSoC4/CyLib.c **** }
 1912              		.loc 1 2722 0
 1913 0040 1968     		ldr	r1, [r3]
 1914 0042 0A43     		orrs	r2, r1
 1915 0044 1A60     		str	r2, [r3]
 1916              	.LBE99:
 1917              	.LBE100:
2690:Generated_Source\PSoC4/CyLib.c **** }
 1918              		.loc 1 2690 0
 1919 0046 0122     		movs	r2, #1
 1920 0048 1968     		ldr	r1, [r3]
 1921 004a 0A43     		orrs	r2, r1
 1922 004c 1A60     		str	r2, [r3]
 1923              	.LBE101:
 1924              	.LBE102:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1925              		.loc 1 2637 0
 1926 004e 70BD     		pop	{r4, r5, r6, pc}
 1927              	.L159:
 1928              		.align	2
 1929              	.L158:
 1930 0050 00000000 		.word	.LANCHOR0
 1931 0054 00000000 		.word	CySysTickServiceCallbacks
 1932 0058 3C000020 		.word	536870972
 1933 005c 10E000E0 		.word	-536813552
 1934 0060 00000000 		.word	.LANCHOR2
 1935 0064 14E000E0 		.word	-536813548
 1936 0068 18E000E0 		.word	-536813544
 1937              		.cfi_endproc
 1938              	.LFE34:
 1939              		.size	CySysTickStart, .-CySysTickStart
 1940              		.section	.text.CySysTickInit,"ax",%progbits
 1941              		.align	2
 1942              		.global	CySysTickInit
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	CySysTickInit, %function
 1946              	CySysTickInit:
 1947              	.LFB35:
2658:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1948              		.loc 1 2658 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              	.LVL131:
 1953 0000 10B5     		push	{r4, lr}
 1954              		.cfi_def_cfa_offset 8
 1955              		.cfi_offset 4, -8
 1956              		.cfi_offset 14, -4
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1957              		.loc 1 2663 0
 1958 0002 0024     		movs	r4, #0
 1959 0004 0C4B     		ldr	r3, .L161
 1960              	.LBB113:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 93


 1961              	.LBB114:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1962              		.loc 1 2290 0
 1963 0006 0D4A     		ldr	r2, .L161+4
 1964              	.LBE114:
 1965              	.LBE113:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1966              		.loc 1 2663 0
 1967 0008 1C60     		str	r4, [r3]
 1968              	.LVL132:
 1969 000a 1C61     		str	r4, [r3, #16]
 1970 000c 5C60     		str	r4, [r3, #4]
 1971              	.LVL133:
 1972 000e 9C60     		str	r4, [r3, #8]
 1973              	.LVL134:
 1974 0010 DC60     		str	r4, [r3, #12]
 1975              	.LVL135:
 1976              	.LBB117:
 1977              	.LBB115:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1978              		.loc 1 2290 0
 1979 0012 0B4B     		ldr	r3, .L161+8
 1980              	.LVL136:
 1981              	.LBE115:
 1982              	.LBE117:
2674:Generated_Source\PSoC4/CyLib.c **** 
 1983              		.loc 1 2674 0
 1984              		@ sp needed
 1985              	.LBB118:
 1986              	.LBB116:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1987              		.loc 1 2290 0
 1988 0014 1A60     		str	r2, [r3]
 1989              	.LVL137:
 1990              	.LBE116:
 1991              	.LBE118:
 1992              	.LBB119:
 1993              	.LBB120:
 1994              	.LBB121:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 1995              		.loc 1 2821 0
 1996 0016 0423     		movs	r3, #4
 1997 0018 0A4A     		ldr	r2, .L161+12
 1998 001a 1168     		ldr	r1, [r2]
 1999 001c 0B43     		orrs	r3, r1
 2000              	.LBE121:
 2001              	.LBE120:
 2002              	.LBE119:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2003              		.loc 1 2672 0
 2004 001e FA21     		movs	r1, #250
 2005              	.LBB124:
 2006              	.LBB123:
 2007              	.LBB122:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 2008              		.loc 1 2821 0
 2009 0020 1360     		str	r3, [r2]
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 94


 2010              	.LVL138:
 2011              	.LBE122:
 2012              	.LBE123:
 2013              	.LBE124:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2014              		.loc 1 2672 0
 2015 0022 094B     		ldr	r3, .L161+16
 2016 0024 8900     		lsls	r1, r1, #2
 2017 0026 1869     		ldr	r0, [r3, #16]
 2018 0028 FFF7FEFF 		bl	__aeabi_uidiv
 2019              	.LVL139:
 2020              	.LBB125:
 2021              	.LBB126:
2755:Generated_Source\PSoC4/CyLib.c **** }
 2022              		.loc 1 2755 0
 2023 002c 074B     		ldr	r3, .L161+20
 2024 002e 1860     		str	r0, [r3]
 2025              	.LVL140:
 2026              	.LBE126:
 2027              	.LBE125:
 2028              	.LBB127:
 2029              	.LBB128:
2880:Generated_Source\PSoC4/CyLib.c **** }
 2030              		.loc 1 2880 0
 2031 0030 074B     		ldr	r3, .L161+24
 2032 0032 1C60     		str	r4, [r3]
 2033              	.LBE128:
 2034              	.LBE127:
2674:Generated_Source\PSoC4/CyLib.c **** 
 2035              		.loc 1 2674 0
 2036 0034 10BD     		pop	{r4, pc}
 2037              	.L162:
 2038 0036 C046     		.align	2
 2039              	.L161:
 2040 0038 00000000 		.word	.LANCHOR0
 2041 003c 00000000 		.word	CySysTickServiceCallbacks
 2042 0040 3C000020 		.word	536870972
 2043 0044 10E000E0 		.word	-536813552
 2044 0048 00000000 		.word	.LANCHOR2
 2045 004c 14E000E0 		.word	-536813548
 2046 0050 18E000E0 		.word	-536813544
 2047              		.cfi_endproc
 2048              	.LFE35:
 2049              		.size	CySysTickInit, .-CySysTickInit
 2050              		.section	.text.CySysTickEnable,"ax",%progbits
 2051              		.align	2
 2052              		.global	CySysTickEnable
 2053              		.code	16
 2054              		.thumb_func
 2055              		.type	CySysTickEnable, %function
 2056              	CySysTickEnable:
 2057              	.LFB36:
2688:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2058              		.loc 1 2688 0
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 0
 2061              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 95


 2062              		@ link register save eliminated.
 2063              	.LBB129:
 2064              	.LBB130:
2722:Generated_Source\PSoC4/CyLib.c **** }
 2065              		.loc 1 2722 0
 2066 0000 0222     		movs	r2, #2
 2067 0002 044B     		ldr	r3, .L164
 2068              	.LBE130:
 2069              	.LBE129:
2691:Generated_Source\PSoC4/CyLib.c **** 
 2070              		.loc 1 2691 0
 2071              		@ sp needed
 2072              	.LBB132:
 2073              	.LBB131:
2722:Generated_Source\PSoC4/CyLib.c **** }
 2074              		.loc 1 2722 0
 2075 0004 1968     		ldr	r1, [r3]
 2076 0006 0A43     		orrs	r2, r1
 2077 0008 1A60     		str	r2, [r3]
 2078              	.LBE131:
 2079              	.LBE132:
2690:Generated_Source\PSoC4/CyLib.c **** }
 2080              		.loc 1 2690 0
 2081 000a 0122     		movs	r2, #1
 2082 000c 1968     		ldr	r1, [r3]
 2083 000e 0A43     		orrs	r2, r1
 2084 0010 1A60     		str	r2, [r3]
2691:Generated_Source\PSoC4/CyLib.c **** 
 2085              		.loc 1 2691 0
 2086 0012 7047     		bx	lr
 2087              	.L165:
 2088              		.align	2
 2089              	.L164:
 2090 0014 10E000E0 		.word	-536813552
 2091              		.cfi_endproc
 2092              	.LFE36:
 2093              		.size	CySysTickEnable, .-CySysTickEnable
 2094              		.section	.text.CySysTickStop,"ax",%progbits
 2095              		.align	2
 2096              		.global	CySysTickStop
 2097              		.code	16
 2098              		.thumb_func
 2099              		.type	CySysTickStop, %function
 2100              	CySysTickStop:
 2101              	.LFB37:
2705:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2102              		.loc 1 2705 0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
 2106              		@ link register save eliminated.
2706:Generated_Source\PSoC4/CyLib.c **** }
 2107              		.loc 1 2706 0
 2108 0000 0121     		movs	r1, #1
 2109 0002 024A     		ldr	r2, .L167
2707:Generated_Source\PSoC4/CyLib.c **** 
 2110              		.loc 1 2707 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 96


 2111              		@ sp needed
2706:Generated_Source\PSoC4/CyLib.c **** }
 2112              		.loc 1 2706 0
 2113 0004 1368     		ldr	r3, [r2]
 2114 0006 8B43     		bics	r3, r1
 2115 0008 1360     		str	r3, [r2]
2707:Generated_Source\PSoC4/CyLib.c **** 
 2116              		.loc 1 2707 0
 2117 000a 7047     		bx	lr
 2118              	.L168:
 2119              		.align	2
 2120              	.L167:
 2121 000c 10E000E0 		.word	-536813552
 2122              		.cfi_endproc
 2123              	.LFE37:
 2124              		.size	CySysTickStop, .-CySysTickStop
 2125              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2126              		.align	2
 2127              		.global	CySysTickEnableInterrupt
 2128              		.code	16
 2129              		.thumb_func
 2130              		.type	CySysTickEnableInterrupt, %function
 2131              	CySysTickEnableInterrupt:
 2132              	.LFB38:
2721:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2133              		.loc 1 2721 0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 0
 2136              		@ frame_needed = 0, uses_anonymous_args = 0
 2137              		@ link register save eliminated.
2722:Generated_Source\PSoC4/CyLib.c **** }
 2138              		.loc 1 2722 0
 2139 0000 0223     		movs	r3, #2
 2140 0002 024A     		ldr	r2, .L170
2723:Generated_Source\PSoC4/CyLib.c **** 
 2141              		.loc 1 2723 0
 2142              		@ sp needed
2722:Generated_Source\PSoC4/CyLib.c **** }
 2143              		.loc 1 2722 0
 2144 0004 1168     		ldr	r1, [r2]
 2145 0006 0B43     		orrs	r3, r1
 2146 0008 1360     		str	r3, [r2]
2723:Generated_Source\PSoC4/CyLib.c **** 
 2147              		.loc 1 2723 0
 2148 000a 7047     		bx	lr
 2149              	.L171:
 2150              		.align	2
 2151              	.L170:
 2152 000c 10E000E0 		.word	-536813552
 2153              		.cfi_endproc
 2154              	.LFE38:
 2155              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2156              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2157              		.align	2
 2158              		.global	CySysTickDisableInterrupt
 2159              		.code	16
 2160              		.thumb_func
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 97


 2161              		.type	CySysTickDisableInterrupt, %function
 2162              	CySysTickDisableInterrupt:
 2163              	.LFB39:
2737:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2164              		.loc 1 2737 0
 2165              		.cfi_startproc
 2166              		@ args = 0, pretend = 0, frame = 0
 2167              		@ frame_needed = 0, uses_anonymous_args = 0
 2168              		@ link register save eliminated.
2738:Generated_Source\PSoC4/CyLib.c **** }
 2169              		.loc 1 2738 0
 2170 0000 0221     		movs	r1, #2
 2171 0002 024A     		ldr	r2, .L173
2739:Generated_Source\PSoC4/CyLib.c **** 
 2172              		.loc 1 2739 0
 2173              		@ sp needed
2738:Generated_Source\PSoC4/CyLib.c **** }
 2174              		.loc 1 2738 0
 2175 0004 1368     		ldr	r3, [r2]
 2176 0006 8B43     		bics	r3, r1
 2177 0008 1360     		str	r3, [r2]
2739:Generated_Source\PSoC4/CyLib.c **** 
 2178              		.loc 1 2739 0
 2179 000a 7047     		bx	lr
 2180              	.L174:
 2181              		.align	2
 2182              	.L173:
 2183 000c 10E000E0 		.word	-536813552
 2184              		.cfi_endproc
 2185              	.LFE39:
 2186              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2187              		.section	.text.CySysTickSetReload,"ax",%progbits
 2188              		.align	2
 2189              		.global	CySysTickSetReload
 2190              		.code	16
 2191              		.thumb_func
 2192              		.type	CySysTickSetReload, %function
 2193              	CySysTickSetReload:
 2194              	.LFB40:
2754:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2195              		.loc 1 2754 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 0, uses_anonymous_args = 0
 2199              		@ link register save eliminated.
 2200              	.LVL141:
2755:Generated_Source\PSoC4/CyLib.c **** }
 2201              		.loc 1 2755 0
 2202 0000 024B     		ldr	r3, .L176
 2203 0002 0002     		lsls	r0, r0, #8
 2204              	.LVL142:
 2205 0004 000A     		lsrs	r0, r0, #8
 2206 0006 1860     		str	r0, [r3]
2756:Generated_Source\PSoC4/CyLib.c **** 
 2207              		.loc 1 2756 0
 2208              		@ sp needed
 2209 0008 7047     		bx	lr
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 98


 2210              	.L177:
 2211 000a C046     		.align	2
 2212              	.L176:
 2213 000c 14E000E0 		.word	-536813548
 2214              		.cfi_endproc
 2215              	.LFE40:
 2216              		.size	CySysTickSetReload, .-CySysTickSetReload
 2217              		.section	.text.CySysTickGetReload,"ax",%progbits
 2218              		.align	2
 2219              		.global	CySysTickGetReload
 2220              		.code	16
 2221              		.thumb_func
 2222              		.type	CySysTickGetReload, %function
 2223              	CySysTickGetReload:
 2224              	.LFB41:
2770:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2225              		.loc 1 2770 0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 2229              		@ link register save eliminated.
2771:Generated_Source\PSoC4/CyLib.c **** }
 2230              		.loc 1 2771 0
 2231 0000 024B     		ldr	r3, .L179
2772:Generated_Source\PSoC4/CyLib.c **** 
 2232              		.loc 1 2772 0
 2233              		@ sp needed
2771:Generated_Source\PSoC4/CyLib.c **** }
 2234              		.loc 1 2771 0
 2235 0002 1868     		ldr	r0, [r3]
 2236 0004 0002     		lsls	r0, r0, #8
 2237 0006 000A     		lsrs	r0, r0, #8
2772:Generated_Source\PSoC4/CyLib.c **** 
 2238              		.loc 1 2772 0
 2239 0008 7047     		bx	lr
 2240              	.L180:
 2241 000a C046     		.align	2
 2242              	.L179:
 2243 000c 14E000E0 		.word	-536813548
 2244              		.cfi_endproc
 2245              	.LFE41:
 2246              		.size	CySysTickGetReload, .-CySysTickGetReload
 2247              		.section	.text.CySysTickGetValue,"ax",%progbits
 2248              		.align	2
 2249              		.global	CySysTickGetValue
 2250              		.code	16
 2251              		.thumb_func
 2252              		.type	CySysTickGetValue, %function
 2253              	CySysTickGetValue:
 2254              	.LFB42:
2786:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2255              		.loc 1 2786 0
 2256              		.cfi_startproc
 2257              		@ args = 0, pretend = 0, frame = 0
 2258              		@ frame_needed = 0, uses_anonymous_args = 0
 2259              		@ link register save eliminated.
2787:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 99


 2260              		.loc 1 2787 0
 2261 0000 024B     		ldr	r3, .L182
2788:Generated_Source\PSoC4/CyLib.c **** 
 2262              		.loc 1 2788 0
 2263              		@ sp needed
2787:Generated_Source\PSoC4/CyLib.c **** }
 2264              		.loc 1 2787 0
 2265 0002 1868     		ldr	r0, [r3]
 2266 0004 0002     		lsls	r0, r0, #8
 2267 0006 000A     		lsrs	r0, r0, #8
2788:Generated_Source\PSoC4/CyLib.c **** 
 2268              		.loc 1 2788 0
 2269 0008 7047     		bx	lr
 2270              	.L183:
 2271 000a C046     		.align	2
 2272              	.L182:
 2273 000c 18E000E0 		.word	-536813544
 2274              		.cfi_endproc
 2275              	.LFE42:
 2276              		.size	CySysTickGetValue, .-CySysTickGetValue
 2277              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2278              		.align	2
 2279              		.global	CySysTickSetClockSource
 2280              		.code	16
 2281              		.thumb_func
 2282              		.type	CySysTickSetClockSource, %function
 2283              	CySysTickSetClockSource:
 2284              	.LFB43:
2818:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2285              		.loc 1 2818 0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 0
 2288              		@ frame_needed = 0, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
 2290              	.LVL143:
 2291              	.LBB135:
 2292              	.LBB136:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 2293              		.loc 1 2821 0
 2294 0000 064A     		ldr	r2, .L188
 2295              	.LBE136:
 2296              	.LBE135:
2819:Generated_Source\PSoC4/CyLib.c ****         {
 2297              		.loc 1 2819 0
 2298 0002 0128     		cmp	r0, #1
 2299 0004 04D0     		beq	.L187
2825:Generated_Source\PSoC4/CyLib.c ****         }
 2300              		.loc 1 2825 0
 2301 0006 0421     		movs	r1, #4
 2302 0008 1368     		ldr	r3, [r2]
 2303 000a 8B43     		bics	r3, r1
 2304 000c 1360     		str	r3, [r2]
 2305              	.L184:
2827:Generated_Source\PSoC4/CyLib.c **** 
 2306              		.loc 1 2827 0
 2307              		@ sp needed
 2308 000e 7047     		bx	lr
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 100


 2309              	.L187:
 2310              	.LVL144:
 2311              	.LBB138:
 2312              	.LBB137:
2821:Generated_Source\PSoC4/CyLib.c ****         }
 2313              		.loc 1 2821 0
 2314 0010 0423     		movs	r3, #4
 2315 0012 1168     		ldr	r1, [r2]
 2316 0014 0B43     		orrs	r3, r1
 2317 0016 1360     		str	r3, [r2]
 2318 0018 F9E7     		b	.L184
 2319              	.L189:
 2320 001a C046     		.align	2
 2321              	.L188:
 2322 001c 10E000E0 		.word	-536813552
 2323              	.LBE137:
 2324              	.LBE138:
 2325              		.cfi_endproc
 2326              	.LFE43:
 2327              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2328              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2329              		.align	2
 2330              		.global	CySysTickGetClockSource
 2331              		.code	16
 2332              		.thumb_func
 2333              		.type	CySysTickGetClockSource, %function
 2334              	CySysTickGetClockSource:
 2335              	.LFB44:
2843:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2336              		.loc 1 2843 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
2844:Generated_Source\PSoC4/CyLib.c ****     }
 2341              		.loc 1 2844 0
 2342 0000 024B     		ldr	r3, .L191
2845:Generated_Source\PSoC4/CyLib.c ****     
 2343              		.loc 1 2845 0
 2344              		@ sp needed
2844:Generated_Source\PSoC4/CyLib.c ****     }
 2345              		.loc 1 2844 0
 2346 0002 1868     		ldr	r0, [r3]
 2347 0004 4007     		lsls	r0, r0, #29
 2348 0006 C00F     		lsrs	r0, r0, #31
2845:Generated_Source\PSoC4/CyLib.c ****     
 2349              		.loc 1 2845 0
 2350 0008 7047     		bx	lr
 2351              	.L192:
 2352 000a C046     		.align	2
 2353              	.L191:
 2354 000c 10E000E0 		.word	-536813552
 2355              		.cfi_endproc
 2356              	.LFE44:
 2357              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2358              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2359              		.align	2
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 101


 2360              		.global	CySysTickGetCountFlag
 2361              		.code	16
 2362              		.thumb_func
 2363              		.type	CySysTickGetCountFlag, %function
 2364              	CySysTickGetCountFlag:
 2365              	.LFB45:
2866:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2366              		.loc 1 2866 0
 2367              		.cfi_startproc
 2368              		@ args = 0, pretend = 0, frame = 0
 2369              		@ frame_needed = 0, uses_anonymous_args = 0
 2370              		@ link register save eliminated.
2867:Generated_Source\PSoC4/CyLib.c **** }
 2371              		.loc 1 2867 0
 2372 0000 024B     		ldr	r3, .L194
2868:Generated_Source\PSoC4/CyLib.c **** 
 2373              		.loc 1 2868 0
 2374              		@ sp needed
2867:Generated_Source\PSoC4/CyLib.c **** }
 2375              		.loc 1 2867 0
 2376 0002 1868     		ldr	r0, [r3]
 2377 0004 C003     		lsls	r0, r0, #15
 2378 0006 C00F     		lsrs	r0, r0, #31
2868:Generated_Source\PSoC4/CyLib.c **** 
 2379              		.loc 1 2868 0
 2380 0008 7047     		bx	lr
 2381              	.L195:
 2382 000a C046     		.align	2
 2383              	.L194:
 2384 000c 10E000E0 		.word	-536813552
 2385              		.cfi_endproc
 2386              	.LFE45:
 2387              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2388              		.section	.text.CySysTickClear,"ax",%progbits
 2389              		.align	2
 2390              		.global	CySysTickClear
 2391              		.code	16
 2392              		.thumb_func
 2393              		.type	CySysTickClear, %function
 2394              	CySysTickClear:
 2395              	.LFB46:
2879:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2396              		.loc 1 2879 0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 0, uses_anonymous_args = 0
 2400              		@ link register save eliminated.
2880:Generated_Source\PSoC4/CyLib.c **** }
 2401              		.loc 1 2880 0
 2402 0000 0022     		movs	r2, #0
 2403 0002 014B     		ldr	r3, .L197
2881:Generated_Source\PSoC4/CyLib.c **** 
 2404              		.loc 1 2881 0
 2405              		@ sp needed
2880:Generated_Source\PSoC4/CyLib.c **** }
 2406              		.loc 1 2880 0
 2407 0004 1A60     		str	r2, [r3]
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 102


2881:Generated_Source\PSoC4/CyLib.c **** 
 2408              		.loc 1 2881 0
 2409 0006 7047     		bx	lr
 2410              	.L198:
 2411              		.align	2
 2412              	.L197:
 2413 0008 18E000E0 		.word	-536813544
 2414              		.cfi_endproc
 2415              	.LFE46:
 2416              		.size	CySysTickClear, .-CySysTickClear
 2417              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2418              		.align	2
 2419              		.global	CySysTickSetCallback
 2420              		.code	16
 2421              		.thumb_func
 2422              		.type	CySysTickSetCallback, %function
 2423              	CySysTickSetCallback:
 2424              	.LFB47:
2914:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2425              		.loc 1 2914 0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 0
 2428              		@ frame_needed = 0, uses_anonymous_args = 0
 2429              		@ link register save eliminated.
 2430              	.LVL145:
2917:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2431              		.loc 1 2917 0
 2432 0000 024A     		ldr	r2, .L200
 2433 0002 8300     		lsls	r3, r0, #2
 2434 0004 9858     		ldr	r0, [r3, r2]
 2435              	.LVL146:
2920:Generated_Source\PSoC4/CyLib.c **** 
 2436              		.loc 1 2920 0
 2437              		@ sp needed
2918:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2438              		.loc 1 2918 0
 2439 0006 9950     		str	r1, [r3, r2]
2920:Generated_Source\PSoC4/CyLib.c **** 
 2440              		.loc 1 2920 0
 2441 0008 7047     		bx	lr
 2442              	.L201:
 2443 000a C046     		.align	2
 2444              	.L200:
 2445 000c 00000000 		.word	.LANCHOR0
 2446              		.cfi_endproc
 2447              	.LFE47:
 2448              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2449              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2450              		.align	2
 2451              		.global	CySysTickGetCallback
 2452              		.code	16
 2453              		.thumb_func
 2454              		.type	CySysTickGetCallback, %function
 2455              	CySysTickGetCallback:
 2456              	.LFB48:
2938:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2457              		.loc 1 2938 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 103


 2458              		.cfi_startproc
 2459              		@ args = 0, pretend = 0, frame = 0
 2460              		@ frame_needed = 0, uses_anonymous_args = 0
 2461              		@ link register save eliminated.
 2462              	.LVL147:
2939:Generated_Source\PSoC4/CyLib.c **** }
 2463              		.loc 1 2939 0
 2464 0000 014B     		ldr	r3, .L203
 2465 0002 8000     		lsls	r0, r0, #2
 2466              	.LVL148:
 2467 0004 C058     		ldr	r0, [r0, r3]
2940:Generated_Source\PSoC4/CyLib.c **** 
 2468              		.loc 1 2940 0
 2469              		@ sp needed
 2470 0006 7047     		bx	lr
 2471              	.L204:
 2472              		.align	2
 2473              	.L203:
 2474 0008 00000000 		.word	.LANCHOR0
 2475              		.cfi_endproc
 2476              	.LFE48:
 2477              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2478              		.section	.text.CyGetUniqueId,"ax",%progbits
 2479              		.align	2
 2480              		.global	CyGetUniqueId
 2481              		.code	16
 2482              		.thumb_func
 2483              		.type	CyGetUniqueId, %function
 2484              	CyGetUniqueId:
 2485              	.LFB50:
2966:Generated_Source\PSoC4/CyLib.c **** 
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2969:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2970:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2971:Generated_Source\PSoC4/CyLib.c **** *
2972:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2973:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2974:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2975:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2976:Generated_Source\PSoC4/CyLib.c **** *
2977:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2978:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2979:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2980:Generated_Source\PSoC4/CyLib.c **** *
2981:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2982:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2983:Generated_Source\PSoC4/CyLib.c **** {
 2486              		.loc 1 2983 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490              		@ link register save eliminated.
 2491              	.LVL149:
2984:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2492              		.loc 1 2985 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 104


 2493 0000 144B     		ldr	r3, .L206
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2989:Generated_Source\PSoC4/CyLib.c **** 
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2994:Generated_Source\PSoC4/CyLib.c **** #else
2995:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2999:Generated_Source\PSoC4/CyLib.c **** 
3000:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3004:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3005:Generated_Source\PSoC4/CyLib.c **** }
 2494              		.loc 1 3005 0
 2495              		@ sp needed
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2496              		.loc 1 2985 0
 2497 0002 1A78     		ldrb	r2, [r3]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2498              		.loc 1 2986 0
 2499 0004 144B     		ldr	r3, .L206+4
2985:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2500              		.loc 1 2985 0
 2501 0006 D1B2     		uxtb	r1, r2
 2502 0008 0160     		str	r1, [r0]
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2503              		.loc 1 2986 0
 2504 000a 1B78     		ldrb	r3, [r3]
 2505 000c 1B02     		lsls	r3, r3, #8
 2506 000e 0B43     		orrs	r3, r1
 2507 0010 1A00     		movs	r2, r3
 2508 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2509              		.loc 1 2987 0
 2510 0014 114B     		ldr	r3, .L206+8
 2511 0016 1B78     		ldrb	r3, [r3]
 2512 0018 1B04     		lsls	r3, r3, #16
 2513 001a 1343     		orrs	r3, r2
2988:Generated_Source\PSoC4/CyLib.c **** 
 2514              		.loc 1 2988 0
 2515 001c 104A     		ldr	r2, .L206+12
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2516              		.loc 1 2987 0
 2517 001e 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c **** 
 2518              		.loc 1 2988 0
 2519 0020 1278     		ldrb	r2, [r2]
 2520 0022 1206     		lsls	r2, r2, #24
 2521 0024 1343     		orrs	r3, r2
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 105


 2522 0026 0360     		str	r3, [r0]
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2523              		.loc 1 2990 0
 2524 0028 0E4B     		ldr	r3, .L206+16
 2525 002a 1A78     		ldrb	r2, [r3]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2526              		.loc 1 2991 0
 2527 002c 0E4B     		ldr	r3, .L206+20
2990:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2528              		.loc 1 2990 0
 2529 002e D1B2     		uxtb	r1, r2
 2530 0030 4160     		str	r1, [r0, #4]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2531              		.loc 1 2991 0
 2532 0032 1B78     		ldrb	r3, [r3]
 2533 0034 1B02     		lsls	r3, r3, #8
 2534 0036 0B43     		orrs	r3, r1
 2535 0038 1A00     		movs	r2, r3
 2536 003a 4360     		str	r3, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2537              		.loc 1 2992 0
 2538 003c 0B4B     		ldr	r3, .L206+24
 2539 003e 1B78     		ldrb	r3, [r3]
 2540 0040 1B04     		lsls	r3, r3, #16
 2541 0042 1343     		orrs	r3, r2
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2542              		.loc 1 2993 0
 2543 0044 0A4A     		ldr	r2, .L206+28
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2544              		.loc 1 2992 0
 2545 0046 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c **** #else
 2546              		.loc 1 2993 0
 2547 0048 1278     		ldrb	r2, [r2]
 2548 004a 1206     		lsls	r2, r2, #24
 2549 004c 1343     		orrs	r3, r2
 2550 004e 4360     		str	r3, [r0, #4]
 2551              		.loc 1 3005 0
 2552 0050 7047     		bx	lr
 2553              	.L207:
 2554 0052 C046     		.align	2
 2555              	.L206:
 2556 0054 78F1FF0F 		.word	268431736
 2557 0058 79F1FF0F 		.word	268431737
 2558 005c 7AF1FF0F 		.word	268431738
 2559 0060 7BF1FF0F 		.word	268431739
 2560 0064 7CF1FF0F 		.word	268431740
 2561 0068 7DF1FF0F 		.word	268431741
 2562 006c 7EF1FF0F 		.word	268431742
 2563 0070 7FF1FF0F 		.word	268431743
 2564              		.cfi_endproc
 2565              	.LFE50:
 2566              		.size	CyGetUniqueId, .-CyGetUniqueId
 2567              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2568              		.align	2
 2569              		.global	CySysSetRamAccessArbPriority
 2570              		.code	16
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 106


 2571              		.thumb_func
 2572              		.type	CySysSetRamAccessArbPriority, %function
 2573              	CySysSetRamAccessArbPriority:
 2574              	.LFB51:
3006:Generated_Source\PSoC4/CyLib.c **** 
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3009:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3010:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3011:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3012:Generated_Source\PSoC4/CyLib.c ****     *
3013:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3014:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3015:Generated_Source\PSoC4/CyLib.c ****     *  details.
3016:Generated_Source\PSoC4/CyLib.c ****     *
3017:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3018:Generated_Source\PSoC4/CyLib.c ****     *
3019:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3020:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3024:Generated_Source\PSoC4/CyLib.c ****     *
3025:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3026:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3027:Generated_Source\PSoC4/CyLib.c ****     {
 2575              		.loc 1 3027 0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 0
 2578              		@ frame_needed = 0, uses_anonymous_args = 0
 2579              		@ link register save eliminated.
 2580              	.LVL150:
3028:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3029:Generated_Source\PSoC4/CyLib.c **** 
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2581              		.loc 1 3030 0
 2582 0000 0549     		ldr	r1, .L209
 2583 0002 064B     		ldr	r3, .L209+4
 2584 0004 0A68     		ldr	r2, [r1]
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2585              		.loc 1 3031 0
 2586 0006 4004     		lsls	r0, r0, #17
 2587              	.LVL151:
3030:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2588              		.loc 1 3030 0
 2589 0008 1340     		ands	r3, r2
 2590              	.LVL152:
 2591              		.loc 1 3031 0
 2592 000a C022     		movs	r2, #192
 2593 000c D202     		lsls	r2, r2, #11
 2594 000e 1040     		ands	r0, r2
 2595 0010 1843     		orrs	r0, r3
 2596              	.LVL153:
3032:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2597              		.loc 1 3032 0
 2598 0012 0860     		str	r0, [r1]
3033:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 107


 2599              		.loc 1 3033 0
 2600              		@ sp needed
 2601 0014 7047     		bx	lr
 2602              	.L210:
 2603 0016 C046     		.align	2
 2604              	.L209:
 2605 0018 38001040 		.word	1074790456
 2606 001c FFFFF9FF 		.word	-393217
 2607              		.cfi_endproc
 2608              	.LFE51:
 2609              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2610              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2611              		.align	2
 2612              		.global	CySysSetFlashAccessArbPriority
 2613              		.code	16
 2614              		.thumb_func
 2615              		.type	CySysSetFlashAccessArbPriority, %function
 2616              	CySysSetFlashAccessArbPriority:
 2617              	.LFB52:
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3037:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3038:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3039:Generated_Source\PSoC4/CyLib.c ****     *
3040:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3041:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3042:Generated_Source\PSoC4/CyLib.c ****     *  details.
3043:Generated_Source\PSoC4/CyLib.c ****     *
3044:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3045:Generated_Source\PSoC4/CyLib.c ****     *
3046:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3047:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3051:Generated_Source\PSoC4/CyLib.c ****     *
3052:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3053:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3054:Generated_Source\PSoC4/CyLib.c ****     {
 2618              		.loc 1 3054 0
 2619              		.cfi_startproc
 2620              		@ args = 0, pretend = 0, frame = 0
 2621              		@ frame_needed = 0, uses_anonymous_args = 0
 2622              		@ link register save eliminated.
 2623              	.LVL154:
3055:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3056:Generated_Source\PSoC4/CyLib.c **** 
3057:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2624              		.loc 1 3057 0
 2625 0000 0549     		ldr	r1, .L212
 2626 0002 064B     		ldr	r3, .L212+4
 2627 0004 0A68     		ldr	r2, [r1]
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2628              		.loc 1 3058 0
 2629 0006 4004     		lsls	r0, r0, #17
 2630              	.LVL155:
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 108


3057:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2631              		.loc 1 3057 0
 2632 0008 1340     		ands	r3, r2
 2633              	.LVL156:
 2634              		.loc 1 3058 0
 2635 000a C022     		movs	r2, #192
 2636 000c D202     		lsls	r2, r2, #11
 2637 000e 1040     		ands	r0, r2
 2638 0010 1843     		orrs	r0, r3
 2639              	.LVL157:
3059:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2640              		.loc 1 3059 0
 2641 0012 0860     		str	r0, [r1]
3060:Generated_Source\PSoC4/CyLib.c ****     }
 2642              		.loc 1 3060 0
 2643              		@ sp needed
 2644 0014 7047     		bx	lr
 2645              	.L213:
 2646 0016 C046     		.align	2
 2647              	.L212:
 2648 0018 30001040 		.word	1074790448
 2649 001c FFFFF9FF 		.word	-393217
 2650              		.cfi_endproc
 2651              	.LFE52:
 2652              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2653              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2654              		.align	2
 2655              		.global	CySysSetDmacAccessArbPriority
 2656              		.code	16
 2657              		.thumb_func
 2658              		.type	CySysSetDmacAccessArbPriority, %function
 2659              	CySysSetDmacAccessArbPriority:
 2660              	.LFB53:
3061:Generated_Source\PSoC4/CyLib.c **** 
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3064:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3065:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3066:Generated_Source\PSoC4/CyLib.c ****     *
3067:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3068:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3069:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3070:Generated_Source\PSoC4/CyLib.c ****     *
3071:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3072:Generated_Source\PSoC4/CyLib.c ****     *
3073:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3074:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3078:Generated_Source\PSoC4/CyLib.c ****     *
3079:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3080:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3081:Generated_Source\PSoC4/CyLib.c ****     {
 2661              		.loc 1 3081 0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 109


 2664              		@ frame_needed = 0, uses_anonymous_args = 0
 2665              		@ link register save eliminated.
 2666              	.LVL158:
3082:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3083:Generated_Source\PSoC4/CyLib.c **** 
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2667              		.loc 1 3084 0
 2668 0000 0549     		ldr	r1, .L215
 2669 0002 064B     		ldr	r3, .L215+4
 2670 0004 0A68     		ldr	r2, [r1]
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2671              		.loc 1 3085 0
 2672 0006 4004     		lsls	r0, r0, #17
 2673              	.LVL159:
3084:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2674              		.loc 1 3084 0
 2675 0008 1340     		ands	r3, r2
 2676              	.LVL160:
 2677              		.loc 1 3085 0
 2678 000a C022     		movs	r2, #192
 2679 000c D202     		lsls	r2, r2, #11
 2680 000e 1040     		ands	r0, r2
 2681 0010 1843     		orrs	r0, r3
 2682              	.LVL161:
3086:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2683              		.loc 1 3086 0
 2684 0012 0860     		str	r0, [r1]
3087:Generated_Source\PSoC4/CyLib.c ****     }
 2685              		.loc 1 3087 0
 2686              		@ sp needed
 2687 0014 7047     		bx	lr
 2688              	.L216:
 2689 0016 C046     		.align	2
 2690              	.L215:
 2691 0018 3C001040 		.word	1074790460
 2692 001c FFFFF9FF 		.word	-393217
 2693              		.cfi_endproc
 2694              	.LFE53:
 2695              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2696              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2697              		.align	2
 2698              		.global	CySysSetPeripheralAccessArbPriority
 2699              		.code	16
 2700              		.thumb_func
 2701              		.type	CySysSetPeripheralAccessArbPriority, %function
 2702              	CySysSetPeripheralAccessArbPriority:
 2703              	.LFB54:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3092:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c ****     *
3094:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3095:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3096:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3097:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 110


3098:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3099:Generated_Source\PSoC4/CyLib.c ****     *
3100:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3101:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3102:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3103:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3107:Generated_Source\PSoC4/CyLib.c ****     *
3108:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3109:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3110:Generated_Source\PSoC4/CyLib.c ****     {
 2704              		.loc 1 3110 0
 2705              		.cfi_startproc
 2706              		@ args = 0, pretend = 0, frame = 0
 2707              		@ frame_needed = 0, uses_anonymous_args = 0
 2708              		@ link register save eliminated.
 2709              	.LVL162:
3111:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3112:Generated_Source\PSoC4/CyLib.c **** 
3113:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2710              		.loc 1 3113 0
 2711 0000 0028     		cmp	r0, #0
 2712 0002 04D0     		beq	.L222
3114:Generated_Source\PSoC4/CyLib.c ****         {
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3117:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3118:Generated_Source\PSoC4/CyLib.c ****         } else
3119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3120:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2713              		.loc 1 3120 0
 2714 0004 0128     		cmp	r0, #1
 2715 0006 0DD0     		beq	.L223
3121:Generated_Source\PSoC4/CyLib.c ****         {
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3124:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
3125:Generated_Source\PSoC4/CyLib.c ****         } else
3126:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3127:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3128:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2716              		.loc 1 3128 0
 2717 0008 0228     		cmp	r0, #2
 2718 000a 0DD0     		beq	.L224
 2719              	.LVL163:
 2720              	.L217:
3129:Generated_Source\PSoC4/CyLib.c ****         {
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3133:Generated_Source\PSoC4/CyLib.c ****         } else
3134:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3135:Generated_Source\PSoC4/CyLib.c ****         {
3136:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3137:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 111


3138:Generated_Source\PSoC4/CyLib.c ****         }
3139:Generated_Source\PSoC4/CyLib.c ****     }
 2721              		.loc 1 3139 0
 2722              		@ sp needed
 2723 000c 7047     		bx	lr
 2724              	.LVL164:
 2725              	.L222:
3115:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2726              		.loc 1 3115 0
 2727 000e 0748     		ldr	r0, .L225
 2728              	.LVL165:
 2729              	.L221:
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2730              		.loc 1 3130 0
 2731 0010 0268     		ldr	r2, [r0]
 2732 0012 074B     		ldr	r3, .L225+4
3131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2733              		.loc 1 3131 0
 2734 0014 4904     		lsls	r1, r1, #17
 2735              	.LVL166:
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2736              		.loc 1 3130 0
 2737 0016 1340     		ands	r3, r2
 2738              	.LVL167:
3131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2739              		.loc 1 3131 0
 2740 0018 C022     		movs	r2, #192
 2741 001a D202     		lsls	r2, r2, #11
 2742 001c 1140     		ands	r1, r2
 2743 001e 1943     		orrs	r1, r3
 2744              	.LVL168:
3132:Generated_Source\PSoC4/CyLib.c ****         } else
 2745              		.loc 1 3132 0
 2746 0020 0160     		str	r1, [r0]
 2747              		.loc 1 3139 0
 2748 0022 F3E7     		b	.L217
 2749              	.LVL169:
 2750              	.L223:
3122:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2751              		.loc 1 3122 0
 2752 0024 0348     		ldr	r0, .L225+8
 2753              	.LVL170:
 2754 0026 F3E7     		b	.L221
 2755              	.LVL171:
 2756              	.L224:
3130:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2757              		.loc 1 3130 0
 2758 0028 0348     		ldr	r0, .L225+12
 2759              	.LVL172:
 2760 002a F1E7     		b	.L221
 2761              	.L226:
 2762              		.align	2
 2763              	.L225:
 2764 002c 00011040 		.word	1074790656
 2765 0030 FFFFF9FF 		.word	-393217
 2766 0034 04011040 		.word	1074790660
 2767 0038 08011040 		.word	1074790664
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 112


 2768              		.cfi_endproc
 2769              	.LFE54:
 2770              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2771              		.global	CySysClkPumpConfig
 2772              		.global	cyImoFreqMhz2DpllOffset
 2773              		.global	cyImoFreqMhz2Reg
 2774              		.global	CySysTickInitVar
 2775              		.global	cydelay32kMs
 2776              		.global	cydelayFreqMhz
 2777              		.global	cydelayFreqKhz
 2778              		.global	cydelayFreqHz
 2779              		.section	.rodata
 2780              		.align	2
 2781              		.set	.LANCHOR1,. + 0
 2782              		.type	cyImoFreqMhz2Reg, %object
 2783              		.size	cyImoFreqMhz2Reg, 46
 2784              	cyImoFreqMhz2Reg:
 2785 0000 03       		.byte	3
 2786 0001 04       		.byte	4
 2787 0002 05       		.byte	5
 2788 0003 06       		.byte	6
 2789 0004 07       		.byte	7
 2790 0005 08       		.byte	8
 2791 0006 09       		.byte	9
 2792 0007 0A       		.byte	10
 2793 0008 0B       		.byte	11
 2794 0009 0C       		.byte	12
 2795 000a 0E       		.byte	14
 2796 000b 0F       		.byte	15
 2797 000c 10       		.byte	16
 2798 000d 11       		.byte	17
 2799 000e 12       		.byte	18
 2800 000f 13       		.byte	19
 2801 0010 14       		.byte	20
 2802 0011 15       		.byte	21
 2803 0012 16       		.byte	22
 2804 0013 17       		.byte	23
 2805 0014 18       		.byte	24
 2806 0015 19       		.byte	25
 2807 0016 1B       		.byte	27
 2808 0017 1C       		.byte	28
 2809 0018 1D       		.byte	29
 2810 0019 1E       		.byte	30
 2811 001a 1F       		.byte	31
 2812 001b 20       		.byte	32
 2813 001c 21       		.byte	33
 2814 001d 22       		.byte	34
 2815 001e 23       		.byte	35
 2816 001f 25       		.byte	37
 2817 0020 26       		.byte	38
 2818 0021 27       		.byte	39
 2819 0022 28       		.byte	40
 2820 0023 29       		.byte	41
 2821 0024 2A       		.byte	42
 2822 0025 2B       		.byte	43
 2823 0026 2E       		.byte	46
 2824 0027 2F       		.byte	47
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 113


 2825 0028 30       		.byte	48
 2826 0029 31       		.byte	49
 2827 002a 32       		.byte	50
 2828 002b 33       		.byte	51
 2829 002c 34       		.byte	52
 2830 002d 35       		.byte	53
 2831 002e 0000     		.space	2
 2832              		.type	cyImoFreqMhz2DpllOffset, %object
 2833              		.size	cyImoFreqMhz2DpllOffset, 23
 2834              	cyImoFreqMhz2DpllOffset:
 2835 0030 EE       		.byte	-18
 2836 0031 DB       		.byte	-37
 2837 0032 C9       		.byte	-55
 2838 0033 B9       		.byte	-71
 2839 0034 AA       		.byte	-86
 2840 0035 9B       		.byte	-101
 2841 0036 8E       		.byte	-114
 2842 0037 82       		.byte	-126
 2843 0038 76       		.byte	118
 2844 0039 6B       		.byte	107
 2845 003a 60       		.byte	96
 2846 003b 56       		.byte	86
 2847 003c 4D       		.byte	77
 2848 003d 44       		.byte	68
 2849 003e 3B       		.byte	59
 2850 003f 33       		.byte	51
 2851 0040 2C       		.byte	44
 2852 0041 24       		.byte	36
 2853 0042 1D       		.byte	29
 2854 0043 17       		.byte	23
 2855 0044 10       		.byte	16
 2856 0045 0A       		.byte	10
 2857 0046 04       		.byte	4
 2858              		.data
 2859              		.align	2
 2860              		.set	.LANCHOR2,. + 0
 2861              		.type	cydelayFreqKhz, %object
 2862              		.size	cydelayFreqKhz, 4
 2863              	cydelayFreqKhz:
 2864 0000 80BB0000 		.word	48000
 2865              		.type	CySysClkPumpConfig, %object
 2866              		.size	CySysClkPumpConfig, 4
 2867              	CySysClkPumpConfig:
 2868 0004 01000000 		.word	1
 2869              		.type	cydelayFreqMhz, %object
 2870              		.size	cydelayFreqMhz, 1
 2871              	cydelayFreqMhz:
 2872 0008 30       		.byte	48
 2873 0009 000000   		.space	3
 2874              		.type	cydelay32kMs, %object
 2875              		.size	cydelay32kMs, 4
 2876              	cydelay32kMs:
 2877 000c 0000C05D 		.word	1572864000
 2878              		.type	cydelayFreqHz, %object
 2879              		.size	cydelayFreqHz, 4
 2880              	cydelayFreqHz:
 2881 0010 006CDC02 		.word	48000000
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 114


 2882              		.bss
 2883              		.align	2
 2884              		.set	.LANCHOR0,. + 0
 2885              		.type	CySysTickCallbacks, %object
 2886              		.size	CySysTickCallbacks, 20
 2887              	CySysTickCallbacks:
 2888 0000 00000000 		.space	20
 2888      00000000 
 2888      00000000 
 2888      00000000 
 2888      00000000 
 2889              		.type	CySysTickInitVar, %object
 2890              		.size	CySysTickInitVar, 4
 2891              	CySysTickInitVar:
 2892 0014 00000000 		.space	4
 2893              		.text
 2894              	.Letext0:
 2895              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2896              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2897              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2898              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2899              		.section	.debug_info,"",%progbits
 2900              	.Ldebug_info0:
 2901 0000 8E0F0000 		.4byte	0xf8e
 2902 0004 0400     		.2byte	0x4
 2903 0006 00000000 		.4byte	.Ldebug_abbrev0
 2904 000a 04       		.byte	0x4
 2905 000b 01       		.uleb128 0x1
 2906 000c DD000000 		.4byte	.LASF120
 2907 0010 0C       		.byte	0xc
 2908 0011 EE070000 		.4byte	.LASF121
 2909 0015 02030000 		.4byte	.LASF122
 2910 0019 10010000 		.4byte	.Ldebug_ranges0+0x110
 2911 001d 00000000 		.4byte	0
 2912 0021 00000000 		.4byte	.Ldebug_line0
 2913 0025 02       		.uleb128 0x2
 2914 0026 01       		.byte	0x1
 2915 0027 06       		.byte	0x6
 2916 0028 79010000 		.4byte	.LASF0
 2917 002c 02       		.uleb128 0x2
 2918 002d 01       		.byte	0x1
 2919 002e 08       		.byte	0x8
 2920 002f 36060000 		.4byte	.LASF1
 2921 0033 02       		.uleb128 0x2
 2922 0034 02       		.byte	0x2
 2923 0035 05       		.byte	0x5
 2924 0036 4B060000 		.4byte	.LASF2
 2925 003a 02       		.uleb128 0x2
 2926 003b 02       		.byte	0x2
 2927 003c 07       		.byte	0x7
 2928 003d FF030000 		.4byte	.LASF3
 2929 0041 02       		.uleb128 0x2
 2930 0042 04       		.byte	0x4
 2931 0043 05       		.byte	0x5
 2932 0044 DE010000 		.4byte	.LASF4
 2933 0048 02       		.uleb128 0x2
 2934 0049 04       		.byte	0x4
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 115


 2935 004a 07       		.byte	0x7
 2936 004b 72030000 		.4byte	.LASF5
 2937 004f 02       		.uleb128 0x2
 2938 0050 08       		.byte	0x8
 2939 0051 05       		.byte	0x5
 2940 0052 6B010000 		.4byte	.LASF6
 2941 0056 02       		.uleb128 0x2
 2942 0057 08       		.byte	0x8
 2943 0058 07       		.byte	0x7
 2944 0059 67000000 		.4byte	.LASF7
 2945 005d 03       		.uleb128 0x3
 2946 005e 04       		.byte	0x4
 2947 005f 05       		.byte	0x5
 2948 0060 696E7400 		.ascii	"int\000"
 2949 0064 02       		.uleb128 0x2
 2950 0065 04       		.byte	0x4
 2951 0066 07       		.byte	0x7
 2952 0067 F5020000 		.4byte	.LASF8
 2953 006b 04       		.uleb128 0x4
 2954 006c 13020000 		.4byte	.LASF9
 2955 0070 02       		.byte	0x2
 2956 0071 D201     		.2byte	0x1d2
 2957 0073 2C000000 		.4byte	0x2c
 2958 0077 04       		.uleb128 0x4
 2959 0078 0F000000 		.4byte	.LASF10
 2960 007c 02       		.byte	0x2
 2961 007d D301     		.2byte	0x1d3
 2962 007f 3A000000 		.4byte	0x3a
 2963 0083 04       		.uleb128 0x4
 2964 0084 56020000 		.4byte	.LASF11
 2965 0088 02       		.byte	0x2
 2966 0089 D401     		.2byte	0x1d4
 2967 008b 48000000 		.4byte	0x48
 2968 008f 02       		.uleb128 0x2
 2969 0090 04       		.byte	0x4
 2970 0091 04       		.byte	0x4
 2971 0092 9C050000 		.4byte	.LASF12
 2972 0096 02       		.uleb128 0x2
 2973 0097 08       		.byte	0x8
 2974 0098 04       		.byte	0x4
 2975 0099 32020000 		.4byte	.LASF13
 2976 009d 02       		.uleb128 0x2
 2977 009e 01       		.byte	0x1
 2978 009f 08       		.byte	0x8
 2979 00a0 97060000 		.4byte	.LASF14
 2980 00a4 04       		.uleb128 0x4
 2981 00a5 03060000 		.4byte	.LASF15
 2982 00a9 02       		.byte	0x2
 2983 00aa 7C02     		.2byte	0x27c
 2984 00ac B0000000 		.4byte	0xb0
 2985 00b0 05       		.uleb128 0x5
 2986 00b1 6B000000 		.4byte	0x6b
 2987 00b5 04       		.uleb128 0x4
 2988 00b6 B0040000 		.4byte	.LASF16
 2989 00ba 02       		.byte	0x2
 2990 00bb 7E02     		.2byte	0x27e
 2991 00bd C1000000 		.4byte	0xc1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 116


 2992 00c1 05       		.uleb128 0x5
 2993 00c2 83000000 		.4byte	0x83
 2994 00c6 04       		.uleb128 0x4
 2995 00c7 B4060000 		.4byte	.LASF17
 2996 00cb 02       		.byte	0x2
 2997 00cc 8E02     		.2byte	0x28e
 2998 00ce D2000000 		.4byte	0xd2
 2999 00d2 06       		.uleb128 0x6
 3000 00d3 04       		.byte	0x4
 3001 00d4 D8000000 		.4byte	0xd8
 3002 00d8 07       		.uleb128 0x7
 3003 00d9 02       		.uleb128 0x2
 3004 00da 08       		.byte	0x8
 3005 00db 04       		.byte	0x4
 3006 00dc 29050000 		.4byte	.LASF18
 3007 00e0 02       		.uleb128 0x2
 3008 00e1 04       		.byte	0x4
 3009 00e2 07       		.byte	0x7
 3010 00e3 D9040000 		.4byte	.LASF19
 3011 00e7 08       		.uleb128 0x8
 3012 00e8 C7050000 		.4byte	.LASF20
 3013 00ec 03       		.byte	0x3
 3014 00ed F5       		.byte	0xf5
 3015 00ee D2000000 		.4byte	0xd2
 3016 00f2 09       		.uleb128 0x9
 3017 00f3 96040000 		.4byte	.LASF26
 3018 00f7 01       		.byte	0x1
 3019 00f8 1D01     		.2byte	0x11d
 3020 00fa 01       		.byte	0x1
 3021 00fb 0A       		.uleb128 0xa
 3022 00fc 7A020000 		.4byte	.LASF28
 3023 0100 01       		.byte	0x1
 3024 0101 AF       		.byte	0xaf
 3025 0102 01       		.byte	0x1
 3026 0103 48010000 		.4byte	0x148
 3027 0107 0B       		.uleb128 0xb
 3028 0108 6900     		.ascii	"i\000"
 3029 010a 01       		.byte	0x1
 3030 010b B2       		.byte	0xb2
 3031 010c 83000000 		.4byte	0x83
 3032 0110 0C       		.uleb128 0xc
 3033 0111 85010000 		.4byte	.LASF21
 3034 0115 01       		.byte	0x1
 3035 0116 B5       		.byte	0xb5
 3036 0117 83000000 		.4byte	0x83
 3037 011b 0C       		.uleb128 0xc
 3038 011c 96010000 		.4byte	.LASF22
 3039 0120 01       		.byte	0x1
 3040 0121 B6       		.byte	0xb6
 3041 0122 6B000000 		.4byte	0x6b
 3042 0126 0C       		.uleb128 0xc
 3043 0127 12040000 		.4byte	.LASF23
 3044 012b 01       		.byte	0x1
 3045 012c B7       		.byte	0xb7
 3046 012d 83000000 		.4byte	0x83
 3047 0131 0C       		.uleb128 0xc
 3048 0132 A5010000 		.4byte	.LASF24
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 117


 3049 0136 01       		.byte	0x1
 3050 0137 B8       		.byte	0xb8
 3051 0138 83000000 		.4byte	0x83
 3052 013c 0C       		.uleb128 0xc
 3053 013d 19070000 		.4byte	.LASF25
 3054 0141 01       		.byte	0x1
 3055 0142 B9       		.byte	0xb9
 3056 0143 C1000000 		.4byte	0xc1
 3057 0147 00       		.byte	0
 3058 0148 0D       		.uleb128 0xd
 3059 0149 C0010000 		.4byte	.LASF34
 3060 014d 01       		.byte	0x1
 3061 014e 3001     		.2byte	0x130
 3062 0150 83000000 		.4byte	0x83
 3063 0154 01       		.byte	0x1
 3064 0155 09       		.uleb128 0x9
 3065 0156 3F020000 		.4byte	.LASF27
 3066 015a 01       		.byte	0x1
 3067 015b 8608     		.2byte	0x886
 3068 015d 01       		.byte	0x1
 3069 015e 0E       		.uleb128 0xe
 3070 015f 28020000 		.4byte	.LASF29
 3071 0163 01       		.byte	0x1
 3072 0164 160A     		.2byte	0xa16
 3073 0166 01       		.byte	0x1
 3074 0167 78010000 		.4byte	0x178
 3075 016b 0F       		.uleb128 0xf
 3076 016c 0D080000 		.4byte	.LASF32
 3077 0170 01       		.byte	0x1
 3078 0171 160A     		.2byte	0xa16
 3079 0173 77000000 		.4byte	0x77
 3080 0177 00       		.byte	0
 3081 0178 09       		.uleb128 0x9
 3082 0179 B6000000 		.4byte	.LASF30
 3083 017d 01       		.byte	0x1
 3084 017e A00A     		.2byte	0xaa0
 3085 0180 01       		.byte	0x1
 3086 0181 0E       		.uleb128 0xe
 3087 0182 19040000 		.4byte	.LASF31
 3088 0186 01       		.byte	0x1
 3089 0187 010B     		.2byte	0xb01
 3090 0189 01       		.byte	0x1
 3091 018a 9B010000 		.4byte	0x19b
 3092 018e 0F       		.uleb128 0xf
 3093 018f C5020000 		.4byte	.LASF33
 3094 0193 01       		.byte	0x1
 3095 0194 010B     		.2byte	0xb01
 3096 0196 83000000 		.4byte	0x83
 3097 019a 00       		.byte	0
 3098 019b 0D       		.uleb128 0xd
 3099 019c DF020000 		.4byte	.LASF35
 3100 01a0 01       		.byte	0x1
 3101 01a1 310B     		.2byte	0xb31
 3102 01a3 83000000 		.4byte	0x83
 3103 01a7 01       		.byte	0x1
 3104 01a8 10       		.uleb128 0x10
 3105 01a9 7D060000 		.4byte	.LASF123
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 118


 3106 01ad 01       		.byte	0x1
 3107 01ae 860B     		.2byte	0xb86
 3108 01b0 01       		.byte	0x1
 3109 01b1 C0010000 		.4byte	0x1c0
 3110 01b5 11       		.uleb128 0x11
 3111 01b6 6900     		.ascii	"i\000"
 3112 01b8 01       		.byte	0x1
 3113 01b9 880B     		.2byte	0xb88
 3114 01bb 83000000 		.4byte	0x83
 3115 01bf 00       		.byte	0
 3116 01c0 09       		.uleb128 0x9
 3117 01c1 63030000 		.4byte	.LASF36
 3118 01c5 01       		.byte	0x1
 3119 01c6 3E0B     		.2byte	0xb3e
 3120 01c8 01       		.byte	0x1
 3121 01c9 0E       		.uleb128 0xe
 3122 01ca 21080000 		.4byte	.LASF37
 3123 01ce 01       		.byte	0x1
 3124 01cf C10A     		.2byte	0xac1
 3125 01d1 01       		.byte	0x1
 3126 01d2 E3010000 		.4byte	0x1e3
 3127 01d6 0F       		.uleb128 0xf
 3128 01d7 BF020000 		.4byte	.LASF38
 3129 01db 01       		.byte	0x1
 3130 01dc C10A     		.2byte	0xac1
 3131 01de 83000000 		.4byte	0x83
 3132 01e2 00       		.byte	0
 3133 01e3 12       		.uleb128 0x12
 3134 01e4 84040000 		.4byte	.LASF124
 3135 01e8 01       		.byte	0x1
 3136 01e9 E708     		.2byte	0x8e7
 3137 01eb C6000000 		.4byte	0xc6
 3138 01ef 01       		.byte	0x1
 3139 01f0 25020000 		.4byte	0x225
 3140 01f4 0F       		.uleb128 0xf
 3141 01f5 40040000 		.4byte	.LASF39
 3142 01f9 01       		.byte	0x1
 3143 01fa E708     		.2byte	0x8e7
 3144 01fc 6B000000 		.4byte	0x6b
 3145 0200 0F       		.uleb128 0xf
 3146 0201 35050000 		.4byte	.LASF40
 3147 0205 01       		.byte	0x1
 3148 0206 E708     		.2byte	0x8e7
 3149 0208 C6000000 		.4byte	0xc6
 3150 020c 13       		.uleb128 0x13
 3151 020d 4B000000 		.4byte	.LASF41
 3152 0211 01       		.byte	0x1
 3153 0212 E908     		.2byte	0x8e9
 3154 0214 C6000000 		.4byte	0xc6
 3155 0218 13       		.uleb128 0x13
 3156 0219 00000000 		.4byte	.LASF42
 3157 021d 01       		.byte	0x1
 3158 021e EA08     		.2byte	0x8ea
 3159 0220 25020000 		.4byte	0x225
 3160 0224 00       		.byte	0
 3161 0225 06       		.uleb128 0x6
 3162 0226 04       		.byte	0x4
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 119


 3163 0227 C6000000 		.4byte	0xc6
 3164 022b 09       		.uleb128 0x9
 3165 022c C1060000 		.4byte	.LASF43
 3166 0230 01       		.byte	0x1
 3167 0231 7F0A     		.2byte	0xa7f
 3168 0233 01       		.byte	0x1
 3169 0234 14       		.uleb128 0x14
 3170 0235 A8010000 		.4byte	0x1a8
 3171 0239 00000000 		.4byte	.LFB49
 3172 023d 28000000 		.4byte	.LFE49-.LFB49
 3173 0241 01       		.uleb128 0x1
 3174 0242 9C       		.byte	0x9c
 3175 0243 6C020000 		.4byte	0x26c
 3176 0247 15       		.uleb128 0x15
 3177 0248 B5010000 		.4byte	0x1b5
 3178 024c 16       		.uleb128 0x16
 3179 024d 9B010000 		.4byte	0x19b
 3180 0251 00000000 		.4byte	.LBB38
 3181 0255 00000000 		.4byte	.Ldebug_ranges0+0
 3182 0259 01       		.byte	0x1
 3183 025a 8B0B     		.2byte	0xb8b
 3184 025c 17       		.uleb128 0x17
 3185 025d 10000000 		.4byte	.LBB42
 3186 0261 18000000 		.4byte	.LBE42-.LBB42
 3187 0265 15       		.uleb128 0x15
 3188 0266 B5010000 		.4byte	0x1b5
 3189 026a 00       		.byte	0
 3190 026b 00       		.byte	0
 3191 026c 0E       		.uleb128 0xe
 3192 026d 25070000 		.4byte	.LASF44
 3193 0271 01       		.byte	0x1
 3194 0272 FF09     		.2byte	0x9ff
 3195 0274 01       		.byte	0x1
 3196 0275 86020000 		.4byte	0x286
 3197 0279 0F       		.uleb128 0xf
 3198 027a E8050000 		.4byte	.LASF45
 3199 027e 01       		.byte	0x1
 3200 027f FF09     		.2byte	0x9ff
 3201 0281 83000000 		.4byte	0x83
 3202 0285 00       		.byte	0
 3203 0286 18       		.uleb128 0x18
 3204 0287 FB000000 		.4byte	0xfb
 3205 028b 00000000 		.4byte	.LFB55
 3206 028f 10010000 		.4byte	.LFE55-.LFB55
 3207 0293 01       		.uleb128 0x1
 3208 0294 9C       		.byte	0x9c
 3209 0295 23030000 		.4byte	0x323
 3210 0299 19       		.uleb128 0x19
 3211 029a 07010000 		.4byte	0x107
 3212 029e 00000000 		.4byte	.LLST0
 3213 02a2 19       		.uleb128 0x19
 3214 02a3 10010000 		.4byte	0x110
 3215 02a7 42000000 		.4byte	.LLST1
 3216 02ab 19       		.uleb128 0x19
 3217 02ac 1B010000 		.4byte	0x11b
 3218 02b0 79000000 		.4byte	.LLST2
 3219 02b4 19       		.uleb128 0x19
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 120


 3220 02b5 26010000 		.4byte	0x126
 3221 02b9 97000000 		.4byte	.LLST3
 3222 02bd 19       		.uleb128 0x19
 3223 02be 31010000 		.4byte	0x131
 3224 02c2 14010000 		.4byte	.LLST4
 3225 02c6 1A       		.uleb128 0x1a
 3226 02c7 3C010000 		.4byte	0x13c
 3227 02cb 02       		.uleb128 0x2
 3228 02cc 91       		.byte	0x91
 3229 02cd 6C       		.sleb128 -20
 3230 02ce 1B       		.uleb128 0x1b
 3231 02cf 6C020000 		.4byte	0x26c
 3232 02d3 82000000 		.4byte	.LBB45
 3233 02d7 0E000000 		.4byte	.LBE45-.LBB45
 3234 02db 01       		.byte	0x1
 3235 02dc 0801     		.2byte	0x108
 3236 02de F5020000 		.4byte	0x2f5
 3237 02e2 1C       		.uleb128 0x1c
 3238 02e3 79020000 		.4byte	0x279
 3239 02e7 62010000 		.4byte	.LLST5
 3240 02eb 1D       		.uleb128 0x1d
 3241 02ec 90000000 		.4byte	.LVL14
 3242 02f0 5A0F0000 		.4byte	0xf5a
 3243 02f4 00       		.byte	0
 3244 02f5 1D       		.uleb128 0x1d
 3245 02f6 08000000 		.4byte	.LVL1
 3246 02fa 650F0000 		.4byte	0xf65
 3247 02fe 1E       		.uleb128 0x1e
 3248 02ff 76000000 		.4byte	.LVL12
 3249 0303 700F0000 		.4byte	0xf70
 3250 0307 12030000 		.4byte	0x312
 3251 030b 1F       		.uleb128 0x1f
 3252 030c 01       		.uleb128 0x1
 3253 030d 50       		.byte	0x50
 3254 030e 02       		.uleb128 0x2
 3255 030f 08       		.byte	0x8
 3256 0310 30       		.byte	0x30
 3257 0311 00       		.byte	0
 3258 0312 20       		.uleb128 0x20
 3259 0313 9A000000 		.4byte	.LVL15
 3260 0317 7B0F0000 		.4byte	0xf7b
 3261 031b 1F       		.uleb128 0x1f
 3262 031c 01       		.uleb128 0x1
 3263 031d 50       		.byte	0x50
 3264 031e 02       		.uleb128 0x2
 3265 031f 74       		.byte	0x74
 3266 0320 00       		.sleb128 0
 3267 0321 00       		.byte	0
 3268 0322 00       		.byte	0
 3269 0323 21       		.uleb128 0x21
 3270 0324 C5070000 		.4byte	.LASF61
 3271 0328 01       		.byte	0x1
 3272 0329 6B       		.byte	0x6b
 3273 032a 00000000 		.4byte	.LFB1
 3274 032e 14000000 		.4byte	.LFE1-.LFB1
 3275 0332 01       		.uleb128 0x1
 3276 0333 9C       		.byte	0x9c
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 121


 3277 0334 22       		.uleb128 0x22
 3278 0335 9F030000 		.4byte	.LASF46
 3279 0339 01       		.byte	0x1
 3280 033a 8B       		.byte	0x8b
 3281 033b 00000000 		.4byte	.LFB2
 3282 033f 24000000 		.4byte	.LFE2-.LFB2
 3283 0343 01       		.uleb128 0x1
 3284 0344 9C       		.byte	0x9c
 3285 0345 59030000 		.4byte	0x359
 3286 0349 23       		.uleb128 0x23
 3287 034a F2000000 		.4byte	0xf2
 3288 034e 00000000 		.4byte	.LBB47
 3289 0352 18000000 		.4byte	.Ldebug_ranges0+0x18
 3290 0356 01       		.byte	0x1
 3291 0357 8E       		.byte	0x8e
 3292 0358 00       		.byte	0
 3293 0359 18       		.uleb128 0x18
 3294 035a FB000000 		.4byte	0xfb
 3295 035e 00000000 		.4byte	.LFB3
 3296 0362 10000000 		.4byte	.LFE3-.LFB3
 3297 0366 01       		.uleb128 0x1
 3298 0367 9C       		.byte	0x9c
 3299 0368 9E030000 		.4byte	0x39e
 3300 036c 15       		.uleb128 0x15
 3301 036d 07010000 		.4byte	0x107
 3302 0371 15       		.uleb128 0x15
 3303 0372 10010000 		.4byte	0x110
 3304 0376 15       		.uleb128 0x15
 3305 0377 1B010000 		.4byte	0x11b
 3306 037b 15       		.uleb128 0x15
 3307 037c 26010000 		.4byte	0x126
 3308 0380 24       		.uleb128 0x24
 3309 0381 31010000 		.4byte	0x131
 3310 0385 00       		.byte	0
 3311 0386 15       		.uleb128 0x15
 3312 0387 3C010000 		.4byte	0x13c
 3313 038b 1D       		.uleb128 0x1d
 3314 038c 06000000 		.4byte	.LVL30
 3315 0390 860F0000 		.4byte	0xf86
 3316 0394 1D       		.uleb128 0x1d
 3317 0395 0E000000 		.4byte	.LVL31
 3318 0399 86020000 		.4byte	0x286
 3319 039d 00       		.byte	0
 3320 039e 25       		.uleb128 0x25
 3321 039f F2000000 		.4byte	0xf2
 3322 03a3 00000000 		.4byte	.LFB4
 3323 03a7 14000000 		.4byte	.LFE4-.LFB4
 3324 03ab 01       		.uleb128 0x1
 3325 03ac 9C       		.byte	0x9c
 3326 03ad 25       		.uleb128 0x25
 3327 03ae 48010000 		.4byte	0x148
 3328 03b2 00000000 		.4byte	.LFB5
 3329 03b6 10000000 		.4byte	.LFE5-.LFB5
 3330 03ba 01       		.uleb128 0x1
 3331 03bb 9C       		.byte	0x9c
 3332 03bc 26       		.uleb128 0x26
 3333 03bd 1F000000 		.4byte	.LASF47
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 122


 3334 03c1 01       		.byte	0x1
 3335 03c2 AD01     		.2byte	0x1ad
 3336 03c4 00000000 		.4byte	.LFB6
 3337 03c8 20000000 		.4byte	.LFE6-.LFB6
 3338 03cc 01       		.uleb128 0x1
 3339 03cd 9C       		.byte	0x9c
 3340 03ce 15040000 		.4byte	0x415
 3341 03d2 27       		.uleb128 0x27
 3342 03d3 73060000 		.4byte	.LASF50
 3343 03d7 01       		.byte	0x1
 3344 03d8 AD01     		.2byte	0x1ad
 3345 03da 83000000 		.4byte	0x83
 3346 03de 76010000 		.4byte	.LLST6
 3347 03e2 28       		.uleb128 0x28
 3348 03e3 96010000 		.4byte	.LASF22
 3349 03e7 01       		.byte	0x1
 3350 03e8 AF01     		.2byte	0x1af
 3351 03ea 6B000000 		.4byte	0x6b
 3352 03ee A2010000 		.4byte	.LLST7
 3353 03f2 28       		.uleb128 0x28
 3354 03f3 1A080000 		.4byte	.LASF48
 3355 03f7 01       		.byte	0x1
 3356 03f8 B001     		.2byte	0x1b0
 3357 03fa 83000000 		.4byte	0x83
 3358 03fe B5010000 		.4byte	.LLST8
 3359 0402 1D       		.uleb128 0x1d
 3360 0403 08000000 		.4byte	.LVL33
 3361 0407 650F0000 		.4byte	0xf65
 3362 040b 1D       		.uleb128 0x1d
 3363 040c 1A000000 		.4byte	.LVL36
 3364 0410 7B0F0000 		.4byte	0xf7b
 3365 0414 00       		.byte	0
 3366 0415 26       		.uleb128 0x26
 3367 0416 FE010000 		.4byte	.LASF49
 3368 041a 01       		.byte	0x1
 3369 041b D901     		.2byte	0x1d9
 3370 041d 00000000 		.4byte	.LFB7
 3371 0421 38000000 		.4byte	.LFE7-.LFB7
 3372 0425 01       		.uleb128 0x1
 3373 0426 9C       		.byte	0x9c
 3374 0427 3A040000 		.4byte	0x43a
 3375 042b 29       		.uleb128 0x29
 3376 042c 3D050000 		.4byte	.LASF51
 3377 0430 01       		.byte	0x1
 3378 0431 D901     		.2byte	0x1d9
 3379 0433 83000000 		.4byte	0x83
 3380 0437 01       		.uleb128 0x1
 3381 0438 50       		.byte	0x50
 3382 0439 00       		.byte	0
 3383 043a 2A       		.uleb128 0x2a
 3384 043b 62020000 		.4byte	.LASF63
 3385 043f 01       		.byte	0x1
 3386 0440 FE01     		.2byte	0x1fe
 3387 0442 83000000 		.4byte	0x83
 3388 0446 00000000 		.4byte	.LFB8
 3389 044a 18000000 		.4byte	.LFE8-.LFB8
 3390 044e 01       		.uleb128 0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 123


 3391 044f 9C       		.byte	0x9c
 3392 0450 87040000 		.4byte	0x487
 3393 0454 28       		.uleb128 0x28
 3394 0455 96010000 		.4byte	.LASF22
 3395 0459 01       		.byte	0x1
 3396 045a 0002     		.2byte	0x200
 3397 045c 6B000000 		.4byte	0x6b
 3398 0460 D3010000 		.4byte	.LLST9
 3399 0464 28       		.uleb128 0x28
 3400 0465 44050000 		.4byte	.LASF52
 3401 0469 01       		.byte	0x1
 3402 046a 0102     		.2byte	0x201
 3403 046c 83000000 		.4byte	0x83
 3404 0470 E6010000 		.4byte	.LLST10
 3405 0474 1D       		.uleb128 0x1d
 3406 0475 06000000 		.4byte	.LVL39
 3407 0479 650F0000 		.4byte	0xf65
 3408 047d 1D       		.uleb128 0x1d
 3409 047e 0E000000 		.4byte	.LVL41
 3410 0482 7B0F0000 		.4byte	0xf7b
 3411 0486 00       		.byte	0
 3412 0487 26       		.uleb128 0x26
 3413 0488 D1060000 		.4byte	.LASF53
 3414 048c 01       		.byte	0x1
 3415 048d 3502     		.2byte	0x235
 3416 048f 00000000 		.4byte	.LFB9
 3417 0493 2C000000 		.4byte	.LFE9-.LFB9
 3418 0497 01       		.uleb128 0x1
 3419 0498 9C       		.byte	0x9c
 3420 0499 D0040000 		.4byte	0x4d0
 3421 049d 27       		.uleb128 0x27
 3422 049e BD070000 		.4byte	.LASF54
 3423 04a2 01       		.byte	0x1
 3424 04a3 3502     		.2byte	0x235
 3425 04a5 83000000 		.4byte	0x83
 3426 04a9 08020000 		.4byte	.LLST11
 3427 04ad 28       		.uleb128 0x28
 3428 04ae 96010000 		.4byte	.LASF22
 3429 04b2 01       		.byte	0x1
 3430 04b3 3702     		.2byte	0x237
 3431 04b5 6B000000 		.4byte	0x6b
 3432 04b9 34020000 		.4byte	.LLST12
 3433 04bd 1D       		.uleb128 0x1d
 3434 04be 08000000 		.4byte	.LVL44
 3435 04c2 650F0000 		.4byte	0xf65
 3436 04c6 1D       		.uleb128 0x1d
 3437 04c7 22000000 		.4byte	.LVL46
 3438 04cb 7B0F0000 		.4byte	0xf7b
 3439 04cf 00       		.byte	0
 3440 04d0 26       		.uleb128 0x26
 3441 04d1 50040000 		.4byte	.LASF55
 3442 04d5 01       		.byte	0x1
 3443 04d6 6F02     		.2byte	0x26f
 3444 04d8 00000000 		.4byte	.LFB10
 3445 04dc 98000000 		.4byte	.LFE10-.LFB10
 3446 04e0 01       		.uleb128 0x1
 3447 04e1 9C       		.byte	0x9c
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 124


 3448 04e2 BE050000 		.4byte	0x5be
 3449 04e6 27       		.uleb128 0x27
 3450 04e7 85010000 		.4byte	.LASF21
 3451 04eb 01       		.byte	0x1
 3452 04ec 6F02     		.2byte	0x26f
 3453 04ee 83000000 		.4byte	0x83
 3454 04f2 47020000 		.4byte	.LLST13
 3455 04f6 2B       		.uleb128 0x2b
 3456 04f7 7E000000 		.4byte	.LASF56
 3457 04fb 01       		.byte	0x1
 3458 04fc 7202     		.2byte	0x272
 3459 04fe CE050000 		.4byte	0x5ce
 3460 0502 02       		.uleb128 0x2
 3461 0503 91       		.byte	0x91
 3462 0504 58       		.sleb128 -40
 3463 0505 2B       		.uleb128 0x2b
 3464 0506 F4010000 		.4byte	.LASF57
 3465 050a 01       		.byte	0x1
 3466 050b 7302     		.2byte	0x273
 3467 050d E3050000 		.4byte	0x5e3
 3468 0511 02       		.uleb128 0x2
 3469 0512 91       		.byte	0x91
 3470 0513 60       		.sleb128 -32
 3471 0514 28       		.uleb128 0x28
 3472 0515 D6010000 		.4byte	.LASF58
 3473 0519 01       		.byte	0x1
 3474 051a 7D02     		.2byte	0x27d
 3475 051c 83000000 		.4byte	0x83
 3476 0520 7E020000 		.4byte	.LLST14
 3477 0524 28       		.uleb128 0x28
 3478 0525 96010000 		.4byte	.LASF22
 3479 0529 01       		.byte	0x1
 3480 052a 8402     		.2byte	0x284
 3481 052c 6B000000 		.4byte	0x6b
 3482 0530 B4020000 		.4byte	.LLST15
 3483 0534 16       		.uleb128 0x16
 3484 0535 48010000 		.4byte	0x148
 3485 0539 0A000000 		.4byte	.LBB51
 3486 053d 30000000 		.4byte	.Ldebug_ranges0+0x30
 3487 0541 01       		.byte	0x1
 3488 0542 8A02     		.2byte	0x28a
 3489 0544 2C       		.uleb128 0x2c
 3490 0545 F2000000 		.4byte	0xf2
 3491 0549 56000000 		.4byte	.LBB55
 3492 054d 08000000 		.4byte	.LBE55-.LBB55
 3493 0551 01       		.byte	0x1
 3494 0552 8D02     		.2byte	0x28d
 3495 0554 1B       		.uleb128 0x1b
 3496 0555 FB000000 		.4byte	0xfb
 3497 0559 62000000 		.4byte	.LBB57
 3498 055d 36000000 		.4byte	.LBE57-.LBB57
 3499 0561 01       		.byte	0x1
 3500 0562 2C03     		.2byte	0x32c
 3501 0564 A4050000 		.4byte	0x5a4
 3502 0568 17       		.uleb128 0x17
 3503 0569 62000000 		.4byte	.LBB58
 3504 056d 36000000 		.4byte	.LBE58-.LBB58
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 125


 3505 0571 15       		.uleb128 0x15
 3506 0572 07010000 		.4byte	0x107
 3507 0576 15       		.uleb128 0x15
 3508 0577 10010000 		.4byte	0x110
 3509 057b 15       		.uleb128 0x15
 3510 057c 1B010000 		.4byte	0x11b
 3511 0580 15       		.uleb128 0x15
 3512 0581 26010000 		.4byte	0x126
 3513 0585 24       		.uleb128 0x24
 3514 0586 31010000 		.4byte	0x131
 3515 058a 00       		.byte	0
 3516 058b 15       		.uleb128 0x15
 3517 058c 3C010000 		.4byte	0x13c
 3518 0590 1D       		.uleb128 0x1d
 3519 0591 66000000 		.4byte	.LVL57
 3520 0595 860F0000 		.4byte	0xf86
 3521 0599 1D       		.uleb128 0x1d
 3522 059a 6E000000 		.4byte	.LVL58
 3523 059e 86020000 		.4byte	0x286
 3524 05a2 00       		.byte	0
 3525 05a3 00       		.byte	0
 3526 05a4 1D       		.uleb128 0x1d
 3527 05a5 0A000000 		.4byte	.LVL48
 3528 05a9 650F0000 		.4byte	0xf65
 3529 05ad 20       		.uleb128 0x20
 3530 05ae 52000000 		.4byte	.LVL52
 3531 05b2 7B0F0000 		.4byte	0xf7b
 3532 05b6 1F       		.uleb128 0x1f
 3533 05b7 01       		.uleb128 0x1
 3534 05b8 50       		.byte	0x50
 3535 05b9 02       		.uleb128 0x2
 3536 05ba 74       		.byte	0x74
 3537 05bb 00       		.sleb128 0
 3538 05bc 00       		.byte	0
 3539 05bd 00       		.byte	0
 3540 05be 2D       		.uleb128 0x2d
 3541 05bf C1000000 		.4byte	0xc1
 3542 05c3 CE050000 		.4byte	0x5ce
 3543 05c7 2E       		.uleb128 0x2e
 3544 05c8 E0000000 		.4byte	0xe0
 3545 05cc 01       		.byte	0x1
 3546 05cd 00       		.byte	0
 3547 05ce 05       		.uleb128 0x5
 3548 05cf BE050000 		.4byte	0x5be
 3549 05d3 2D       		.uleb128 0x2d
 3550 05d4 C1000000 		.4byte	0xc1
 3551 05d8 E3050000 		.4byte	0x5e3
 3552 05dc 2E       		.uleb128 0x2e
 3553 05dd E0000000 		.4byte	0xe0
 3554 05e1 03       		.byte	0x3
 3555 05e2 00       		.byte	0
 3556 05e3 05       		.uleb128 0x5
 3557 05e4 D3050000 		.4byte	0x5d3
 3558 05e8 26       		.uleb128 0x26
 3559 05e9 B8050000 		.4byte	.LASF59
 3560 05ed 01       		.byte	0x1
 3561 05ee 4608     		.2byte	0x846
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 126


 3562 05f0 00000000 		.4byte	.LFB11
 3563 05f4 50000000 		.4byte	.LFE11-.LFB11
 3564 05f8 01       		.uleb128 0x1
 3565 05f9 9C       		.byte	0x9c
 3566 05fa 46060000 		.4byte	0x646
 3567 05fe 27       		.uleb128 0x27
 3568 05ff 08060000 		.4byte	.LASF60
 3569 0603 01       		.byte	0x1
 3570 0604 4608     		.2byte	0x846
 3571 0606 83000000 		.4byte	0x83
 3572 060a D2020000 		.4byte	.LLST16
 3573 060e 1B       		.uleb128 0x1b
 3574 060f 5E010000 		.4byte	0x15e
 3575 0613 24000000 		.4byte	.LBB59
 3576 0617 0E000000 		.4byte	.LBE59-.LBB59
 3577 061b 01       		.byte	0x1
 3578 061c 5308     		.2byte	0x853
 3579 061e 35060000 		.4byte	0x635
 3580 0622 1C       		.uleb128 0x1c
 3581 0623 6B010000 		.4byte	0x16b
 3582 0627 F3020000 		.4byte	.LLST17
 3583 062b 1D       		.uleb128 0x1d
 3584 062c 32000000 		.4byte	.LVL62
 3585 0630 5A0F0000 		.4byte	0xf5a
 3586 0634 00       		.byte	0
 3587 0635 2C       		.uleb128 0x2c
 3588 0636 55010000 		.4byte	0x155
 3589 063a 32000000 		.4byte	.LBB61
 3590 063e 04000000 		.4byte	.LBE61-.LBB61
 3591 0642 01       		.byte	0x1
 3592 0643 5608     		.2byte	0x856
 3593 0645 00       		.byte	0
 3594 0646 2F       		.uleb128 0x2f
 3595 0647 5F070000 		.4byte	.LASF62
 3596 064b 01       		.byte	0x1
 3597 064c 6408     		.2byte	0x864
 3598 064e 00000000 		.4byte	.LFB12
 3599 0652 20000000 		.4byte	.LFE12-.LFB12
 3600 0656 01       		.uleb128 0x1
 3601 0657 9C       		.byte	0x9c
 3602 0658 30       		.uleb128 0x30
 3603 0659 84030000 		.4byte	.LASF90
 3604 065d 01       		.byte	0x1
 3605 065e 7608     		.2byte	0x876
 3606 0660 83000000 		.4byte	0x83
 3607 0664 00000000 		.4byte	.LFB13
 3608 0668 10000000 		.4byte	.LFE13-.LFB13
 3609 066c 01       		.uleb128 0x1
 3610 066d 9C       		.byte	0x9c
 3611 066e 25       		.uleb128 0x25
 3612 066f 55010000 		.4byte	0x155
 3613 0673 00000000 		.4byte	.LFB14
 3614 0677 0C000000 		.4byte	.LFE14-.LFB14
 3615 067b 01       		.uleb128 0x1
 3616 067c 9C       		.byte	0x9c
 3617 067d 2A       		.uleb128 0x2a
 3618 067e EB030000 		.4byte	.LASF64
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 127


 3619 0682 01       		.byte	0x1
 3620 0683 A008     		.2byte	0x8a0
 3621 0685 83000000 		.4byte	0x83
 3622 0689 00000000 		.4byte	.LFB15
 3623 068d 14000000 		.4byte	.LFE15-.LFB15
 3624 0691 01       		.uleb128 0x1
 3625 0692 9C       		.byte	0x9c
 3626 0693 B8060000 		.4byte	0x6b8
 3627 0697 27       		.uleb128 0x27
 3628 0698 44060000 		.4byte	.LASF65
 3629 069c 01       		.byte	0x1
 3630 069d A008     		.2byte	0x8a0
 3631 069f 83000000 		.4byte	0x83
 3632 06a3 09030000 		.4byte	.LLST18
 3633 06a7 28       		.uleb128 0x28
 3634 06a8 C5040000 		.4byte	.LASF66
 3635 06ac 01       		.byte	0x1
 3636 06ad A208     		.2byte	0x8a2
 3637 06af 83000000 		.4byte	0x83
 3638 06b3 27030000 		.4byte	.LLST19
 3639 06b7 00       		.byte	0
 3640 06b8 2A       		.uleb128 0x2a
 3641 06b9 59000000 		.4byte	.LASF67
 3642 06bd 01       		.byte	0x1
 3643 06be B708     		.2byte	0x8b7
 3644 06c0 83000000 		.4byte	0x83
 3645 06c4 00000000 		.4byte	.LFB16
 3646 06c8 10000000 		.4byte	.LFE16-.LFB16
 3647 06cc 01       		.uleb128 0x1
 3648 06cd 9C       		.byte	0x9c
 3649 06ce E1060000 		.4byte	0x6e1
 3650 06d2 2B       		.uleb128 0x2b
 3651 06d3 16000000 		.4byte	.LASF68
 3652 06d7 01       		.byte	0x1
 3653 06d8 B908     		.2byte	0x8b9
 3654 06da 83000000 		.4byte	0x83
 3655 06de 01       		.uleb128 0x1
 3656 06df 50       		.byte	0x50
 3657 06e0 00       		.byte	0
 3658 06e1 26       		.uleb128 0x26
 3659 06e2 89000000 		.4byte	.LASF69
 3660 06e6 01       		.byte	0x1
 3661 06e7 CE08     		.2byte	0x8ce
 3662 06e9 00000000 		.4byte	.LFB17
 3663 06ed 0C000000 		.4byte	.LFE17-.LFB17
 3664 06f1 01       		.uleb128 0x1
 3665 06f2 9C       		.byte	0x9c
 3666 06f3 06070000 		.4byte	0x706
 3667 06f7 29       		.uleb128 0x29
 3668 06f8 5D020000 		.4byte	.LASF70
 3669 06fc 01       		.byte	0x1
 3670 06fd CE08     		.2byte	0x8ce
 3671 06ff 83000000 		.4byte	0x83
 3672 0703 01       		.uleb128 0x1
 3673 0704 50       		.byte	0x50
 3674 0705 00       		.byte	0
 3675 0706 18       		.uleb128 0x18
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 128


 3676 0707 E3010000 		.4byte	0x1e3
 3677 070b 00000000 		.4byte	.LFB18
 3678 070f 0E000000 		.4byte	.LFE18-.LFB18
 3679 0713 01       		.uleb128 0x1
 3680 0714 9C       		.byte	0x9c
 3681 0715 3A070000 		.4byte	0x73a
 3682 0719 1C       		.uleb128 0x1c
 3683 071a F4010000 		.4byte	0x1f4
 3684 071e 49030000 		.4byte	.LLST20
 3685 0722 31       		.uleb128 0x31
 3686 0723 00020000 		.4byte	0x200
 3687 0727 01       		.uleb128 0x1
 3688 0728 51       		.byte	0x51
 3689 0729 1A       		.uleb128 0x1a
 3690 072a 0C020000 		.4byte	0x20c
 3691 072e 01       		.uleb128 0x1
 3692 072f 50       		.byte	0x50
 3693 0730 32       		.uleb128 0x32
 3694 0731 18020000 		.4byte	0x218
 3695 0735 00000020 		.4byte	0x20000000
 3696 0739 00       		.byte	0
 3697 073a 2A       		.uleb128 0x2a
 3698 073b 61060000 		.4byte	.LASF71
 3699 073f 01       		.byte	0x1
 3700 0740 0909     		.2byte	0x909
 3701 0742 C6000000 		.4byte	0xc6
 3702 0746 00000000 		.4byte	.LFB19
 3703 074a 0E000000 		.4byte	.LFE19-.LFB19
 3704 074e 01       		.uleb128 0x1
 3705 074f 9C       		.byte	0x9c
 3706 0750 75070000 		.4byte	0x775
 3707 0754 27       		.uleb128 0x27
 3708 0755 40040000 		.4byte	.LASF39
 3709 0759 01       		.byte	0x1
 3710 075a 0909     		.2byte	0x909
 3711 075c 6B000000 		.4byte	0x6b
 3712 0760 6A030000 		.4byte	.LLST21
 3713 0764 33       		.uleb128 0x33
 3714 0765 00000000 		.4byte	.LASF42
 3715 0769 01       		.byte	0x1
 3716 076a 0B09     		.2byte	0x90b
 3717 076c 25020000 		.4byte	0x225
 3718 0770 00000020 		.4byte	0x20000000
 3719 0774 00       		.byte	0
 3720 0775 2A       		.uleb128 0x2a
 3721 0776 31040000 		.4byte	.LASF72
 3722 077a 01       		.byte	0x1
 3723 077b 1F09     		.2byte	0x91f
 3724 077d C6000000 		.4byte	0xc6
 3725 0781 00000000 		.4byte	.LFB20
 3726 0785 10000000 		.4byte	.LFE20-.LFB20
 3727 0789 01       		.uleb128 0x1
 3728 078a 9C       		.byte	0x9c
 3729 078b CC070000 		.4byte	0x7cc
 3730 078f 27       		.uleb128 0x27
 3731 0790 40040000 		.4byte	.LASF39
 3732 0794 01       		.byte	0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 129


 3733 0795 1F09     		.2byte	0x91f
 3734 0797 6B000000 		.4byte	0x6b
 3735 079b 8B030000 		.4byte	.LLST22
 3736 079f 29       		.uleb128 0x29
 3737 07a0 35050000 		.4byte	.LASF40
 3738 07a4 01       		.byte	0x1
 3739 07a5 1F09     		.2byte	0x91f
 3740 07a7 C6000000 		.4byte	0xc6
 3741 07ab 01       		.uleb128 0x1
 3742 07ac 51       		.byte	0x51
 3743 07ad 2B       		.uleb128 0x2b
 3744 07ae 4B000000 		.4byte	.LASF41
 3745 07b2 01       		.byte	0x1
 3746 07b3 2109     		.2byte	0x921
 3747 07b5 C6000000 		.4byte	0xc6
 3748 07b9 01       		.uleb128 0x1
 3749 07ba 50       		.byte	0x50
 3750 07bb 33       		.uleb128 0x33
 3751 07bc 00000000 		.4byte	.LASF42
 3752 07c0 01       		.byte	0x1
 3753 07c1 2209     		.2byte	0x922
 3754 07c3 25020000 		.4byte	0x225
 3755 07c7 00000020 		.4byte	0x20000000
 3756 07cb 00       		.byte	0
 3757 07cc 2A       		.uleb128 0x2a
 3758 07cd D9050000 		.4byte	.LASF73
 3759 07d1 01       		.byte	0x1
 3760 07d2 3B09     		.2byte	0x93b
 3761 07d4 C6000000 		.4byte	0xc6
 3762 07d8 00000000 		.4byte	.LFB21
 3763 07dc 10000000 		.4byte	.LFE21-.LFB21
 3764 07e0 01       		.uleb128 0x1
 3765 07e1 9C       		.byte	0x9c
 3766 07e2 07080000 		.4byte	0x807
 3767 07e6 27       		.uleb128 0x27
 3768 07e7 40040000 		.4byte	.LASF39
 3769 07eb 01       		.byte	0x1
 3770 07ec 3B09     		.2byte	0x93b
 3771 07ee 6B000000 		.4byte	0x6b
 3772 07f2 AC030000 		.4byte	.LLST23
 3773 07f6 33       		.uleb128 0x33
 3774 07f7 00000000 		.4byte	.LASF42
 3775 07fb 01       		.byte	0x1
 3776 07fc 3D09     		.2byte	0x93d
 3777 07fe 25020000 		.4byte	0x225
 3778 0802 00000020 		.4byte	0x20000000
 3779 0806 00       		.byte	0
 3780 0807 26       		.uleb128 0x26
 3781 0808 8B050000 		.4byte	.LASF74
 3782 080c 01       		.byte	0x1
 3783 080d 4E09     		.2byte	0x94e
 3784 080f 00000000 		.4byte	.LFB22
 3785 0813 38000000 		.4byte	.LFE22-.LFB22
 3786 0817 01       		.uleb128 0x1
 3787 0818 9C       		.byte	0x9c
 3788 0819 80080000 		.4byte	0x880
 3789 081d 27       		.uleb128 0x27
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 130


 3790 081e 40040000 		.4byte	.LASF39
 3791 0822 01       		.byte	0x1
 3792 0823 4E09     		.2byte	0x94e
 3793 0825 6B000000 		.4byte	0x6b
 3794 0829 CD030000 		.4byte	.LLST24
 3795 082d 27       		.uleb128 0x27
 3796 082e 47040000 		.4byte	.LASF75
 3797 0832 01       		.byte	0x1
 3798 0833 4E09     		.2byte	0x94e
 3799 0835 6B000000 		.4byte	0x6b
 3800 0839 EE030000 		.4byte	.LLST25
 3801 083d 28       		.uleb128 0x28
 3802 083e 96010000 		.4byte	.LASF22
 3803 0842 01       		.byte	0x1
 3804 0843 5009     		.2byte	0x950
 3805 0845 6B000000 		.4byte	0x6b
 3806 0849 0F040000 		.4byte	.LLST26
 3807 084d 28       		.uleb128 0x28
 3808 084e 39020000 		.4byte	.LASF76
 3809 0852 01       		.byte	0x1
 3810 0853 5109     		.2byte	0x951
 3811 0855 83000000 		.4byte	0x83
 3812 0859 22040000 		.4byte	.LLST27
 3813 085d 28       		.uleb128 0x28
 3814 085e BF020000 		.4byte	.LASF38
 3815 0862 01       		.byte	0x1
 3816 0863 5209     		.2byte	0x952
 3817 0865 83000000 		.4byte	0x83
 3818 0869 35040000 		.4byte	.LLST28
 3819 086d 1D       		.uleb128 0x1d
 3820 086e 10000000 		.4byte	.LVL81
 3821 0872 650F0000 		.4byte	0xf65
 3822 0876 1D       		.uleb128 0x1d
 3823 0877 32000000 		.4byte	.LVL85
 3824 087b 7B0F0000 		.4byte	0xf7b
 3825 087f 00       		.byte	0
 3826 0880 2A       		.uleb128 0x2a
 3827 0881 93020000 		.4byte	.LASF77
 3828 0885 01       		.byte	0x1
 3829 0886 7009     		.2byte	0x970
 3830 0888 6B000000 		.4byte	0x6b
 3831 088c 00000000 		.4byte	.LFB23
 3832 0890 24000000 		.4byte	.LFE23-.LFB23
 3833 0894 01       		.uleb128 0x1
 3834 0895 9C       		.byte	0x9c
 3835 0896 BB080000 		.4byte	0x8bb
 3836 089a 27       		.uleb128 0x27
 3837 089b 40040000 		.4byte	.LASF39
 3838 089f 01       		.byte	0x1
 3839 08a0 7009     		.2byte	0x970
 3840 08a2 6B000000 		.4byte	0x6b
 3841 08a6 53040000 		.4byte	.LLST29
 3842 08aa 28       		.uleb128 0x28
 3843 08ab 47040000 		.4byte	.LASF75
 3844 08af 01       		.byte	0x1
 3845 08b0 7209     		.2byte	0x972
 3846 08b2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 131


 3847 08b6 74040000 		.4byte	.LLST30
 3848 08ba 00       		.byte	0
 3849 08bb 26       		.uleb128 0x26
 3850 08bc 55060000 		.4byte	.LASF78
 3851 08c0 01       		.byte	0x1
 3852 08c1 8509     		.2byte	0x985
 3853 08c3 00000000 		.4byte	.LFB24
 3854 08c7 14000000 		.4byte	.LFE24-.LFB24
 3855 08cb 01       		.uleb128 0x1
 3856 08cc 9C       		.byte	0x9c
 3857 08cd E2080000 		.4byte	0x8e2
 3858 08d1 27       		.uleb128 0x27
 3859 08d2 40040000 		.4byte	.LASF39
 3860 08d6 01       		.byte	0x1
 3861 08d7 8509     		.2byte	0x985
 3862 08d9 6B000000 		.4byte	0x6b
 3863 08dd 95040000 		.4byte	.LLST31
 3864 08e1 00       		.byte	0
 3865 08e2 2A       		.uleb128 0x2a
 3866 08e3 CF000000 		.4byte	.LASF79
 3867 08e7 01       		.byte	0x1
 3868 08e8 9709     		.2byte	0x997
 3869 08ea 6B000000 		.4byte	0x6b
 3870 08ee 00000000 		.4byte	.LFB25
 3871 08f2 18000000 		.4byte	.LFE25-.LFB25
 3872 08f6 01       		.uleb128 0x1
 3873 08f7 9C       		.byte	0x9c
 3874 08f8 0D090000 		.4byte	0x90d
 3875 08fc 27       		.uleb128 0x27
 3876 08fd 40040000 		.4byte	.LASF39
 3877 0901 01       		.byte	0x1
 3878 0902 9709     		.2byte	0x997
 3879 0904 6B000000 		.4byte	0x6b
 3880 0908 B6040000 		.4byte	.LLST32
 3881 090c 00       		.byte	0
 3882 090d 26       		.uleb128 0x26
 3883 090e E7010000 		.4byte	.LASF80
 3884 0912 01       		.byte	0x1
 3885 0913 A709     		.2byte	0x9a7
 3886 0915 00000000 		.4byte	.LFB26
 3887 0919 14000000 		.4byte	.LFE26-.LFB26
 3888 091d 01       		.uleb128 0x1
 3889 091e 9C       		.byte	0x9c
 3890 091f 34090000 		.4byte	0x934
 3891 0923 27       		.uleb128 0x27
 3892 0924 40040000 		.4byte	.LASF39
 3893 0928 01       		.byte	0x1
 3894 0929 A709     		.2byte	0x9a7
 3895 092b 6B000000 		.4byte	0x6b
 3896 092f D7040000 		.4byte	.LLST33
 3897 0933 00       		.byte	0
 3898 0934 26       		.uleb128 0x26
 3899 0935 C6030000 		.4byte	.LASF81
 3900 0939 01       		.byte	0x1
 3901 093a B509     		.2byte	0x9b5
 3902 093c 00000000 		.4byte	.LFB27
 3903 0940 14000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 132


 3904 0944 01       		.uleb128 0x1
 3905 0945 9C       		.byte	0x9c
 3906 0946 5B090000 		.4byte	0x95b
 3907 094a 27       		.uleb128 0x27
 3908 094b 40040000 		.4byte	.LASF39
 3909 094f 01       		.byte	0x1
 3910 0950 B509     		.2byte	0x9b5
 3911 0952 6B000000 		.4byte	0x6b
 3912 0956 F8040000 		.4byte	.LLST34
 3913 095a 00       		.byte	0
 3914 095b 26       		.uleb128 0x26
 3915 095c 17050000 		.4byte	.LASF82
 3916 0960 01       		.byte	0x1
 3917 0961 C409     		.2byte	0x9c4
 3918 0963 00000000 		.4byte	.LFB28
 3919 0967 14000000 		.4byte	.LFE28-.LFB28
 3920 096b 01       		.uleb128 0x1
 3921 096c 9C       		.byte	0x9c
 3922 096d 82090000 		.4byte	0x982
 3923 0971 27       		.uleb128 0x27
 3924 0972 40040000 		.4byte	.LASF39
 3925 0976 01       		.byte	0x1
 3926 0977 C409     		.2byte	0x9c4
 3927 0979 6B000000 		.4byte	0x6b
 3928 097d 19050000 		.4byte	.LLST35
 3929 0981 00       		.byte	0
 3930 0982 26       		.uleb128 0x26
 3931 0983 12060000 		.4byte	.LASF83
 3932 0987 01       		.byte	0x1
 3933 0988 D309     		.2byte	0x9d3
 3934 098a 00000000 		.4byte	.LFB29
 3935 098e 04000000 		.4byte	.LFE29-.LFB29
 3936 0992 01       		.uleb128 0x1
 3937 0993 9C       		.byte	0x9c
 3938 0994 A7090000 		.4byte	0x9a7
 3939 0998 29       		.uleb128 0x29
 3940 0999 44060000 		.4byte	.LASF65
 3941 099d 01       		.byte	0x1
 3942 099e D309     		.2byte	0x9d3
 3943 09a0 6B000000 		.4byte	0x6b
 3944 09a4 01       		.uleb128 0x1
 3945 09a5 50       		.byte	0x50
 3946 09a6 00       		.byte	0
 3947 09a7 2F       		.uleb128 0x2f
 3948 09a8 A6000000 		.4byte	.LASF84
 3949 09ac 01       		.byte	0x1
 3950 09ad EB09     		.2byte	0x9eb
 3951 09af 00000000 		.4byte	.LFB30
 3952 09b3 18000000 		.4byte	.LFE30-.LFB30
 3953 09b7 01       		.uleb128 0x1
 3954 09b8 9C       		.byte	0x9c
 3955 09b9 18       		.uleb128 0x18
 3956 09ba 6C020000 		.4byte	0x26c
 3957 09be 00000000 		.4byte	.LFB31
 3958 09c2 48000000 		.4byte	.LFE31-.LFB31
 3959 09c6 01       		.uleb128 0x1
 3960 09c7 9C       		.byte	0x9c
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 133


 3961 09c8 E8090000 		.4byte	0x9e8
 3962 09cc 1C       		.uleb128 0x1c
 3963 09cd 79020000 		.4byte	0x279
 3964 09d1 3A050000 		.4byte	.LLST36
 3965 09d5 1D       		.uleb128 0x1d
 3966 09d6 16000000 		.4byte	.LVL104
 3967 09da 5A0F0000 		.4byte	0xf5a
 3968 09de 1D       		.uleb128 0x1d
 3969 09df 34000000 		.4byte	.LVL107
 3970 09e3 5A0F0000 		.4byte	0xf5a
 3971 09e7 00       		.byte	0
 3972 09e8 18       		.uleb128 0x18
 3973 09e9 5E010000 		.4byte	0x15e
 3974 09ed 00000000 		.4byte	.LFB32
 3975 09f1 14000000 		.4byte	.LFE32-.LFB32
 3976 09f5 01       		.uleb128 0x1
 3977 09f6 9C       		.byte	0x9c
 3978 09f7 0E0A0000 		.4byte	0xa0e
 3979 09fb 1C       		.uleb128 0x1c
 3980 09fc 6B010000 		.4byte	0x16b
 3981 0a00 63050000 		.4byte	.LLST37
 3982 0a04 1D       		.uleb128 0x1d
 3983 0a05 0C000000 		.4byte	.LVL111
 3984 0a09 5A0F0000 		.4byte	0xf5a
 3985 0a0d 00       		.byte	0
 3986 0a0e 34       		.uleb128 0x34
 3987 0a0f 8A010000 		.4byte	.LASF85
 3988 0a13 01       		.byte	0x1
 3989 0a14 240A     		.2byte	0xa24
 3990 0a16 00000000 		.4byte	.LFB33
 3991 0a1a 54000000 		.4byte	.LFE33-.LFB33
 3992 0a1e 01       		.uleb128 0x1
 3993 0a1f 9C       		.byte	0x9c
 3994 0a20 350A0000 		.4byte	0xa35
 3995 0a24 27       		.uleb128 0x27
 3996 0a25 85010000 		.4byte	.LASF21
 3997 0a29 01       		.byte	0x1
 3998 0a2a 240A     		.2byte	0xa24
 3999 0a2c 83000000 		.4byte	0x83
 4000 0a30 84050000 		.4byte	.LLST38
 4001 0a34 00       		.byte	0
 4002 0a35 0E       		.uleb128 0xe
 4003 0a36 B1020000 		.4byte	.LASF86
 4004 0a3a 01       		.byte	0x1
 4005 0a3b 610A     		.2byte	0xa61
 4006 0a3d 01       		.byte	0x1
 4007 0a3e 4D0A0000 		.4byte	0xa4d
 4008 0a42 11       		.uleb128 0x11
 4009 0a43 6900     		.ascii	"i\000"
 4010 0a45 01       		.byte	0x1
 4011 0a46 630A     		.2byte	0xa63
 4012 0a48 83000000 		.4byte	0x83
 4013 0a4c 00       		.byte	0
 4014 0a4d 34       		.uleb128 0x34
 4015 0a4e B6040000 		.4byte	.LASF87
 4016 0a52 01       		.byte	0x1
 4017 0a53 440A     		.2byte	0xa44
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 134


 4018 0a55 00000000 		.4byte	.LFB34
 4019 0a59 6C000000 		.4byte	.LFE34-.LFB34
 4020 0a5d 01       		.uleb128 0x1
 4021 0a5e 9C       		.byte	0x9c
 4022 0a5f 470B0000 		.4byte	0xb47
 4023 0a63 1B       		.uleb128 0x1b
 4024 0a64 350A0000 		.4byte	0xa35
 4025 0a68 0A000000 		.4byte	.LBB79
 4026 0a6c 2E000000 		.4byte	.LBE79-.LBB79
 4027 0a70 01       		.byte	0x1
 4028 0a71 480A     		.2byte	0xa48
 4029 0a73 250B0000 		.4byte	0xb25
 4030 0a77 17       		.uleb128 0x17
 4031 0a78 0A000000 		.4byte	.LBB80
 4032 0a7c 2E000000 		.4byte	.LBE80-.LBB80
 4033 0a80 19       		.uleb128 0x19
 4034 0a81 420A0000 		.4byte	0xa42
 4035 0a85 C6050000 		.4byte	.LLST39
 4036 0a89 35       		.uleb128 0x35
 4037 0a8a E3010000 		.4byte	0x1e3
 4038 0a8e 0A000000 		.4byte	.LBB81
 4039 0a92 48000000 		.4byte	.Ldebug_ranges0+0x48
 4040 0a96 01       		.byte	0x1
 4041 0a97 6A0A     		.2byte	0xa6a
 4042 0a99 C80A0000 		.4byte	0xac8
 4043 0a9d 1C       		.uleb128 0x1c
 4044 0a9e 00020000 		.4byte	0x200
 4045 0aa2 16060000 		.4byte	.LLST40
 4046 0aa6 1C       		.uleb128 0x1c
 4047 0aa7 F4010000 		.4byte	0x1f4
 4048 0aab 2E060000 		.4byte	.LLST41
 4049 0aaf 36       		.uleb128 0x36
 4050 0ab0 48000000 		.4byte	.Ldebug_ranges0+0x48
 4051 0ab4 19       		.uleb128 0x19
 4052 0ab5 0C020000 		.4byte	0x20c
 4053 0ab9 42060000 		.4byte	.LLST42
 4054 0abd 19       		.uleb128 0x19
 4055 0abe 18020000 		.4byte	0x218
 4056 0ac2 56060000 		.4byte	.LLST43
 4057 0ac6 00       		.byte	0
 4058 0ac7 00       		.byte	0
 4059 0ac8 35       		.uleb128 0x35
 4060 0ac9 81010000 		.4byte	0x181
 4061 0acd 1A000000 		.4byte	.LBB85
 4062 0ad1 60000000 		.4byte	.Ldebug_ranges0+0x60
 4063 0ad5 01       		.byte	0x1
 4064 0ad6 6D0A     		.2byte	0xa6d
 4065 0ad8 F50A0000 		.4byte	0xaf5
 4066 0adc 1C       		.uleb128 0x1c
 4067 0add 8E010000 		.4byte	0x18e
 4068 0ae1 6C060000 		.4byte	.LLST44
 4069 0ae5 36       		.uleb128 0x36
 4070 0ae6 60000000 		.4byte	.Ldebug_ranges0+0x60
 4071 0aea 1C       		.uleb128 0x1c
 4072 0aeb 8E010000 		.4byte	0x18e
 4073 0aef 6C060000 		.4byte	.LLST44
 4074 0af3 00       		.byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 135


 4075 0af4 00       		.byte	0
 4076 0af5 1B       		.uleb128 0x1b
 4077 0af6 C9010000 		.4byte	0x1c9
 4078 0afa 30000000 		.4byte	.LBB91
 4079 0afe 04000000 		.4byte	.LBE91-.LBB91
 4080 0b02 01       		.byte	0x1
 4081 0b03 700A     		.2byte	0xa70
 4082 0b05 130B0000 		.4byte	0xb13
 4083 0b09 1C       		.uleb128 0x1c
 4084 0b0a D6010000 		.4byte	0x1d6
 4085 0b0e 80060000 		.4byte	.LLST46
 4086 0b12 00       		.byte	0
 4087 0b13 2C       		.uleb128 0x2c
 4088 0b14 C0010000 		.4byte	0x1c0
 4089 0b18 34000000 		.4byte	.LBB93
 4090 0b1c 04000000 		.4byte	.LBE93-.LBB93
 4091 0b20 01       		.byte	0x1
 4092 0b21 710A     		.2byte	0xa71
 4093 0b23 00       		.byte	0
 4094 0b24 00       		.byte	0
 4095 0b25 37       		.uleb128 0x37
 4096 0b26 2B020000 		.4byte	0x22b
 4097 0b2a 3C000000 		.4byte	.LBB95
 4098 0b2e 78000000 		.4byte	.Ldebug_ranges0+0x78
 4099 0b32 01       		.byte	0x1
 4100 0b33 4C0A     		.2byte	0xa4c
 4101 0b35 16       		.uleb128 0x16
 4102 0b36 78010000 		.4byte	0x178
 4103 0b3a 3C000000 		.4byte	.LBB97
 4104 0b3e 90000000 		.4byte	.Ldebug_ranges0+0x90
 4105 0b42 01       		.byte	0x1
 4106 0b43 810A     		.2byte	0xa81
 4107 0b45 00       		.byte	0
 4108 0b46 00       		.byte	0
 4109 0b47 14       		.uleb128 0x14
 4110 0b48 350A0000 		.4byte	0xa35
 4111 0b4c 00000000 		.4byte	.LFB35
 4112 0b50 54000000 		.4byte	.LFE35-.LFB35
 4113 0b54 01       		.uleb128 0x1
 4114 0b55 9C       		.byte	0x9c
 4115 0b56 FE0B0000 		.4byte	0xbfe
 4116 0b5a 19       		.uleb128 0x19
 4117 0b5b 420A0000 		.4byte	0xa42
 4118 0b5f 93060000 		.4byte	.LLST47
 4119 0b63 35       		.uleb128 0x35
 4120 0b64 E3010000 		.4byte	0x1e3
 4121 0b68 06000000 		.4byte	.LBB113
 4122 0b6c A8000000 		.4byte	.Ldebug_ranges0+0xa8
 4123 0b70 01       		.byte	0x1
 4124 0b71 6A0A     		.2byte	0xa6a
 4125 0b73 A20B0000 		.4byte	0xba2
 4126 0b77 1C       		.uleb128 0x1c
 4127 0b78 00020000 		.4byte	0x200
 4128 0b7c D7060000 		.4byte	.LLST48
 4129 0b80 1C       		.uleb128 0x1c
 4130 0b81 F4010000 		.4byte	0x1f4
 4131 0b85 EF060000 		.4byte	.LLST49
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 136


 4132 0b89 36       		.uleb128 0x36
 4133 0b8a A8000000 		.4byte	.Ldebug_ranges0+0xa8
 4134 0b8e 19       		.uleb128 0x19
 4135 0b8f 0C020000 		.4byte	0x20c
 4136 0b93 03070000 		.4byte	.LLST50
 4137 0b97 32       		.uleb128 0x32
 4138 0b98 18020000 		.4byte	0x218
 4139 0b9c 00000020 		.4byte	0x20000000
 4140 0ba0 00       		.byte	0
 4141 0ba1 00       		.byte	0
 4142 0ba2 35       		.uleb128 0x35
 4143 0ba3 81010000 		.4byte	0x181
 4144 0ba7 16000000 		.4byte	.LBB119
 4145 0bab C8000000 		.4byte	.Ldebug_ranges0+0xc8
 4146 0baf 01       		.byte	0x1
 4147 0bb0 6D0A     		.2byte	0xa6d
 4148 0bb2 CF0B0000 		.4byte	0xbcf
 4149 0bb6 1C       		.uleb128 0x1c
 4150 0bb7 8E010000 		.4byte	0x18e
 4151 0bbb 26070000 		.4byte	.LLST51
 4152 0bbf 36       		.uleb128 0x36
 4153 0bc0 C8000000 		.4byte	.Ldebug_ranges0+0xc8
 4154 0bc4 1C       		.uleb128 0x1c
 4155 0bc5 8E010000 		.4byte	0x18e
 4156 0bc9 26070000 		.4byte	.LLST51
 4157 0bcd 00       		.byte	0
 4158 0bce 00       		.byte	0
 4159 0bcf 1B       		.uleb128 0x1b
 4160 0bd0 C9010000 		.4byte	0x1c9
 4161 0bd4 2C000000 		.4byte	.LBB125
 4162 0bd8 04000000 		.4byte	.LBE125-.LBB125
 4163 0bdc 01       		.byte	0x1
 4164 0bdd 700A     		.2byte	0xa70
 4165 0bdf ED0B0000 		.4byte	0xbed
 4166 0be3 1C       		.uleb128 0x1c
 4167 0be4 D6010000 		.4byte	0x1d6
 4168 0be8 3A070000 		.4byte	.LLST53
 4169 0bec 00       		.byte	0
 4170 0bed 2C       		.uleb128 0x2c
 4171 0bee C0010000 		.4byte	0x1c0
 4172 0bf2 30000000 		.4byte	.LBB127
 4173 0bf6 04000000 		.4byte	.LBE127-.LBB127
 4174 0bfa 01       		.byte	0x1
 4175 0bfb 710A     		.2byte	0xa71
 4176 0bfd 00       		.byte	0
 4177 0bfe 18       		.uleb128 0x18
 4178 0bff 2B020000 		.4byte	0x22b
 4179 0c03 00000000 		.4byte	.LFB36
 4180 0c07 18000000 		.4byte	.LFE36-.LFB36
 4181 0c0b 01       		.uleb128 0x1
 4182 0c0c 9C       		.byte	0x9c
 4183 0c0d 220C0000 		.4byte	0xc22
 4184 0c11 16       		.uleb128 0x16
 4185 0c12 78010000 		.4byte	0x178
 4186 0c16 00000000 		.4byte	.LBB129
 4187 0c1a E0000000 		.4byte	.Ldebug_ranges0+0xe0
 4188 0c1e 01       		.byte	0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 137


 4189 0c1f 810A     		.2byte	0xa81
 4190 0c21 00       		.byte	0
 4191 0c22 2F       		.uleb128 0x2f
 4192 0c23 AF070000 		.4byte	.LASF88
 4193 0c27 01       		.byte	0x1
 4194 0c28 900A     		.2byte	0xa90
 4195 0c2a 00000000 		.4byte	.LFB37
 4196 0c2e 10000000 		.4byte	.LFE37-.LFB37
 4197 0c32 01       		.uleb128 0x1
 4198 0c33 9C       		.byte	0x9c
 4199 0c34 25       		.uleb128 0x25
 4200 0c35 78010000 		.4byte	0x178
 4201 0c39 00000000 		.4byte	.LFB38
 4202 0c3d 10000000 		.4byte	.LFE38-.LFB38
 4203 0c41 01       		.uleb128 0x1
 4204 0c42 9C       		.byte	0x9c
 4205 0c43 2F       		.uleb128 0x2f
 4206 0c44 45070000 		.4byte	.LASF89
 4207 0c48 01       		.byte	0x1
 4208 0c49 B00A     		.2byte	0xab0
 4209 0c4b 00000000 		.4byte	.LFB39
 4210 0c4f 10000000 		.4byte	.LFE39-.LFB39
 4211 0c53 01       		.uleb128 0x1
 4212 0c54 9C       		.byte	0x9c
 4213 0c55 18       		.uleb128 0x18
 4214 0c56 C9010000 		.4byte	0x1c9
 4215 0c5a 00000000 		.4byte	.LFB40
 4216 0c5e 10000000 		.4byte	.LFE40-.LFB40
 4217 0c62 01       		.uleb128 0x1
 4218 0c63 9C       		.byte	0x9c
 4219 0c64 720C0000 		.4byte	0xc72
 4220 0c68 1C       		.uleb128 0x1c
 4221 0c69 D6010000 		.4byte	0x1d6
 4222 0c6d 4D070000 		.4byte	.LLST54
 4223 0c71 00       		.byte	0
 4224 0c72 30       		.uleb128 0x30
 4225 0c73 AD010000 		.4byte	.LASF91
 4226 0c77 01       		.byte	0x1
 4227 0c78 D10A     		.2byte	0xad1
 4228 0c7a 83000000 		.4byte	0x83
 4229 0c7e 00000000 		.4byte	.LFB41
 4230 0c82 10000000 		.4byte	.LFE41-.LFB41
 4231 0c86 01       		.uleb128 0x1
 4232 0c87 9C       		.byte	0x9c
 4233 0c88 30       		.uleb128 0x30
 4234 0c89 6B050000 		.4byte	.LASF92
 4235 0c8d 01       		.byte	0x1
 4236 0c8e E10A     		.2byte	0xae1
 4237 0c90 83000000 		.4byte	0x83
 4238 0c94 00000000 		.4byte	.LFB42
 4239 0c98 10000000 		.4byte	.LFE42-.LFB42
 4240 0c9c 01       		.uleb128 0x1
 4241 0c9d 9C       		.byte	0x9c
 4242 0c9e 18       		.uleb128 0x18
 4243 0c9f 81010000 		.4byte	0x181
 4244 0ca3 00000000 		.4byte	.LFB43
 4245 0ca7 20000000 		.4byte	.LFE43-.LFB43
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 138


 4246 0cab 01       		.uleb128 0x1
 4247 0cac 9C       		.byte	0x9c
 4248 0cad C50C0000 		.4byte	0xcc5
 4249 0cb1 31       		.uleb128 0x31
 4250 0cb2 8E010000 		.4byte	0x18e
 4251 0cb6 01       		.uleb128 0x1
 4252 0cb7 50       		.byte	0x50
 4253 0cb8 36       		.uleb128 0x36
 4254 0cb9 F8000000 		.4byte	.Ldebug_ranges0+0xf8
 4255 0cbd 38       		.uleb128 0x38
 4256 0cbe 8E010000 		.4byte	0x18e
 4257 0cc2 01       		.byte	0x1
 4258 0cc3 00       		.byte	0
 4259 0cc4 00       		.byte	0
 4260 0cc5 30       		.uleb128 0x30
 4261 0cc6 2D070000 		.4byte	.LASF93
 4262 0cca 01       		.byte	0x1
 4263 0ccb 1A0B     		.2byte	0xb1a
 4264 0ccd 83000000 		.4byte	0x83
 4265 0cd1 00000000 		.4byte	.LFB44
 4266 0cd5 10000000 		.4byte	.LFE44-.LFB44
 4267 0cd9 01       		.uleb128 0x1
 4268 0cda 9C       		.byte	0x9c
 4269 0cdb 25       		.uleb128 0x25
 4270 0cdc 9B010000 		.4byte	0x19b
 4271 0ce0 00000000 		.4byte	.LFB45
 4272 0ce4 10000000 		.4byte	.LFE45-.LFB45
 4273 0ce8 01       		.uleb128 0x1
 4274 0ce9 9C       		.byte	0x9c
 4275 0cea 25       		.uleb128 0x25
 4276 0ceb C0010000 		.4byte	0x1c0
 4277 0cef 00000000 		.4byte	.LFB46
 4278 0cf3 0C000000 		.4byte	.LFE46-.LFB46
 4279 0cf7 01       		.uleb128 0x1
 4280 0cf8 9C       		.byte	0x9c
 4281 0cf9 2A       		.uleb128 0x2a
 4282 0cfa E8060000 		.4byte	.LASF94
 4283 0cfe 01       		.byte	0x1
 4284 0cff 610B     		.2byte	0xb61
 4285 0d01 E7000000 		.4byte	0xe7
 4286 0d05 00000000 		.4byte	.LFB47
 4287 0d09 10000000 		.4byte	.LFE47-.LFB47
 4288 0d0d 01       		.uleb128 0x1
 4289 0d0e 9C       		.byte	0x9c
 4290 0d0f 400D0000 		.4byte	0xd40
 4291 0d13 27       		.uleb128 0x27
 4292 0d14 40040000 		.4byte	.LASF39
 4293 0d18 01       		.byte	0x1
 4294 0d19 610B     		.2byte	0xb61
 4295 0d1b 83000000 		.4byte	0x83
 4296 0d1f 6E070000 		.4byte	.LLST55
 4297 0d23 29       		.uleb128 0x29
 4298 0d24 51050000 		.4byte	.LASF95
 4299 0d28 01       		.byte	0x1
 4300 0d29 610B     		.2byte	0xb61
 4301 0d2b E7000000 		.4byte	0xe7
 4302 0d2f 01       		.uleb128 0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 139


 4303 0d30 51       		.byte	0x51
 4304 0d31 2B       		.uleb128 0x2b
 4305 0d32 52000000 		.4byte	.LASF96
 4306 0d36 01       		.byte	0x1
 4307 0d37 630B     		.2byte	0xb63
 4308 0d39 E7000000 		.4byte	0xe7
 4309 0d3d 01       		.uleb128 0x1
 4310 0d3e 50       		.byte	0x50
 4311 0d3f 00       		.byte	0
 4312 0d40 2A       		.uleb128 0x2a
 4313 0d41 D6030000 		.4byte	.LASF97
 4314 0d45 01       		.byte	0x1
 4315 0d46 790B     		.2byte	0xb79
 4316 0d48 E7000000 		.4byte	0xe7
 4317 0d4c 00000000 		.4byte	.LFB48
 4318 0d50 0C000000 		.4byte	.LFE48-.LFB48
 4319 0d54 01       		.uleb128 0x1
 4320 0d55 9C       		.byte	0x9c
 4321 0d56 6B0D0000 		.4byte	0xd6b
 4322 0d5a 27       		.uleb128 0x27
 4323 0d5b 40040000 		.4byte	.LASF39
 4324 0d5f 01       		.byte	0x1
 4325 0d60 790B     		.2byte	0xb79
 4326 0d62 83000000 		.4byte	0x83
 4327 0d66 8F070000 		.4byte	.LLST56
 4328 0d6a 00       		.byte	0
 4329 0d6b 26       		.uleb128 0x26
 4330 0d6c D1020000 		.4byte	.LASF98
 4331 0d70 01       		.byte	0x1
 4332 0d71 A60B     		.2byte	0xba6
 4333 0d73 00000000 		.4byte	.LFB50
 4334 0d77 74000000 		.4byte	.LFE50-.LFB50
 4335 0d7b 01       		.uleb128 0x1
 4336 0d7c 9C       		.byte	0x9c
 4337 0d7d 900D0000 		.4byte	0xd90
 4338 0d81 29       		.uleb128 0x29
 4339 0d82 10070000 		.4byte	.LASF99
 4340 0d86 01       		.byte	0x1
 4341 0d87 A60B     		.2byte	0xba6
 4342 0d89 900D0000 		.4byte	0xd90
 4343 0d8d 01       		.uleb128 0x1
 4344 0d8e 50       		.byte	0x50
 4345 0d8f 00       		.byte	0
 4346 0d90 06       		.uleb128 0x6
 4347 0d91 04       		.byte	0x4
 4348 0d92 83000000 		.4byte	0x83
 4349 0d96 26       		.uleb128 0x26
 4350 0d97 19060000 		.4byte	.LASF100
 4351 0d9b 01       		.byte	0x1
 4352 0d9c D20B     		.2byte	0xbd2
 4353 0d9e 00000000 		.4byte	.LFB51
 4354 0da2 20000000 		.4byte	.LFE51-.LFB51
 4355 0da6 01       		.uleb128 0x1
 4356 0da7 9C       		.byte	0x9c
 4357 0da8 CD0D0000 		.4byte	0xdcd
 4358 0dac 27       		.uleb128 0x27
 4359 0dad D2040000 		.4byte	.LASF101
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 140


 4360 0db1 01       		.byte	0x1
 4361 0db2 D20B     		.2byte	0xbd2
 4362 0db4 83000000 		.4byte	0x83
 4363 0db8 B0070000 		.4byte	.LLST57
 4364 0dbc 28       		.uleb128 0x28
 4365 0dbd 12040000 		.4byte	.LASF23
 4366 0dc1 01       		.byte	0x1
 4367 0dc2 D40B     		.2byte	0xbd4
 4368 0dc4 83000000 		.4byte	0x83
 4369 0dc8 D1070000 		.4byte	.LLST58
 4370 0dcc 00       		.byte	0
 4371 0dcd 26       		.uleb128 0x26
 4372 0dce 65040000 		.4byte	.LASF102
 4373 0dd2 01       		.byte	0x1
 4374 0dd3 ED0B     		.2byte	0xbed
 4375 0dd5 00000000 		.4byte	.LFB52
 4376 0dd9 20000000 		.4byte	.LFE52-.LFB52
 4377 0ddd 01       		.uleb128 0x1
 4378 0dde 9C       		.byte	0x9c
 4379 0ddf 040E0000 		.4byte	0xe04
 4380 0de3 27       		.uleb128 0x27
 4381 0de4 D2040000 		.4byte	.LASF101
 4382 0de8 01       		.byte	0x1
 4383 0de9 ED0B     		.2byte	0xbed
 4384 0deb 83000000 		.4byte	0x83
 4385 0def EF070000 		.4byte	.LLST59
 4386 0df3 28       		.uleb128 0x28
 4387 0df4 12040000 		.4byte	.LASF23
 4388 0df8 01       		.byte	0x1
 4389 0df9 EF0B     		.2byte	0xbef
 4390 0dfb 83000000 		.4byte	0x83
 4391 0dff 10080000 		.4byte	.LLST60
 4392 0e03 00       		.byte	0
 4393 0e04 26       		.uleb128 0x26
 4394 0e05 91070000 		.4byte	.LASF103
 4395 0e09 01       		.byte	0x1
 4396 0e0a 080C     		.2byte	0xc08
 4397 0e0c 00000000 		.4byte	.LFB53
 4398 0e10 20000000 		.4byte	.LFE53-.LFB53
 4399 0e14 01       		.uleb128 0x1
 4400 0e15 9C       		.byte	0x9c
 4401 0e16 3B0E0000 		.4byte	0xe3b
 4402 0e1a 27       		.uleb128 0x27
 4403 0e1b D2040000 		.4byte	.LASF101
 4404 0e1f 01       		.byte	0x1
 4405 0e20 080C     		.2byte	0xc08
 4406 0e22 83000000 		.4byte	0x83
 4407 0e26 2E080000 		.4byte	.LLST61
 4408 0e2a 28       		.uleb128 0x28
 4409 0e2b 12040000 		.4byte	.LASF23
 4410 0e2f 01       		.byte	0x1
 4411 0e30 0A0C     		.2byte	0xc0a
 4412 0e32 83000000 		.4byte	0x83
 4413 0e36 4F080000 		.4byte	.LLST62
 4414 0e3a 00       		.byte	0
 4415 0e3b 26       		.uleb128 0x26
 4416 0e3c F3040000 		.4byte	.LASF104
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 141


 4417 0e40 01       		.byte	0x1
 4418 0e41 250C     		.2byte	0xc25
 4419 0e43 00000000 		.4byte	.LFB54
 4420 0e47 3C000000 		.4byte	.LFE54-.LFB54
 4421 0e4b 01       		.uleb128 0x1
 4422 0e4c 9C       		.byte	0x9c
 4423 0e4d 820E0000 		.4byte	0xe82
 4424 0e51 27       		.uleb128 0x27
 4425 0e52 96000000 		.4byte	.LASF105
 4426 0e56 01       		.byte	0x1
 4427 0e57 250C     		.2byte	0xc25
 4428 0e59 83000000 		.4byte	0x83
 4429 0e5d 6D080000 		.4byte	.LLST63
 4430 0e61 27       		.uleb128 0x27
 4431 0e62 D2040000 		.4byte	.LASF101
 4432 0e66 01       		.byte	0x1
 4433 0e67 250C     		.2byte	0xc25
 4434 0e69 83000000 		.4byte	0x83
 4435 0e6d D9080000 		.4byte	.LLST64
 4436 0e71 28       		.uleb128 0x28
 4437 0e72 12040000 		.4byte	.LASF23
 4438 0e76 01       		.byte	0x1
 4439 0e77 270C     		.2byte	0xc27
 4440 0e79 83000000 		.4byte	0x83
 4441 0e7d 1E090000 		.4byte	.LLST65
 4442 0e81 00       		.byte	0
 4443 0e82 2D       		.uleb128 0x2d
 4444 0e83 E7000000 		.4byte	0xe7
 4445 0e87 920E0000 		.4byte	0xe92
 4446 0e8b 2E       		.uleb128 0x2e
 4447 0e8c E0000000 		.4byte	0xe0
 4448 0e90 04       		.byte	0x4
 4449 0e91 00       		.byte	0
 4450 0e92 39       		.uleb128 0x39
 4451 0e93 FD060000 		.4byte	.LASF106
 4452 0e97 01       		.byte	0x1
 4453 0e98 22       		.byte	0x22
 4454 0e99 820E0000 		.4byte	0xe82
 4455 0e9d 05       		.uleb128 0x5
 4456 0e9e 03       		.byte	0x3
 4457 0e9f 00000000 		.4byte	CySysTickCallbacks
 4458 0ea3 3A       		.uleb128 0x3a
 4459 0ea4 7D050000 		.4byte	.LASF107
 4460 0ea8 01       		.byte	0x1
 4461 0ea9 1B       		.byte	0x1b
 4462 0eaa 83000000 		.4byte	0x83
 4463 0eae 05       		.uleb128 0x5
 4464 0eaf 03       		.byte	0x3
 4465 0eb0 00000000 		.4byte	cydelayFreqHz
 4466 0eb4 3A       		.uleb128 0x3a
 4467 0eb5 19020000 		.4byte	.LASF108
 4468 0eb9 01       		.byte	0x1
 4469 0eba 1C       		.byte	0x1c
 4470 0ebb 83000000 		.4byte	0x83
 4471 0ebf 05       		.uleb128 0x5
 4472 0ec0 03       		.byte	0x3
 4473 0ec1 00000000 		.4byte	cydelayFreqKhz
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 142


 4474 0ec5 3A       		.uleb128 0x3a
 4475 0ec6 6F070000 		.4byte	.LASF109
 4476 0eca 01       		.byte	0x1
 4477 0ecb 1D       		.byte	0x1d
 4478 0ecc 6B000000 		.4byte	0x6b
 4479 0ed0 05       		.uleb128 0x5
 4480 0ed1 03       		.byte	0x3
 4481 0ed2 00000000 		.4byte	cydelayFreqMhz
 4482 0ed6 3A       		.uleb128 0x3a
 4483 0ed7 A4020000 		.4byte	.LASF110
 4484 0edb 01       		.byte	0x1
 4485 0edc 1E       		.byte	0x1e
 4486 0edd 83000000 		.4byte	0x83
 4487 0ee1 05       		.uleb128 0x5
 4488 0ee2 03       		.byte	0x3
 4489 0ee3 00000000 		.4byte	cydelay32kMs
 4490 0ee7 3A       		.uleb128 0x3a
 4491 0ee8 E2040000 		.4byte	.LASF111
 4492 0eec 01       		.byte	0x1
 4493 0eed 36       		.byte	0x36
 4494 0eee 83000000 		.4byte	0x83
 4495 0ef2 05       		.uleb128 0x5
 4496 0ef3 03       		.byte	0x3
 4497 0ef4 00000000 		.4byte	CySysTickInitVar
 4498 0ef8 2D       		.uleb128 0x2d
 4499 0ef9 080F0000 		.4byte	0xf08
 4500 0efd 080F0000 		.4byte	0xf08
 4501 0f01 2E       		.uleb128 0x2e
 4502 0f02 E0000000 		.4byte	0xe0
 4503 0f06 2D       		.byte	0x2d
 4504 0f07 00       		.byte	0
 4505 0f08 3B       		.uleb128 0x3b
 4506 0f09 6B000000 		.4byte	0x6b
 4507 0f0d 3A       		.uleb128 0x3a
 4508 0f0e 5A050000 		.4byte	.LASF112
 4509 0f12 01       		.byte	0x1
 4510 0f13 3B       		.byte	0x3b
 4511 0f14 1E0F0000 		.4byte	0xf1e
 4512 0f18 05       		.uleb128 0x5
 4513 0f19 03       		.byte	0x3
 4514 0f1a 00000000 		.4byte	cyImoFreqMhz2Reg
 4515 0f1e 3B       		.uleb128 0x3b
 4516 0f1f F80E0000 		.4byte	0xef8
 4517 0f23 2D       		.uleb128 0x2d
 4518 0f24 080F0000 		.4byte	0xf08
 4519 0f28 330F0000 		.4byte	0xf33
 4520 0f2c 2E       		.uleb128 0x2e
 4521 0f2d E0000000 		.4byte	0xe0
 4522 0f31 16       		.byte	0x16
 4523 0f32 00       		.byte	0
 4524 0f33 3A       		.uleb128 0x3a
 4525 0f34 9C060000 		.4byte	.LASF113
 4526 0f38 01       		.byte	0x1
 4527 0f39 4C       		.byte	0x4c
 4528 0f3a 440F0000 		.4byte	0xf44
 4529 0f3e 05       		.uleb128 0x5
 4530 0f3f 03       		.byte	0x3
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 143


 4531 0f40 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4532 0f44 3B       		.uleb128 0x3b
 4533 0f45 230F0000 		.4byte	0xf23
 4534 0f49 3A       		.uleb128 0x3a
 4535 0f4a 38000000 		.4byte	.LASF114
 4536 0f4e 01       		.byte	0x1
 4537 0f4f 5B       		.byte	0x5b
 4538 0f50 83000000 		.4byte	0x83
 4539 0f54 05       		.uleb128 0x5
 4540 0f55 03       		.byte	0x3
 4541 0f56 00000000 		.4byte	CySysClkPumpConfig
 4542 0f5a 3C       		.uleb128 0x3c
 4543 0f5b F5050000 		.4byte	.LASF115
 4544 0f5f F5050000 		.4byte	.LASF115
 4545 0f63 03       		.byte	0x3
 4546 0f64 DC       		.byte	0xdc
 4547 0f65 3C       		.uleb128 0x3c
 4548 0f66 AF030000 		.4byte	.LASF116
 4549 0f6a AF030000 		.4byte	.LASF116
 4550 0f6e 03       		.byte	0x3
 4551 0f6f E5       		.byte	0xe5
 4552 0f70 3C       		.uleb128 0x3c
 4553 0f71 D6070000 		.4byte	.LASF117
 4554 0f75 D6070000 		.4byte	.LASF117
 4555 0f79 04       		.byte	0x4
 4556 0f7a 52       		.byte	0x52
 4557 0f7b 3C       		.uleb128 0x3c
 4558 0f7c A2050000 		.4byte	.LASF118
 4559 0f80 A2050000 		.4byte	.LASF118
 4560 0f84 03       		.byte	0x3
 4561 0f85 E6       		.byte	0xe6
 4562 0f86 3C       		.uleb128 0x3c
 4563 0f87 7E070000 		.4byte	.LASF119
 4564 0f8b 7E070000 		.4byte	.LASF119
 4565 0f8f 05       		.byte	0x5
 4566 0f90 54       		.byte	0x54
 4567 0f91 00       		.byte	0
 4568              		.section	.debug_abbrev,"",%progbits
 4569              	.Ldebug_abbrev0:
 4570 0000 01       		.uleb128 0x1
 4571 0001 11       		.uleb128 0x11
 4572 0002 01       		.byte	0x1
 4573 0003 25       		.uleb128 0x25
 4574 0004 0E       		.uleb128 0xe
 4575 0005 13       		.uleb128 0x13
 4576 0006 0B       		.uleb128 0xb
 4577 0007 03       		.uleb128 0x3
 4578 0008 0E       		.uleb128 0xe
 4579 0009 1B       		.uleb128 0x1b
 4580 000a 0E       		.uleb128 0xe
 4581 000b 55       		.uleb128 0x55
 4582 000c 17       		.uleb128 0x17
 4583 000d 11       		.uleb128 0x11
 4584 000e 01       		.uleb128 0x1
 4585 000f 10       		.uleb128 0x10
 4586 0010 17       		.uleb128 0x17
 4587 0011 00       		.byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 144


 4588 0012 00       		.byte	0
 4589 0013 02       		.uleb128 0x2
 4590 0014 24       		.uleb128 0x24
 4591 0015 00       		.byte	0
 4592 0016 0B       		.uleb128 0xb
 4593 0017 0B       		.uleb128 0xb
 4594 0018 3E       		.uleb128 0x3e
 4595 0019 0B       		.uleb128 0xb
 4596 001a 03       		.uleb128 0x3
 4597 001b 0E       		.uleb128 0xe
 4598 001c 00       		.byte	0
 4599 001d 00       		.byte	0
 4600 001e 03       		.uleb128 0x3
 4601 001f 24       		.uleb128 0x24
 4602 0020 00       		.byte	0
 4603 0021 0B       		.uleb128 0xb
 4604 0022 0B       		.uleb128 0xb
 4605 0023 3E       		.uleb128 0x3e
 4606 0024 0B       		.uleb128 0xb
 4607 0025 03       		.uleb128 0x3
 4608 0026 08       		.uleb128 0x8
 4609 0027 00       		.byte	0
 4610 0028 00       		.byte	0
 4611 0029 04       		.uleb128 0x4
 4612 002a 16       		.uleb128 0x16
 4613 002b 00       		.byte	0
 4614 002c 03       		.uleb128 0x3
 4615 002d 0E       		.uleb128 0xe
 4616 002e 3A       		.uleb128 0x3a
 4617 002f 0B       		.uleb128 0xb
 4618 0030 3B       		.uleb128 0x3b
 4619 0031 05       		.uleb128 0x5
 4620 0032 49       		.uleb128 0x49
 4621 0033 13       		.uleb128 0x13
 4622 0034 00       		.byte	0
 4623 0035 00       		.byte	0
 4624 0036 05       		.uleb128 0x5
 4625 0037 35       		.uleb128 0x35
 4626 0038 00       		.byte	0
 4627 0039 49       		.uleb128 0x49
 4628 003a 13       		.uleb128 0x13
 4629 003b 00       		.byte	0
 4630 003c 00       		.byte	0
 4631 003d 06       		.uleb128 0x6
 4632 003e 0F       		.uleb128 0xf
 4633 003f 00       		.byte	0
 4634 0040 0B       		.uleb128 0xb
 4635 0041 0B       		.uleb128 0xb
 4636 0042 49       		.uleb128 0x49
 4637 0043 13       		.uleb128 0x13
 4638 0044 00       		.byte	0
 4639 0045 00       		.byte	0
 4640 0046 07       		.uleb128 0x7
 4641 0047 15       		.uleb128 0x15
 4642 0048 00       		.byte	0
 4643 0049 27       		.uleb128 0x27
 4644 004a 19       		.uleb128 0x19
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 145


 4645 004b 00       		.byte	0
 4646 004c 00       		.byte	0
 4647 004d 08       		.uleb128 0x8
 4648 004e 16       		.uleb128 0x16
 4649 004f 00       		.byte	0
 4650 0050 03       		.uleb128 0x3
 4651 0051 0E       		.uleb128 0xe
 4652 0052 3A       		.uleb128 0x3a
 4653 0053 0B       		.uleb128 0xb
 4654 0054 3B       		.uleb128 0x3b
 4655 0055 0B       		.uleb128 0xb
 4656 0056 49       		.uleb128 0x49
 4657 0057 13       		.uleb128 0x13
 4658 0058 00       		.byte	0
 4659 0059 00       		.byte	0
 4660 005a 09       		.uleb128 0x9
 4661 005b 2E       		.uleb128 0x2e
 4662 005c 00       		.byte	0
 4663 005d 3F       		.uleb128 0x3f
 4664 005e 19       		.uleb128 0x19
 4665 005f 03       		.uleb128 0x3
 4666 0060 0E       		.uleb128 0xe
 4667 0061 3A       		.uleb128 0x3a
 4668 0062 0B       		.uleb128 0xb
 4669 0063 3B       		.uleb128 0x3b
 4670 0064 05       		.uleb128 0x5
 4671 0065 27       		.uleb128 0x27
 4672 0066 19       		.uleb128 0x19
 4673 0067 20       		.uleb128 0x20
 4674 0068 0B       		.uleb128 0xb
 4675 0069 00       		.byte	0
 4676 006a 00       		.byte	0
 4677 006b 0A       		.uleb128 0xa
 4678 006c 2E       		.uleb128 0x2e
 4679 006d 01       		.byte	0x1
 4680 006e 3F       		.uleb128 0x3f
 4681 006f 19       		.uleb128 0x19
 4682 0070 03       		.uleb128 0x3
 4683 0071 0E       		.uleb128 0xe
 4684 0072 3A       		.uleb128 0x3a
 4685 0073 0B       		.uleb128 0xb
 4686 0074 3B       		.uleb128 0x3b
 4687 0075 0B       		.uleb128 0xb
 4688 0076 27       		.uleb128 0x27
 4689 0077 19       		.uleb128 0x19
 4690 0078 20       		.uleb128 0x20
 4691 0079 0B       		.uleb128 0xb
 4692 007a 01       		.uleb128 0x1
 4693 007b 13       		.uleb128 0x13
 4694 007c 00       		.byte	0
 4695 007d 00       		.byte	0
 4696 007e 0B       		.uleb128 0xb
 4697 007f 34       		.uleb128 0x34
 4698 0080 00       		.byte	0
 4699 0081 03       		.uleb128 0x3
 4700 0082 08       		.uleb128 0x8
 4701 0083 3A       		.uleb128 0x3a
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 146


 4702 0084 0B       		.uleb128 0xb
 4703 0085 3B       		.uleb128 0x3b
 4704 0086 0B       		.uleb128 0xb
 4705 0087 49       		.uleb128 0x49
 4706 0088 13       		.uleb128 0x13
 4707 0089 00       		.byte	0
 4708 008a 00       		.byte	0
 4709 008b 0C       		.uleb128 0xc
 4710 008c 34       		.uleb128 0x34
 4711 008d 00       		.byte	0
 4712 008e 03       		.uleb128 0x3
 4713 008f 0E       		.uleb128 0xe
 4714 0090 3A       		.uleb128 0x3a
 4715 0091 0B       		.uleb128 0xb
 4716 0092 3B       		.uleb128 0x3b
 4717 0093 0B       		.uleb128 0xb
 4718 0094 49       		.uleb128 0x49
 4719 0095 13       		.uleb128 0x13
 4720 0096 00       		.byte	0
 4721 0097 00       		.byte	0
 4722 0098 0D       		.uleb128 0xd
 4723 0099 2E       		.uleb128 0x2e
 4724 009a 00       		.byte	0
 4725 009b 3F       		.uleb128 0x3f
 4726 009c 19       		.uleb128 0x19
 4727 009d 03       		.uleb128 0x3
 4728 009e 0E       		.uleb128 0xe
 4729 009f 3A       		.uleb128 0x3a
 4730 00a0 0B       		.uleb128 0xb
 4731 00a1 3B       		.uleb128 0x3b
 4732 00a2 05       		.uleb128 0x5
 4733 00a3 27       		.uleb128 0x27
 4734 00a4 19       		.uleb128 0x19
 4735 00a5 49       		.uleb128 0x49
 4736 00a6 13       		.uleb128 0x13
 4737 00a7 20       		.uleb128 0x20
 4738 00a8 0B       		.uleb128 0xb
 4739 00a9 00       		.byte	0
 4740 00aa 00       		.byte	0
 4741 00ab 0E       		.uleb128 0xe
 4742 00ac 2E       		.uleb128 0x2e
 4743 00ad 01       		.byte	0x1
 4744 00ae 3F       		.uleb128 0x3f
 4745 00af 19       		.uleb128 0x19
 4746 00b0 03       		.uleb128 0x3
 4747 00b1 0E       		.uleb128 0xe
 4748 00b2 3A       		.uleb128 0x3a
 4749 00b3 0B       		.uleb128 0xb
 4750 00b4 3B       		.uleb128 0x3b
 4751 00b5 05       		.uleb128 0x5
 4752 00b6 27       		.uleb128 0x27
 4753 00b7 19       		.uleb128 0x19
 4754 00b8 20       		.uleb128 0x20
 4755 00b9 0B       		.uleb128 0xb
 4756 00ba 01       		.uleb128 0x1
 4757 00bb 13       		.uleb128 0x13
 4758 00bc 00       		.byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 147


 4759 00bd 00       		.byte	0
 4760 00be 0F       		.uleb128 0xf
 4761 00bf 05       		.uleb128 0x5
 4762 00c0 00       		.byte	0
 4763 00c1 03       		.uleb128 0x3
 4764 00c2 0E       		.uleb128 0xe
 4765 00c3 3A       		.uleb128 0x3a
 4766 00c4 0B       		.uleb128 0xb
 4767 00c5 3B       		.uleb128 0x3b
 4768 00c6 05       		.uleb128 0x5
 4769 00c7 49       		.uleb128 0x49
 4770 00c8 13       		.uleb128 0x13
 4771 00c9 00       		.byte	0
 4772 00ca 00       		.byte	0
 4773 00cb 10       		.uleb128 0x10
 4774 00cc 2E       		.uleb128 0x2e
 4775 00cd 01       		.byte	0x1
 4776 00ce 03       		.uleb128 0x3
 4777 00cf 0E       		.uleb128 0xe
 4778 00d0 3A       		.uleb128 0x3a
 4779 00d1 0B       		.uleb128 0xb
 4780 00d2 3B       		.uleb128 0x3b
 4781 00d3 05       		.uleb128 0x5
 4782 00d4 27       		.uleb128 0x27
 4783 00d5 19       		.uleb128 0x19
 4784 00d6 20       		.uleb128 0x20
 4785 00d7 0B       		.uleb128 0xb
 4786 00d8 01       		.uleb128 0x1
 4787 00d9 13       		.uleb128 0x13
 4788 00da 00       		.byte	0
 4789 00db 00       		.byte	0
 4790 00dc 11       		.uleb128 0x11
 4791 00dd 34       		.uleb128 0x34
 4792 00de 00       		.byte	0
 4793 00df 03       		.uleb128 0x3
 4794 00e0 08       		.uleb128 0x8
 4795 00e1 3A       		.uleb128 0x3a
 4796 00e2 0B       		.uleb128 0xb
 4797 00e3 3B       		.uleb128 0x3b
 4798 00e4 05       		.uleb128 0x5
 4799 00e5 49       		.uleb128 0x49
 4800 00e6 13       		.uleb128 0x13
 4801 00e7 00       		.byte	0
 4802 00e8 00       		.byte	0
 4803 00e9 12       		.uleb128 0x12
 4804 00ea 2E       		.uleb128 0x2e
 4805 00eb 01       		.byte	0x1
 4806 00ec 3F       		.uleb128 0x3f
 4807 00ed 19       		.uleb128 0x19
 4808 00ee 03       		.uleb128 0x3
 4809 00ef 0E       		.uleb128 0xe
 4810 00f0 3A       		.uleb128 0x3a
 4811 00f1 0B       		.uleb128 0xb
 4812 00f2 3B       		.uleb128 0x3b
 4813 00f3 05       		.uleb128 0x5
 4814 00f4 27       		.uleb128 0x27
 4815 00f5 19       		.uleb128 0x19
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 148


 4816 00f6 49       		.uleb128 0x49
 4817 00f7 13       		.uleb128 0x13
 4818 00f8 20       		.uleb128 0x20
 4819 00f9 0B       		.uleb128 0xb
 4820 00fa 01       		.uleb128 0x1
 4821 00fb 13       		.uleb128 0x13
 4822 00fc 00       		.byte	0
 4823 00fd 00       		.byte	0
 4824 00fe 13       		.uleb128 0x13
 4825 00ff 34       		.uleb128 0x34
 4826 0100 00       		.byte	0
 4827 0101 03       		.uleb128 0x3
 4828 0102 0E       		.uleb128 0xe
 4829 0103 3A       		.uleb128 0x3a
 4830 0104 0B       		.uleb128 0xb
 4831 0105 3B       		.uleb128 0x3b
 4832 0106 05       		.uleb128 0x5
 4833 0107 49       		.uleb128 0x49
 4834 0108 13       		.uleb128 0x13
 4835 0109 00       		.byte	0
 4836 010a 00       		.byte	0
 4837 010b 14       		.uleb128 0x14
 4838 010c 2E       		.uleb128 0x2e
 4839 010d 01       		.byte	0x1
 4840 010e 31       		.uleb128 0x31
 4841 010f 13       		.uleb128 0x13
 4842 0110 11       		.uleb128 0x11
 4843 0111 01       		.uleb128 0x1
 4844 0112 12       		.uleb128 0x12
 4845 0113 06       		.uleb128 0x6
 4846 0114 40       		.uleb128 0x40
 4847 0115 18       		.uleb128 0x18
 4848 0116 9642     		.uleb128 0x2116
 4849 0118 19       		.uleb128 0x19
 4850 0119 01       		.uleb128 0x1
 4851 011a 13       		.uleb128 0x13
 4852 011b 00       		.byte	0
 4853 011c 00       		.byte	0
 4854 011d 15       		.uleb128 0x15
 4855 011e 34       		.uleb128 0x34
 4856 011f 00       		.byte	0
 4857 0120 31       		.uleb128 0x31
 4858 0121 13       		.uleb128 0x13
 4859 0122 00       		.byte	0
 4860 0123 00       		.byte	0
 4861 0124 16       		.uleb128 0x16
 4862 0125 1D       		.uleb128 0x1d
 4863 0126 00       		.byte	0
 4864 0127 31       		.uleb128 0x31
 4865 0128 13       		.uleb128 0x13
 4866 0129 52       		.uleb128 0x52
 4867 012a 01       		.uleb128 0x1
 4868 012b 55       		.uleb128 0x55
 4869 012c 17       		.uleb128 0x17
 4870 012d 58       		.uleb128 0x58
 4871 012e 0B       		.uleb128 0xb
 4872 012f 59       		.uleb128 0x59
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 149


 4873 0130 05       		.uleb128 0x5
 4874 0131 00       		.byte	0
 4875 0132 00       		.byte	0
 4876 0133 17       		.uleb128 0x17
 4877 0134 0B       		.uleb128 0xb
 4878 0135 01       		.byte	0x1
 4879 0136 11       		.uleb128 0x11
 4880 0137 01       		.uleb128 0x1
 4881 0138 12       		.uleb128 0x12
 4882 0139 06       		.uleb128 0x6
 4883 013a 00       		.byte	0
 4884 013b 00       		.byte	0
 4885 013c 18       		.uleb128 0x18
 4886 013d 2E       		.uleb128 0x2e
 4887 013e 01       		.byte	0x1
 4888 013f 31       		.uleb128 0x31
 4889 0140 13       		.uleb128 0x13
 4890 0141 11       		.uleb128 0x11
 4891 0142 01       		.uleb128 0x1
 4892 0143 12       		.uleb128 0x12
 4893 0144 06       		.uleb128 0x6
 4894 0145 40       		.uleb128 0x40
 4895 0146 18       		.uleb128 0x18
 4896 0147 9742     		.uleb128 0x2117
 4897 0149 19       		.uleb128 0x19
 4898 014a 01       		.uleb128 0x1
 4899 014b 13       		.uleb128 0x13
 4900 014c 00       		.byte	0
 4901 014d 00       		.byte	0
 4902 014e 19       		.uleb128 0x19
 4903 014f 34       		.uleb128 0x34
 4904 0150 00       		.byte	0
 4905 0151 31       		.uleb128 0x31
 4906 0152 13       		.uleb128 0x13
 4907 0153 02       		.uleb128 0x2
 4908 0154 17       		.uleb128 0x17
 4909 0155 00       		.byte	0
 4910 0156 00       		.byte	0
 4911 0157 1A       		.uleb128 0x1a
 4912 0158 34       		.uleb128 0x34
 4913 0159 00       		.byte	0
 4914 015a 31       		.uleb128 0x31
 4915 015b 13       		.uleb128 0x13
 4916 015c 02       		.uleb128 0x2
 4917 015d 18       		.uleb128 0x18
 4918 015e 00       		.byte	0
 4919 015f 00       		.byte	0
 4920 0160 1B       		.uleb128 0x1b
 4921 0161 1D       		.uleb128 0x1d
 4922 0162 01       		.byte	0x1
 4923 0163 31       		.uleb128 0x31
 4924 0164 13       		.uleb128 0x13
 4925 0165 11       		.uleb128 0x11
 4926 0166 01       		.uleb128 0x1
 4927 0167 12       		.uleb128 0x12
 4928 0168 06       		.uleb128 0x6
 4929 0169 58       		.uleb128 0x58
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 150


 4930 016a 0B       		.uleb128 0xb
 4931 016b 59       		.uleb128 0x59
 4932 016c 05       		.uleb128 0x5
 4933 016d 01       		.uleb128 0x1
 4934 016e 13       		.uleb128 0x13
 4935 016f 00       		.byte	0
 4936 0170 00       		.byte	0
 4937 0171 1C       		.uleb128 0x1c
 4938 0172 05       		.uleb128 0x5
 4939 0173 00       		.byte	0
 4940 0174 31       		.uleb128 0x31
 4941 0175 13       		.uleb128 0x13
 4942 0176 02       		.uleb128 0x2
 4943 0177 17       		.uleb128 0x17
 4944 0178 00       		.byte	0
 4945 0179 00       		.byte	0
 4946 017a 1D       		.uleb128 0x1d
 4947 017b 898201   		.uleb128 0x4109
 4948 017e 00       		.byte	0
 4949 017f 11       		.uleb128 0x11
 4950 0180 01       		.uleb128 0x1
 4951 0181 31       		.uleb128 0x31
 4952 0182 13       		.uleb128 0x13
 4953 0183 00       		.byte	0
 4954 0184 00       		.byte	0
 4955 0185 1E       		.uleb128 0x1e
 4956 0186 898201   		.uleb128 0x4109
 4957 0189 01       		.byte	0x1
 4958 018a 11       		.uleb128 0x11
 4959 018b 01       		.uleb128 0x1
 4960 018c 31       		.uleb128 0x31
 4961 018d 13       		.uleb128 0x13
 4962 018e 01       		.uleb128 0x1
 4963 018f 13       		.uleb128 0x13
 4964 0190 00       		.byte	0
 4965 0191 00       		.byte	0
 4966 0192 1F       		.uleb128 0x1f
 4967 0193 8A8201   		.uleb128 0x410a
 4968 0196 00       		.byte	0
 4969 0197 02       		.uleb128 0x2
 4970 0198 18       		.uleb128 0x18
 4971 0199 9142     		.uleb128 0x2111
 4972 019b 18       		.uleb128 0x18
 4973 019c 00       		.byte	0
 4974 019d 00       		.byte	0
 4975 019e 20       		.uleb128 0x20
 4976 019f 898201   		.uleb128 0x4109
 4977 01a2 01       		.byte	0x1
 4978 01a3 11       		.uleb128 0x11
 4979 01a4 01       		.uleb128 0x1
 4980 01a5 31       		.uleb128 0x31
 4981 01a6 13       		.uleb128 0x13
 4982 01a7 00       		.byte	0
 4983 01a8 00       		.byte	0
 4984 01a9 21       		.uleb128 0x21
 4985 01aa 2E       		.uleb128 0x2e
 4986 01ab 00       		.byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 151


 4987 01ac 3F       		.uleb128 0x3f
 4988 01ad 19       		.uleb128 0x19
 4989 01ae 03       		.uleb128 0x3
 4990 01af 0E       		.uleb128 0xe
 4991 01b0 3A       		.uleb128 0x3a
 4992 01b1 0B       		.uleb128 0xb
 4993 01b2 3B       		.uleb128 0x3b
 4994 01b3 0B       		.uleb128 0xb
 4995 01b4 27       		.uleb128 0x27
 4996 01b5 19       		.uleb128 0x19
 4997 01b6 11       		.uleb128 0x11
 4998 01b7 01       		.uleb128 0x1
 4999 01b8 12       		.uleb128 0x12
 5000 01b9 06       		.uleb128 0x6
 5001 01ba 40       		.uleb128 0x40
 5002 01bb 18       		.uleb128 0x18
 5003 01bc 9742     		.uleb128 0x2117
 5004 01be 19       		.uleb128 0x19
 5005 01bf 00       		.byte	0
 5006 01c0 00       		.byte	0
 5007 01c1 22       		.uleb128 0x22
 5008 01c2 2E       		.uleb128 0x2e
 5009 01c3 01       		.byte	0x1
 5010 01c4 3F       		.uleb128 0x3f
 5011 01c5 19       		.uleb128 0x19
 5012 01c6 03       		.uleb128 0x3
 5013 01c7 0E       		.uleb128 0xe
 5014 01c8 3A       		.uleb128 0x3a
 5015 01c9 0B       		.uleb128 0xb
 5016 01ca 3B       		.uleb128 0x3b
 5017 01cb 0B       		.uleb128 0xb
 5018 01cc 27       		.uleb128 0x27
 5019 01cd 19       		.uleb128 0x19
 5020 01ce 11       		.uleb128 0x11
 5021 01cf 01       		.uleb128 0x1
 5022 01d0 12       		.uleb128 0x12
 5023 01d1 06       		.uleb128 0x6
 5024 01d2 40       		.uleb128 0x40
 5025 01d3 18       		.uleb128 0x18
 5026 01d4 9742     		.uleb128 0x2117
 5027 01d6 19       		.uleb128 0x19
 5028 01d7 01       		.uleb128 0x1
 5029 01d8 13       		.uleb128 0x13
 5030 01d9 00       		.byte	0
 5031 01da 00       		.byte	0
 5032 01db 23       		.uleb128 0x23
 5033 01dc 1D       		.uleb128 0x1d
 5034 01dd 00       		.byte	0
 5035 01de 31       		.uleb128 0x31
 5036 01df 13       		.uleb128 0x13
 5037 01e0 52       		.uleb128 0x52
 5038 01e1 01       		.uleb128 0x1
 5039 01e2 55       		.uleb128 0x55
 5040 01e3 17       		.uleb128 0x17
 5041 01e4 58       		.uleb128 0x58
 5042 01e5 0B       		.uleb128 0xb
 5043 01e6 59       		.uleb128 0x59
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 152


 5044 01e7 0B       		.uleb128 0xb
 5045 01e8 00       		.byte	0
 5046 01e9 00       		.byte	0
 5047 01ea 24       		.uleb128 0x24
 5048 01eb 34       		.uleb128 0x34
 5049 01ec 00       		.byte	0
 5050 01ed 31       		.uleb128 0x31
 5051 01ee 13       		.uleb128 0x13
 5052 01ef 1C       		.uleb128 0x1c
 5053 01f0 0B       		.uleb128 0xb
 5054 01f1 00       		.byte	0
 5055 01f2 00       		.byte	0
 5056 01f3 25       		.uleb128 0x25
 5057 01f4 2E       		.uleb128 0x2e
 5058 01f5 00       		.byte	0
 5059 01f6 31       		.uleb128 0x31
 5060 01f7 13       		.uleb128 0x13
 5061 01f8 11       		.uleb128 0x11
 5062 01f9 01       		.uleb128 0x1
 5063 01fa 12       		.uleb128 0x12
 5064 01fb 06       		.uleb128 0x6
 5065 01fc 40       		.uleb128 0x40
 5066 01fd 18       		.uleb128 0x18
 5067 01fe 9742     		.uleb128 0x2117
 5068 0200 19       		.uleb128 0x19
 5069 0201 00       		.byte	0
 5070 0202 00       		.byte	0
 5071 0203 26       		.uleb128 0x26
 5072 0204 2E       		.uleb128 0x2e
 5073 0205 01       		.byte	0x1
 5074 0206 3F       		.uleb128 0x3f
 5075 0207 19       		.uleb128 0x19
 5076 0208 03       		.uleb128 0x3
 5077 0209 0E       		.uleb128 0xe
 5078 020a 3A       		.uleb128 0x3a
 5079 020b 0B       		.uleb128 0xb
 5080 020c 3B       		.uleb128 0x3b
 5081 020d 05       		.uleb128 0x5
 5082 020e 27       		.uleb128 0x27
 5083 020f 19       		.uleb128 0x19
 5084 0210 11       		.uleb128 0x11
 5085 0211 01       		.uleb128 0x1
 5086 0212 12       		.uleb128 0x12
 5087 0213 06       		.uleb128 0x6
 5088 0214 40       		.uleb128 0x40
 5089 0215 18       		.uleb128 0x18
 5090 0216 9742     		.uleb128 0x2117
 5091 0218 19       		.uleb128 0x19
 5092 0219 01       		.uleb128 0x1
 5093 021a 13       		.uleb128 0x13
 5094 021b 00       		.byte	0
 5095 021c 00       		.byte	0
 5096 021d 27       		.uleb128 0x27
 5097 021e 05       		.uleb128 0x5
 5098 021f 00       		.byte	0
 5099 0220 03       		.uleb128 0x3
 5100 0221 0E       		.uleb128 0xe
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 153


 5101 0222 3A       		.uleb128 0x3a
 5102 0223 0B       		.uleb128 0xb
 5103 0224 3B       		.uleb128 0x3b
 5104 0225 05       		.uleb128 0x5
 5105 0226 49       		.uleb128 0x49
 5106 0227 13       		.uleb128 0x13
 5107 0228 02       		.uleb128 0x2
 5108 0229 17       		.uleb128 0x17
 5109 022a 00       		.byte	0
 5110 022b 00       		.byte	0
 5111 022c 28       		.uleb128 0x28
 5112 022d 34       		.uleb128 0x34
 5113 022e 00       		.byte	0
 5114 022f 03       		.uleb128 0x3
 5115 0230 0E       		.uleb128 0xe
 5116 0231 3A       		.uleb128 0x3a
 5117 0232 0B       		.uleb128 0xb
 5118 0233 3B       		.uleb128 0x3b
 5119 0234 05       		.uleb128 0x5
 5120 0235 49       		.uleb128 0x49
 5121 0236 13       		.uleb128 0x13
 5122 0237 02       		.uleb128 0x2
 5123 0238 17       		.uleb128 0x17
 5124 0239 00       		.byte	0
 5125 023a 00       		.byte	0
 5126 023b 29       		.uleb128 0x29
 5127 023c 05       		.uleb128 0x5
 5128 023d 00       		.byte	0
 5129 023e 03       		.uleb128 0x3
 5130 023f 0E       		.uleb128 0xe
 5131 0240 3A       		.uleb128 0x3a
 5132 0241 0B       		.uleb128 0xb
 5133 0242 3B       		.uleb128 0x3b
 5134 0243 05       		.uleb128 0x5
 5135 0244 49       		.uleb128 0x49
 5136 0245 13       		.uleb128 0x13
 5137 0246 02       		.uleb128 0x2
 5138 0247 18       		.uleb128 0x18
 5139 0248 00       		.byte	0
 5140 0249 00       		.byte	0
 5141 024a 2A       		.uleb128 0x2a
 5142 024b 2E       		.uleb128 0x2e
 5143 024c 01       		.byte	0x1
 5144 024d 3F       		.uleb128 0x3f
 5145 024e 19       		.uleb128 0x19
 5146 024f 03       		.uleb128 0x3
 5147 0250 0E       		.uleb128 0xe
 5148 0251 3A       		.uleb128 0x3a
 5149 0252 0B       		.uleb128 0xb
 5150 0253 3B       		.uleb128 0x3b
 5151 0254 05       		.uleb128 0x5
 5152 0255 27       		.uleb128 0x27
 5153 0256 19       		.uleb128 0x19
 5154 0257 49       		.uleb128 0x49
 5155 0258 13       		.uleb128 0x13
 5156 0259 11       		.uleb128 0x11
 5157 025a 01       		.uleb128 0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 154


 5158 025b 12       		.uleb128 0x12
 5159 025c 06       		.uleb128 0x6
 5160 025d 40       		.uleb128 0x40
 5161 025e 18       		.uleb128 0x18
 5162 025f 9742     		.uleb128 0x2117
 5163 0261 19       		.uleb128 0x19
 5164 0262 01       		.uleb128 0x1
 5165 0263 13       		.uleb128 0x13
 5166 0264 00       		.byte	0
 5167 0265 00       		.byte	0
 5168 0266 2B       		.uleb128 0x2b
 5169 0267 34       		.uleb128 0x34
 5170 0268 00       		.byte	0
 5171 0269 03       		.uleb128 0x3
 5172 026a 0E       		.uleb128 0xe
 5173 026b 3A       		.uleb128 0x3a
 5174 026c 0B       		.uleb128 0xb
 5175 026d 3B       		.uleb128 0x3b
 5176 026e 05       		.uleb128 0x5
 5177 026f 49       		.uleb128 0x49
 5178 0270 13       		.uleb128 0x13
 5179 0271 02       		.uleb128 0x2
 5180 0272 18       		.uleb128 0x18
 5181 0273 00       		.byte	0
 5182 0274 00       		.byte	0
 5183 0275 2C       		.uleb128 0x2c
 5184 0276 1D       		.uleb128 0x1d
 5185 0277 00       		.byte	0
 5186 0278 31       		.uleb128 0x31
 5187 0279 13       		.uleb128 0x13
 5188 027a 11       		.uleb128 0x11
 5189 027b 01       		.uleb128 0x1
 5190 027c 12       		.uleb128 0x12
 5191 027d 06       		.uleb128 0x6
 5192 027e 58       		.uleb128 0x58
 5193 027f 0B       		.uleb128 0xb
 5194 0280 59       		.uleb128 0x59
 5195 0281 05       		.uleb128 0x5
 5196 0282 00       		.byte	0
 5197 0283 00       		.byte	0
 5198 0284 2D       		.uleb128 0x2d
 5199 0285 01       		.uleb128 0x1
 5200 0286 01       		.byte	0x1
 5201 0287 49       		.uleb128 0x49
 5202 0288 13       		.uleb128 0x13
 5203 0289 01       		.uleb128 0x1
 5204 028a 13       		.uleb128 0x13
 5205 028b 00       		.byte	0
 5206 028c 00       		.byte	0
 5207 028d 2E       		.uleb128 0x2e
 5208 028e 21       		.uleb128 0x21
 5209 028f 00       		.byte	0
 5210 0290 49       		.uleb128 0x49
 5211 0291 13       		.uleb128 0x13
 5212 0292 2F       		.uleb128 0x2f
 5213 0293 0B       		.uleb128 0xb
 5214 0294 00       		.byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 155


 5215 0295 00       		.byte	0
 5216 0296 2F       		.uleb128 0x2f
 5217 0297 2E       		.uleb128 0x2e
 5218 0298 00       		.byte	0
 5219 0299 3F       		.uleb128 0x3f
 5220 029a 19       		.uleb128 0x19
 5221 029b 03       		.uleb128 0x3
 5222 029c 0E       		.uleb128 0xe
 5223 029d 3A       		.uleb128 0x3a
 5224 029e 0B       		.uleb128 0xb
 5225 029f 3B       		.uleb128 0x3b
 5226 02a0 05       		.uleb128 0x5
 5227 02a1 27       		.uleb128 0x27
 5228 02a2 19       		.uleb128 0x19
 5229 02a3 11       		.uleb128 0x11
 5230 02a4 01       		.uleb128 0x1
 5231 02a5 12       		.uleb128 0x12
 5232 02a6 06       		.uleb128 0x6
 5233 02a7 40       		.uleb128 0x40
 5234 02a8 18       		.uleb128 0x18
 5235 02a9 9742     		.uleb128 0x2117
 5236 02ab 19       		.uleb128 0x19
 5237 02ac 00       		.byte	0
 5238 02ad 00       		.byte	0
 5239 02ae 30       		.uleb128 0x30
 5240 02af 2E       		.uleb128 0x2e
 5241 02b0 00       		.byte	0
 5242 02b1 3F       		.uleb128 0x3f
 5243 02b2 19       		.uleb128 0x19
 5244 02b3 03       		.uleb128 0x3
 5245 02b4 0E       		.uleb128 0xe
 5246 02b5 3A       		.uleb128 0x3a
 5247 02b6 0B       		.uleb128 0xb
 5248 02b7 3B       		.uleb128 0x3b
 5249 02b8 05       		.uleb128 0x5
 5250 02b9 27       		.uleb128 0x27
 5251 02ba 19       		.uleb128 0x19
 5252 02bb 49       		.uleb128 0x49
 5253 02bc 13       		.uleb128 0x13
 5254 02bd 11       		.uleb128 0x11
 5255 02be 01       		.uleb128 0x1
 5256 02bf 12       		.uleb128 0x12
 5257 02c0 06       		.uleb128 0x6
 5258 02c1 40       		.uleb128 0x40
 5259 02c2 18       		.uleb128 0x18
 5260 02c3 9742     		.uleb128 0x2117
 5261 02c5 19       		.uleb128 0x19
 5262 02c6 00       		.byte	0
 5263 02c7 00       		.byte	0
 5264 02c8 31       		.uleb128 0x31
 5265 02c9 05       		.uleb128 0x5
 5266 02ca 00       		.byte	0
 5267 02cb 31       		.uleb128 0x31
 5268 02cc 13       		.uleb128 0x13
 5269 02cd 02       		.uleb128 0x2
 5270 02ce 18       		.uleb128 0x18
 5271 02cf 00       		.byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 156


 5272 02d0 00       		.byte	0
 5273 02d1 32       		.uleb128 0x32
 5274 02d2 34       		.uleb128 0x34
 5275 02d3 00       		.byte	0
 5276 02d4 31       		.uleb128 0x31
 5277 02d5 13       		.uleb128 0x13
 5278 02d6 1C       		.uleb128 0x1c
 5279 02d7 06       		.uleb128 0x6
 5280 02d8 00       		.byte	0
 5281 02d9 00       		.byte	0
 5282 02da 33       		.uleb128 0x33
 5283 02db 34       		.uleb128 0x34
 5284 02dc 00       		.byte	0
 5285 02dd 03       		.uleb128 0x3
 5286 02de 0E       		.uleb128 0xe
 5287 02df 3A       		.uleb128 0x3a
 5288 02e0 0B       		.uleb128 0xb
 5289 02e1 3B       		.uleb128 0x3b
 5290 02e2 05       		.uleb128 0x5
 5291 02e3 49       		.uleb128 0x49
 5292 02e4 13       		.uleb128 0x13
 5293 02e5 1C       		.uleb128 0x1c
 5294 02e6 06       		.uleb128 0x6
 5295 02e7 00       		.byte	0
 5296 02e8 00       		.byte	0
 5297 02e9 34       		.uleb128 0x34
 5298 02ea 2E       		.uleb128 0x2e
 5299 02eb 01       		.byte	0x1
 5300 02ec 3F       		.uleb128 0x3f
 5301 02ed 19       		.uleb128 0x19
 5302 02ee 03       		.uleb128 0x3
 5303 02ef 0E       		.uleb128 0xe
 5304 02f0 3A       		.uleb128 0x3a
 5305 02f1 0B       		.uleb128 0xb
 5306 02f2 3B       		.uleb128 0x3b
 5307 02f3 05       		.uleb128 0x5
 5308 02f4 27       		.uleb128 0x27
 5309 02f5 19       		.uleb128 0x19
 5310 02f6 11       		.uleb128 0x11
 5311 02f7 01       		.uleb128 0x1
 5312 02f8 12       		.uleb128 0x12
 5313 02f9 06       		.uleb128 0x6
 5314 02fa 40       		.uleb128 0x40
 5315 02fb 18       		.uleb128 0x18
 5316 02fc 9642     		.uleb128 0x2116
 5317 02fe 19       		.uleb128 0x19
 5318 02ff 01       		.uleb128 0x1
 5319 0300 13       		.uleb128 0x13
 5320 0301 00       		.byte	0
 5321 0302 00       		.byte	0
 5322 0303 35       		.uleb128 0x35
 5323 0304 1D       		.uleb128 0x1d
 5324 0305 01       		.byte	0x1
 5325 0306 31       		.uleb128 0x31
 5326 0307 13       		.uleb128 0x13
 5327 0308 52       		.uleb128 0x52
 5328 0309 01       		.uleb128 0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 157


 5329 030a 55       		.uleb128 0x55
 5330 030b 17       		.uleb128 0x17
 5331 030c 58       		.uleb128 0x58
 5332 030d 0B       		.uleb128 0xb
 5333 030e 59       		.uleb128 0x59
 5334 030f 05       		.uleb128 0x5
 5335 0310 01       		.uleb128 0x1
 5336 0311 13       		.uleb128 0x13
 5337 0312 00       		.byte	0
 5338 0313 00       		.byte	0
 5339 0314 36       		.uleb128 0x36
 5340 0315 0B       		.uleb128 0xb
 5341 0316 01       		.byte	0x1
 5342 0317 55       		.uleb128 0x55
 5343 0318 17       		.uleb128 0x17
 5344 0319 00       		.byte	0
 5345 031a 00       		.byte	0
 5346 031b 37       		.uleb128 0x37
 5347 031c 1D       		.uleb128 0x1d
 5348 031d 01       		.byte	0x1
 5349 031e 31       		.uleb128 0x31
 5350 031f 13       		.uleb128 0x13
 5351 0320 52       		.uleb128 0x52
 5352 0321 01       		.uleb128 0x1
 5353 0322 55       		.uleb128 0x55
 5354 0323 17       		.uleb128 0x17
 5355 0324 58       		.uleb128 0x58
 5356 0325 0B       		.uleb128 0xb
 5357 0326 59       		.uleb128 0x59
 5358 0327 05       		.uleb128 0x5
 5359 0328 00       		.byte	0
 5360 0329 00       		.byte	0
 5361 032a 38       		.uleb128 0x38
 5362 032b 05       		.uleb128 0x5
 5363 032c 00       		.byte	0
 5364 032d 31       		.uleb128 0x31
 5365 032e 13       		.uleb128 0x13
 5366 032f 1C       		.uleb128 0x1c
 5367 0330 0B       		.uleb128 0xb
 5368 0331 00       		.byte	0
 5369 0332 00       		.byte	0
 5370 0333 39       		.uleb128 0x39
 5371 0334 34       		.uleb128 0x34
 5372 0335 00       		.byte	0
 5373 0336 03       		.uleb128 0x3
 5374 0337 0E       		.uleb128 0xe
 5375 0338 3A       		.uleb128 0x3a
 5376 0339 0B       		.uleb128 0xb
 5377 033a 3B       		.uleb128 0x3b
 5378 033b 0B       		.uleb128 0xb
 5379 033c 49       		.uleb128 0x49
 5380 033d 13       		.uleb128 0x13
 5381 033e 02       		.uleb128 0x2
 5382 033f 18       		.uleb128 0x18
 5383 0340 00       		.byte	0
 5384 0341 00       		.byte	0
 5385 0342 3A       		.uleb128 0x3a
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 158


 5386 0343 34       		.uleb128 0x34
 5387 0344 00       		.byte	0
 5388 0345 03       		.uleb128 0x3
 5389 0346 0E       		.uleb128 0xe
 5390 0347 3A       		.uleb128 0x3a
 5391 0348 0B       		.uleb128 0xb
 5392 0349 3B       		.uleb128 0x3b
 5393 034a 0B       		.uleb128 0xb
 5394 034b 49       		.uleb128 0x49
 5395 034c 13       		.uleb128 0x13
 5396 034d 3F       		.uleb128 0x3f
 5397 034e 19       		.uleb128 0x19
 5398 034f 02       		.uleb128 0x2
 5399 0350 18       		.uleb128 0x18
 5400 0351 00       		.byte	0
 5401 0352 00       		.byte	0
 5402 0353 3B       		.uleb128 0x3b
 5403 0354 26       		.uleb128 0x26
 5404 0355 00       		.byte	0
 5405 0356 49       		.uleb128 0x49
 5406 0357 13       		.uleb128 0x13
 5407 0358 00       		.byte	0
 5408 0359 00       		.byte	0
 5409 035a 3C       		.uleb128 0x3c
 5410 035b 2E       		.uleb128 0x2e
 5411 035c 00       		.byte	0
 5412 035d 3F       		.uleb128 0x3f
 5413 035e 19       		.uleb128 0x19
 5414 035f 3C       		.uleb128 0x3c
 5415 0360 19       		.uleb128 0x19
 5416 0361 6E       		.uleb128 0x6e
 5417 0362 0E       		.uleb128 0xe
 5418 0363 03       		.uleb128 0x3
 5419 0364 0E       		.uleb128 0xe
 5420 0365 3A       		.uleb128 0x3a
 5421 0366 0B       		.uleb128 0xb
 5422 0367 3B       		.uleb128 0x3b
 5423 0368 0B       		.uleb128 0xb
 5424 0369 00       		.byte	0
 5425 036a 00       		.byte	0
 5426 036b 00       		.byte	0
 5427              		.section	.debug_loc,"",%progbits
 5428              	.Ldebug_loc0:
 5429              	.LLST0:
 5430 0000 0C000000 		.4byte	.LVL2
 5431 0004 14000000 		.4byte	.LVL3
 5432 0008 0200     		.2byte	0x2
 5433 000a 30       		.byte	0x30
 5434 000b 9F       		.byte	0x9f
 5435 000c 14000000 		.4byte	.LVL3
 5436 0010 2E000000 		.4byte	.LVL6
 5437 0014 0100     		.2byte	0x1
 5438 0016 52       		.byte	0x52
 5439 0017 2E000000 		.4byte	.LVL6
 5440 001b 4C000000 		.4byte	.LVL9
 5441 001f 0300     		.2byte	0x3
 5442 0021 72       		.byte	0x72
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 159


 5443 0022 7D       		.sleb128 -3
 5444 0023 9F       		.byte	0x9f
 5445 0024 9E000000 		.4byte	.LVL17
 5446 0028 AA000000 		.4byte	.LVL18
 5447 002c 0100     		.2byte	0x1
 5448 002e 52       		.byte	0x52
 5449 002f D0000000 		.4byte	.LVL24
 5450 0033 D4000000 		.4byte	.LVL25
 5451 0037 0100     		.2byte	0x1
 5452 0039 52       		.byte	0x52
 5453 003a 00000000 		.4byte	0
 5454 003e 00000000 		.4byte	0
 5455              	.LLST1:
 5456 0042 0C000000 		.4byte	.LVL2
 5457 0046 2E000000 		.4byte	.LVL6
 5458 004a 0200     		.2byte	0x2
 5459 004c 33       		.byte	0x33
 5460 004d 9F       		.byte	0x9f
 5461 004e 2E000000 		.4byte	.LVL6
 5462 0052 4C000000 		.4byte	.LVL9
 5463 0056 0100     		.2byte	0x1
 5464 0058 52       		.byte	0x52
 5465 0059 9E000000 		.4byte	.LVL17
 5466 005d AA000000 		.4byte	.LVL18
 5467 0061 0200     		.2byte	0x2
 5468 0063 33       		.byte	0x33
 5469 0064 9F       		.byte	0x9f
 5470 0065 D0000000 		.4byte	.LVL24
 5471 0069 10010000 		.4byte	.LFE55
 5472 006d 0200     		.2byte	0x2
 5473 006f 33       		.byte	0x33
 5474 0070 9F       		.byte	0x9f
 5475 0071 00000000 		.4byte	0
 5476 0075 00000000 		.4byte	0
 5477              	.LLST2:
 5478 0079 0C000000 		.4byte	.LVL2
 5479 007d 9C000000 		.4byte	.LVL16
 5480 0081 0100     		.2byte	0x1
 5481 0083 54       		.byte	0x54
 5482 0084 9E000000 		.4byte	.LVL17
 5483 0088 10010000 		.4byte	.LFE55
 5484 008c 0100     		.2byte	0x1
 5485 008e 54       		.byte	0x54
 5486 008f 00000000 		.4byte	0
 5487 0093 00000000 		.4byte	0
 5488              	.LLST3:
 5489 0097 46000000 		.4byte	.LVL7
 5490 009b 48000000 		.4byte	.LVL8
 5491 009f 0100     		.2byte	0x1
 5492 00a1 53       		.byte	0x53
 5493 00a2 48000000 		.4byte	.LVL8
 5494 00a6 4C000000 		.4byte	.LVL9
 5495 00aa 0700     		.2byte	0x7
 5496 00ac 73       		.byte	0x73
 5497 00ad 00       		.sleb128 0
 5498 00ae 44       		.byte	0x44
 5499 00af 40       		.byte	0x40
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 160


 5500 00b0 24       		.byte	0x24
 5501 00b1 21       		.byte	0x21
 5502 00b2 9F       		.byte	0x9f
 5503 00b3 66000000 		.4byte	.LVL11
 5504 00b7 75000000 		.4byte	.LVL12-1
 5505 00bb 0100     		.2byte	0x1
 5506 00bd 52       		.byte	0x52
 5507 00be C0000000 		.4byte	.LVL19
 5508 00c2 C2000000 		.4byte	.LVL20
 5509 00c6 0100     		.2byte	0x1
 5510 00c8 53       		.byte	0x53
 5511 00c9 C2000000 		.4byte	.LVL20
 5512 00cd CA000000 		.4byte	.LVL22
 5513 00d1 0700     		.2byte	0x7
 5514 00d3 73       		.byte	0x73
 5515 00d4 00       		.sleb128 0
 5516 00d5 44       		.byte	0x44
 5517 00d6 40       		.byte	0x40
 5518 00d7 24       		.byte	0x24
 5519 00d8 21       		.byte	0x21
 5520 00d9 9F       		.byte	0x9f
 5521 00da CA000000 		.4byte	.LVL22
 5522 00de CC000000 		.4byte	.LVL23
 5523 00e2 0100     		.2byte	0x1
 5524 00e4 52       		.byte	0x52
 5525 00e5 D8000000 		.4byte	.LVL26
 5526 00e9 DC000000 		.4byte	.LVL27
 5527 00ed 0100     		.2byte	0x1
 5528 00ef 53       		.byte	0x53
 5529 00f0 DC000000 		.4byte	.LVL27
 5530 00f4 E0000000 		.4byte	.LVL28
 5531 00f8 0700     		.2byte	0x7
 5532 00fa 73       		.byte	0x73
 5533 00fb 00       		.sleb128 0
 5534 00fc 44       		.byte	0x44
 5535 00fd 40       		.byte	0x40
 5536 00fe 24       		.byte	0x24
 5537 00ff 21       		.byte	0x21
 5538 0100 9F       		.byte	0x9f
 5539 0101 E0000000 		.4byte	.LVL28
 5540 0105 10010000 		.4byte	.LFE55
 5541 0109 0100     		.2byte	0x1
 5542 010b 52       		.byte	0x52
 5543 010c 00000000 		.4byte	0
 5544 0110 00000000 		.4byte	0
 5545              	.LLST4:
 5546 0114 58000000 		.4byte	.LVL10
 5547 0118 66000000 		.4byte	.LVL11
 5548 011c 1900     		.2byte	0x19
 5549 011e 70       		.byte	0x70
 5550 011f 00       		.sleb128 0
 5551 0120 71       		.byte	0x71
 5552 0121 00       		.sleb128 0
 5553 0122 22       		.byte	0x22
 5554 0123 12       		.byte	0x12
 5555 0124 40       		.byte	0x40
 5556 0125 4B       		.byte	0x4b
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 161


 5557 0126 24       		.byte	0x24
 5558 0127 22       		.byte	0x22
 5559 0128 08       		.byte	0x8
 5560 0129 FF       		.byte	0xff
 5561 012a 16       		.byte	0x16
 5562 012b 14       		.byte	0x14
 5563 012c 40       		.byte	0x40
 5564 012d 4B       		.byte	0x4b
 5565 012e 24       		.byte	0x24
 5566 012f 22       		.byte	0x22
 5567 0130 2D       		.byte	0x2d
 5568 0131 28       		.byte	0x28
 5569 0132 0100     		.2byte	0x1
 5570 0134 16       		.byte	0x16
 5571 0135 13       		.byte	0x13
 5572 0136 9F       		.byte	0x9f
 5573 0137 CC000000 		.4byte	.LVL23
 5574 013b D0000000 		.4byte	.LVL24
 5575 013f 1900     		.2byte	0x19
 5576 0141 70       		.byte	0x70
 5577 0142 00       		.sleb128 0
 5578 0143 71       		.byte	0x71
 5579 0144 00       		.sleb128 0
 5580 0145 22       		.byte	0x22
 5581 0146 12       		.byte	0x12
 5582 0147 40       		.byte	0x40
 5583 0148 4B       		.byte	0x4b
 5584 0149 24       		.byte	0x24
 5585 014a 22       		.byte	0x22
 5586 014b 08       		.byte	0x8
 5587 014c FF       		.byte	0xff
 5588 014d 16       		.byte	0x16
 5589 014e 14       		.byte	0x14
 5590 014f 40       		.byte	0x40
 5591 0150 4B       		.byte	0x4b
 5592 0151 24       		.byte	0x24
 5593 0152 22       		.byte	0x22
 5594 0153 2D       		.byte	0x2d
 5595 0154 28       		.byte	0x28
 5596 0155 0100     		.2byte	0x1
 5597 0157 16       		.byte	0x16
 5598 0158 13       		.byte	0x13
 5599 0159 9F       		.byte	0x9f
 5600 015a 00000000 		.4byte	0
 5601 015e 00000000 		.4byte	0
 5602              	.LLST5:
 5603 0162 82000000 		.4byte	.LVL13
 5604 0166 90000000 		.4byte	.LVL14
 5605 016a 0200     		.2byte	0x2
 5606 016c 44       		.byte	0x44
 5607 016d 9F       		.byte	0x9f
 5608 016e 00000000 		.4byte	0
 5609 0172 00000000 		.4byte	0
 5610              	.LLST6:
 5611 0176 00000000 		.4byte	.LVL32
 5612 017a 07000000 		.4byte	.LVL33-1
 5613 017e 0100     		.2byte	0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 162


 5614 0180 50       		.byte	0x50
 5615 0181 07000000 		.4byte	.LVL33-1
 5616 0185 1A000000 		.4byte	.LVL37
 5617 0189 0100     		.2byte	0x1
 5618 018b 54       		.byte	0x54
 5619 018c 1A000000 		.4byte	.LVL37
 5620 0190 20000000 		.4byte	.LFE6
 5621 0194 0400     		.2byte	0x4
 5622 0196 F3       		.byte	0xf3
 5623 0197 01       		.uleb128 0x1
 5624 0198 50       		.byte	0x50
 5625 0199 9F       		.byte	0x9f
 5626 019a 00000000 		.4byte	0
 5627 019e 00000000 		.4byte	0
 5628              	.LLST7:
 5629 01a2 08000000 		.4byte	.LVL33
 5630 01a6 19000000 		.4byte	.LVL36-1
 5631 01aa 0100     		.2byte	0x1
 5632 01ac 50       		.byte	0x50
 5633 01ad 00000000 		.4byte	0
 5634 01b1 00000000 		.4byte	0
 5635              	.LLST8:
 5636 01b5 10000000 		.4byte	.LVL34
 5637 01b9 14000000 		.4byte	.LVL35
 5638 01bd 0100     		.2byte	0x1
 5639 01bf 52       		.byte	0x52
 5640 01c0 14000000 		.4byte	.LVL35
 5641 01c4 19000000 		.4byte	.LVL36-1
 5642 01c8 0100     		.2byte	0x1
 5643 01ca 53       		.byte	0x53
 5644 01cb 00000000 		.4byte	0
 5645 01cf 00000000 		.4byte	0
 5646              	.LLST9:
 5647 01d3 06000000 		.4byte	.LVL39
 5648 01d7 0D000000 		.4byte	.LVL41-1
 5649 01db 0100     		.2byte	0x1
 5650 01dd 50       		.byte	0x50
 5651 01de 00000000 		.4byte	0
 5652 01e2 00000000 		.4byte	0
 5653              	.LLST10:
 5654 01e6 0A000000 		.4byte	.LVL40
 5655 01ea 12000000 		.4byte	.LVL42
 5656 01ee 0500     		.2byte	0x5
 5657 01f0 74       		.byte	0x74
 5658 01f1 00       		.sleb128 0
 5659 01f2 37       		.byte	0x37
 5660 01f3 1A       		.byte	0x1a
 5661 01f4 9F       		.byte	0x9f
 5662 01f5 12000000 		.4byte	.LVL42
 5663 01f9 18000000 		.4byte	.LFE8
 5664 01fd 0100     		.2byte	0x1
 5665 01ff 50       		.byte	0x50
 5666 0200 00000000 		.4byte	0
 5667 0204 00000000 		.4byte	0
 5668              	.LLST11:
 5669 0208 00000000 		.4byte	.LVL43
 5670 020c 07000000 		.4byte	.LVL44-1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 163


 5671 0210 0100     		.2byte	0x1
 5672 0212 50       		.byte	0x50
 5673 0213 07000000 		.4byte	.LVL44-1
 5674 0217 0C000000 		.4byte	.LVL45
 5675 021b 0100     		.2byte	0x1
 5676 021d 54       		.byte	0x54
 5677 021e 0C000000 		.4byte	.LVL45
 5678 0222 2C000000 		.4byte	.LFE9
 5679 0226 0400     		.2byte	0x4
 5680 0228 F3       		.byte	0xf3
 5681 0229 01       		.uleb128 0x1
 5682 022a 50       		.byte	0x50
 5683 022b 9F       		.byte	0x9f
 5684 022c 00000000 		.4byte	0
 5685 0230 00000000 		.4byte	0
 5686              	.LLST12:
 5687 0234 08000000 		.4byte	.LVL44
 5688 0238 21000000 		.4byte	.LVL46-1
 5689 023c 0100     		.2byte	0x1
 5690 023e 50       		.byte	0x50
 5691 023f 00000000 		.4byte	0
 5692 0243 00000000 		.4byte	0
 5693              	.LLST13:
 5694 0247 00000000 		.4byte	.LVL47
 5695 024b 09000000 		.4byte	.LVL48-1
 5696 024f 0100     		.2byte	0x1
 5697 0251 50       		.byte	0x50
 5698 0252 09000000 		.4byte	.LVL48-1
 5699 0256 54000000 		.4byte	.LVL54
 5700 025a 0100     		.2byte	0x1
 5701 025c 55       		.byte	0x55
 5702 025d 54000000 		.4byte	.LVL54
 5703 0261 56000000 		.4byte	.LVL55
 5704 0265 0400     		.2byte	0x4
 5705 0267 F3       		.byte	0xf3
 5706 0268 01       		.uleb128 0x1
 5707 0269 50       		.byte	0x50
 5708 026a 9F       		.byte	0x9f
 5709 026b 56000000 		.4byte	.LVL55
 5710 026f 98000000 		.4byte	.LFE10
 5711 0273 0100     		.2byte	0x1
 5712 0275 55       		.byte	0x55
 5713 0276 00000000 		.4byte	0
 5714 027a 00000000 		.4byte	0
 5715              	.LLST14:
 5716 027e 00000000 		.4byte	.LVL47
 5717 0282 16000000 		.4byte	.LVL50
 5718 0286 0200     		.2byte	0x2
 5719 0288 30       		.byte	0x30
 5720 0289 9F       		.byte	0x9f
 5721 028a 16000000 		.4byte	.LVL50
 5722 028e 4C000000 		.4byte	.LVL51
 5723 0292 0100     		.2byte	0x1
 5724 0294 52       		.byte	0x52
 5725 0295 56000000 		.4byte	.LVL55
 5726 0299 62000000 		.4byte	.LVL56
 5727 029d 0200     		.2byte	0x2
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 164


 5728 029f 31       		.byte	0x31
 5729 02a0 9F       		.byte	0x9f
 5730 02a1 62000000 		.4byte	.LVL56
 5731 02a5 65000000 		.4byte	.LVL57-1
 5732 02a9 0100     		.2byte	0x1
 5733 02ab 52       		.byte	0x52
 5734 02ac 00000000 		.4byte	0
 5735 02b0 00000000 		.4byte	0
 5736              	.LLST15:
 5737 02b4 0E000000 		.4byte	.LVL49
 5738 02b8 54000000 		.4byte	.LVL53
 5739 02bc 0100     		.2byte	0x1
 5740 02be 54       		.byte	0x54
 5741 02bf 56000000 		.4byte	.LVL55
 5742 02c3 98000000 		.4byte	.LFE10
 5743 02c7 0100     		.2byte	0x1
 5744 02c9 54       		.byte	0x54
 5745 02ca 00000000 		.4byte	0
 5746 02ce 00000000 		.4byte	0
 5747              	.LLST16:
 5748 02d2 00000000 		.4byte	.LVL59
 5749 02d6 0E000000 		.4byte	.LVL60
 5750 02da 0100     		.2byte	0x1
 5751 02dc 50       		.byte	0x50
 5752 02dd 0E000000 		.4byte	.LVL60
 5753 02e1 50000000 		.4byte	.LFE11
 5754 02e5 0400     		.2byte	0x4
 5755 02e7 F3       		.byte	0xf3
 5756 02e8 01       		.uleb128 0x1
 5757 02e9 50       		.byte	0x50
 5758 02ea 9F       		.byte	0x9f
 5759 02eb 00000000 		.4byte	0
 5760 02ef 00000000 		.4byte	0
 5761              	.LLST17:
 5762 02f3 24000000 		.4byte	.LVL61
 5763 02f7 32000000 		.4byte	.LVL62
 5764 02fb 0400     		.2byte	0x4
 5765 02fd 0A       		.byte	0xa
 5766 02fe E803     		.2byte	0x3e8
 5767 0300 9F       		.byte	0x9f
 5768 0301 00000000 		.4byte	0
 5769 0305 00000000 		.4byte	0
 5770              	.LLST18:
 5771 0309 00000000 		.4byte	.LVL63
 5772 030d 04000000 		.4byte	.LVL64
 5773 0311 0100     		.2byte	0x1
 5774 0313 50       		.byte	0x50
 5775 0314 04000000 		.4byte	.LVL64
 5776 0318 14000000 		.4byte	.LFE15
 5777 031c 0100     		.2byte	0x1
 5778 031e 52       		.byte	0x52
 5779 031f 00000000 		.4byte	0
 5780 0323 00000000 		.4byte	0
 5781              	.LLST19:
 5782 0327 0A000000 		.4byte	.LVL66
 5783 032b 0C000000 		.4byte	.LVL67
 5784 032f 0500     		.2byte	0x5
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 165


 5785 0331 73       		.byte	0x73
 5786 0332 00       		.sleb128 0
 5787 0333 49       		.byte	0x49
 5788 0334 1A       		.byte	0x1a
 5789 0335 9F       		.byte	0x9f
 5790 0336 0C000000 		.4byte	.LVL67
 5791 033a 14000000 		.4byte	.LFE15
 5792 033e 0100     		.2byte	0x1
 5793 0340 50       		.byte	0x50
 5794 0341 00000000 		.4byte	0
 5795 0345 00000000 		.4byte	0
 5796              	.LLST20:
 5797 0349 00000000 		.4byte	.LVL70
 5798 034d 04000000 		.4byte	.LVL71
 5799 0351 0100     		.2byte	0x1
 5800 0353 50       		.byte	0x50
 5801 0354 04000000 		.4byte	.LVL71
 5802 0358 0E000000 		.4byte	.LFE18
 5803 035c 0400     		.2byte	0x4
 5804 035e F3       		.byte	0xf3
 5805 035f 01       		.uleb128 0x1
 5806 0360 50       		.byte	0x50
 5807 0361 9F       		.byte	0x9f
 5808 0362 00000000 		.4byte	0
 5809 0366 00000000 		.4byte	0
 5810              	.LLST21:
 5811 036a 00000000 		.4byte	.LVL73
 5812 036e 08000000 		.4byte	.LVL74
 5813 0372 0100     		.2byte	0x1
 5814 0374 50       		.byte	0x50
 5815 0375 08000000 		.4byte	.LVL74
 5816 0379 0E000000 		.4byte	.LFE19
 5817 037d 0400     		.2byte	0x4
 5818 037f F3       		.byte	0xf3
 5819 0380 01       		.uleb128 0x1
 5820 0381 50       		.byte	0x50
 5821 0382 9F       		.byte	0x9f
 5822 0383 00000000 		.4byte	0
 5823 0387 00000000 		.4byte	0
 5824              	.LLST22:
 5825 038b 00000000 		.4byte	.LVL75
 5826 038f 04000000 		.4byte	.LVL76
 5827 0393 0100     		.2byte	0x1
 5828 0395 50       		.byte	0x50
 5829 0396 04000000 		.4byte	.LVL76
 5830 039a 10000000 		.4byte	.LFE20
 5831 039e 0400     		.2byte	0x4
 5832 03a0 F3       		.byte	0xf3
 5833 03a1 01       		.uleb128 0x1
 5834 03a2 50       		.byte	0x50
 5835 03a3 9F       		.byte	0x9f
 5836 03a4 00000000 		.4byte	0
 5837 03a8 00000000 		.4byte	0
 5838              	.LLST23:
 5839 03ac 00000000 		.4byte	.LVL78
 5840 03b0 04000000 		.4byte	.LVL79
 5841 03b4 0100     		.2byte	0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 166


 5842 03b6 50       		.byte	0x50
 5843 03b7 04000000 		.4byte	.LVL79
 5844 03bb 10000000 		.4byte	.LFE21
 5845 03bf 0400     		.2byte	0x4
 5846 03c1 F3       		.byte	0xf3
 5847 03c2 01       		.uleb128 0x1
 5848 03c3 50       		.byte	0x50
 5849 03c4 9F       		.byte	0x9f
 5850 03c5 00000000 		.4byte	0
 5851 03c9 00000000 		.4byte	0
 5852              	.LLST24:
 5853 03cd 00000000 		.4byte	.LVL80
 5854 03d1 0F000000 		.4byte	.LVL81-1
 5855 03d5 0100     		.2byte	0x1
 5856 03d7 50       		.byte	0x50
 5857 03d8 0F000000 		.4byte	.LVL81-1
 5858 03dc 38000000 		.4byte	.LFE22
 5859 03e0 0400     		.2byte	0x4
 5860 03e2 F3       		.byte	0xf3
 5861 03e3 01       		.uleb128 0x1
 5862 03e4 50       		.byte	0x50
 5863 03e5 9F       		.byte	0x9f
 5864 03e6 00000000 		.4byte	0
 5865 03ea 00000000 		.4byte	0
 5866              	.LLST25:
 5867 03ee 00000000 		.4byte	.LVL80
 5868 03f2 0F000000 		.4byte	.LVL81-1
 5869 03f6 0100     		.2byte	0x1
 5870 03f8 51       		.byte	0x51
 5871 03f9 0F000000 		.4byte	.LVL81-1
 5872 03fd 38000000 		.4byte	.LFE22
 5873 0401 0400     		.2byte	0x4
 5874 0403 F3       		.byte	0xf3
 5875 0404 01       		.uleb128 0x1
 5876 0405 51       		.byte	0x51
 5877 0406 9F       		.byte	0x9f
 5878 0407 00000000 		.4byte	0
 5879 040b 00000000 		.4byte	0
 5880              	.LLST26:
 5881 040f 24000000 		.4byte	.LVL82
 5882 0413 31000000 		.4byte	.LVL85-1
 5883 0417 0100     		.2byte	0x1
 5884 0419 50       		.byte	0x50
 5885 041a 00000000 		.4byte	0
 5886 041e 00000000 		.4byte	0
 5887              	.LLST27:
 5888 0422 24000000 		.4byte	.LVL82
 5889 0426 32000000 		.4byte	.LVL86
 5890 042a 0100     		.2byte	0x1
 5891 042c 55       		.byte	0x55
 5892 042d 00000000 		.4byte	0
 5893 0431 00000000 		.4byte	0
 5894              	.LLST28:
 5895 0435 2A000000 		.4byte	.LVL83
 5896 0439 2C000000 		.4byte	.LVL84
 5897 043d 0100     		.2byte	0x1
 5898 043f 53       		.byte	0x53
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 167


 5899 0440 2C000000 		.4byte	.LVL84
 5900 0444 31000000 		.4byte	.LVL85-1
 5901 0448 0100     		.2byte	0x1
 5902 044a 51       		.byte	0x51
 5903 044b 00000000 		.4byte	0
 5904 044f 00000000 		.4byte	0
 5905              	.LLST29:
 5906 0453 00000000 		.4byte	.LVL87
 5907 0457 1A000000 		.4byte	.LVL90
 5908 045b 0100     		.2byte	0x1
 5909 045d 50       		.byte	0x50
 5910 045e 1A000000 		.4byte	.LVL90
 5911 0462 24000000 		.4byte	.LFE23
 5912 0466 0400     		.2byte	0x4
 5913 0468 F3       		.byte	0xf3
 5914 0469 01       		.uleb128 0x1
 5915 046a 50       		.byte	0x50
 5916 046b 9F       		.byte	0x9f
 5917 046c 00000000 		.4byte	0
 5918 0470 00000000 		.4byte	0
 5919              	.LLST30:
 5920 0474 0C000000 		.4byte	.LVL88
 5921 0478 18000000 		.4byte	.LVL89
 5922 047c 0F00     		.2byte	0xf
 5923 047e 72       		.byte	0x72
 5924 047f 00       		.sleb128 0
 5925 0480 70       		.byte	0x70
 5926 0481 00       		.sleb128 0
 5927 0482 33       		.byte	0x33
 5928 0483 1A       		.byte	0x1a
 5929 0484 08       		.byte	0x8
 5930 0485 FF       		.byte	0xff
 5931 0486 1A       		.byte	0x1a
 5932 0487 33       		.byte	0x33
 5933 0488 24       		.byte	0x24
 5934 0489 23       		.byte	0x23
 5935 048a 06       		.uleb128 0x6
 5936 048b 25       		.byte	0x25
 5937 048c 9F       		.byte	0x9f
 5938 048d 00000000 		.4byte	0
 5939 0491 00000000 		.4byte	0
 5940              	.LLST31:
 5941 0495 00000000 		.4byte	.LVL91
 5942 0499 04000000 		.4byte	.LVL92
 5943 049d 0100     		.2byte	0x1
 5944 049f 50       		.byte	0x50
 5945 04a0 04000000 		.4byte	.LVL92
 5946 04a4 14000000 		.4byte	.LFE24
 5947 04a8 0400     		.2byte	0x4
 5948 04aa F3       		.byte	0xf3
 5949 04ab 01       		.uleb128 0x1
 5950 04ac 50       		.byte	0x50
 5951 04ad 9F       		.byte	0x9f
 5952 04ae 00000000 		.4byte	0
 5953 04b2 00000000 		.4byte	0
 5954              	.LLST32:
 5955 04b6 00000000 		.4byte	.LVL93
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 168


 5956 04ba 06000000 		.4byte	.LVL94
 5957 04be 0100     		.2byte	0x1
 5958 04c0 50       		.byte	0x50
 5959 04c1 06000000 		.4byte	.LVL94
 5960 04c5 18000000 		.4byte	.LFE25
 5961 04c9 0400     		.2byte	0x4
 5962 04cb F3       		.byte	0xf3
 5963 04cc 01       		.uleb128 0x1
 5964 04cd 50       		.byte	0x50
 5965 04ce 9F       		.byte	0x9f
 5966 04cf 00000000 		.4byte	0
 5967 04d3 00000000 		.4byte	0
 5968              	.LLST33:
 5969 04d7 00000000 		.4byte	.LVL95
 5970 04db 04000000 		.4byte	.LVL96
 5971 04df 0100     		.2byte	0x1
 5972 04e1 50       		.byte	0x50
 5973 04e2 04000000 		.4byte	.LVL96
 5974 04e6 14000000 		.4byte	.LFE26
 5975 04ea 0400     		.2byte	0x4
 5976 04ec F3       		.byte	0xf3
 5977 04ed 01       		.uleb128 0x1
 5978 04ee 50       		.byte	0x50
 5979 04ef 9F       		.byte	0x9f
 5980 04f0 00000000 		.4byte	0
 5981 04f4 00000000 		.4byte	0
 5982              	.LLST34:
 5983 04f8 00000000 		.4byte	.LVL97
 5984 04fc 04000000 		.4byte	.LVL98
 5985 0500 0100     		.2byte	0x1
 5986 0502 50       		.byte	0x50
 5987 0503 04000000 		.4byte	.LVL98
 5988 0507 14000000 		.4byte	.LFE27
 5989 050b 0400     		.2byte	0x4
 5990 050d F3       		.byte	0xf3
 5991 050e 01       		.uleb128 0x1
 5992 050f 50       		.byte	0x50
 5993 0510 9F       		.byte	0x9f
 5994 0511 00000000 		.4byte	0
 5995 0515 00000000 		.4byte	0
 5996              	.LLST35:
 5997 0519 00000000 		.4byte	.LVL99
 5998 051d 04000000 		.4byte	.LVL100
 5999 0521 0100     		.2byte	0x1
 6000 0523 50       		.byte	0x50
 6001 0524 04000000 		.4byte	.LVL100
 6002 0528 14000000 		.4byte	.LFE28
 6003 052c 0400     		.2byte	0x4
 6004 052e F3       		.byte	0xf3
 6005 052f 01       		.uleb128 0x1
 6006 0530 50       		.byte	0x50
 6007 0531 9F       		.byte	0x9f
 6008 0532 00000000 		.4byte	0
 6009 0536 00000000 		.4byte	0
 6010              	.LLST36:
 6011 053a 00000000 		.4byte	.LVL102
 6012 053e 10000000 		.4byte	.LVL103
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 169


 6013 0542 0100     		.2byte	0x1
 6014 0544 50       		.byte	0x50
 6015 0545 10000000 		.4byte	.LVL103
 6016 0549 2C000000 		.4byte	.LVL106
 6017 054d 0100     		.2byte	0x1
 6018 054f 54       		.byte	0x54
 6019 0550 36000000 		.4byte	.LVL108
 6020 0554 48000000 		.4byte	.LFE31
 6021 0558 0100     		.2byte	0x1
 6022 055a 50       		.byte	0x50
 6023 055b 00000000 		.4byte	0
 6024 055f 00000000 		.4byte	0
 6025              	.LLST37:
 6026 0563 00000000 		.4byte	.LVL109
 6027 0567 08000000 		.4byte	.LVL110
 6028 056b 0100     		.2byte	0x1
 6029 056d 50       		.byte	0x50
 6030 056e 08000000 		.4byte	.LVL110
 6031 0572 14000000 		.4byte	.LFE32
 6032 0576 0400     		.2byte	0x4
 6033 0578 F3       		.byte	0xf3
 6034 0579 01       		.uleb128 0x1
 6035 057a 50       		.byte	0x50
 6036 057b 9F       		.byte	0x9f
 6037 057c 00000000 		.4byte	0
 6038 0580 00000000 		.4byte	0
 6039              	.LLST38:
 6040 0584 00000000 		.4byte	.LVL112
 6041 0588 0C000000 		.4byte	.LVL113
 6042 058c 0100     		.2byte	0x1
 6043 058e 50       		.byte	0x50
 6044 058f 0C000000 		.4byte	.LVL113
 6045 0593 0E000000 		.4byte	.LVL114
 6046 0597 0100     		.2byte	0x1
 6047 0599 54       		.byte	0x54
 6048 059a 0E000000 		.4byte	.LVL114
 6049 059e 1A000000 		.4byte	.LVL115
 6050 05a2 0400     		.2byte	0x4
 6051 05a4 F3       		.byte	0xf3
 6052 05a5 01       		.uleb128 0x1
 6053 05a6 50       		.byte	0x50
 6054 05a7 9F       		.byte	0x9f
 6055 05a8 1A000000 		.4byte	.LVL115
 6056 05ac 20000000 		.4byte	.LVL116
 6057 05b0 0100     		.2byte	0x1
 6058 05b2 50       		.byte	0x50
 6059 05b3 20000000 		.4byte	.LVL116
 6060 05b7 54000000 		.4byte	.LFE33
 6061 05bb 0100     		.2byte	0x1
 6062 05bd 54       		.byte	0x54
 6063 05be 00000000 		.4byte	0
 6064 05c2 00000000 		.4byte	0
 6065              	.LLST39:
 6066 05c6 0A000000 		.4byte	.LVL119
 6067 05ca 10000000 		.4byte	.LVL120
 6068 05ce 0200     		.2byte	0x2
 6069 05d0 30       		.byte	0x30
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 170


 6070 05d1 9F       		.byte	0x9f
 6071 05d2 10000000 		.4byte	.LVL120
 6072 05d6 12000000 		.4byte	.LVL121
 6073 05da 0200     		.2byte	0x2
 6074 05dc 31       		.byte	0x31
 6075 05dd 9F       		.byte	0x9f
 6076 05de 12000000 		.4byte	.LVL121
 6077 05e2 14000000 		.4byte	.LVL122
 6078 05e6 0200     		.2byte	0x2
 6079 05e8 32       		.byte	0x32
 6080 05e9 9F       		.byte	0x9f
 6081 05ea 14000000 		.4byte	.LVL122
 6082 05ee 16000000 		.4byte	.LVL123
 6083 05f2 0200     		.2byte	0x2
 6084 05f4 33       		.byte	0x33
 6085 05f5 9F       		.byte	0x9f
 6086 05f6 16000000 		.4byte	.LVL123
 6087 05fa 18000000 		.4byte	.LVL124
 6088 05fe 0200     		.2byte	0x2
 6089 0600 34       		.byte	0x34
 6090 0601 9F       		.byte	0x9f
 6091 0602 18000000 		.4byte	.LVL124
 6092 0606 38000000 		.4byte	.LVL129
 6093 060a 0200     		.2byte	0x2
 6094 060c 35       		.byte	0x35
 6095 060d 9F       		.byte	0x9f
 6096 060e 00000000 		.4byte	0
 6097 0612 00000000 		.4byte	0
 6098              	.LLST40:
 6099 0616 18000000 		.4byte	.LVL124
 6100 061a 1A000000 		.4byte	.LVL125
 6101 061e 0600     		.2byte	0x6
 6102 0620 03       		.byte	0x3
 6103 0621 00000000 		.4byte	CySysTickServiceCallbacks
 6104 0625 9F       		.byte	0x9f
 6105 0626 00000000 		.4byte	0
 6106 062a 00000000 		.4byte	0
 6107              	.LLST41:
 6108 062e 18000000 		.4byte	.LVL124
 6109 0632 1A000000 		.4byte	.LVL125
 6110 0636 0200     		.2byte	0x2
 6111 0638 3F       		.byte	0x3f
 6112 0639 9F       		.byte	0x9f
 6113 063a 00000000 		.4byte	0
 6114 063e 00000000 		.4byte	0
 6115              	.LLST42:
 6116 0642 18000000 		.4byte	.LVL124
 6117 0646 1A000000 		.4byte	.LVL125
 6118 064a 0200     		.2byte	0x2
 6119 064c 73       		.byte	0x73
 6120 064d 00       		.sleb128 0
 6121 064e 00000000 		.4byte	0
 6122 0652 00000000 		.4byte	0
 6123              	.LLST43:
 6124 0656 18000000 		.4byte	.LVL124
 6125 065a 3C000000 		.4byte	.LVL130
 6126 065e 0400     		.2byte	0x4
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 171


 6127 0660 40       		.byte	0x40
 6128 0661 49       		.byte	0x49
 6129 0662 24       		.byte	0x24
 6130 0663 9F       		.byte	0x9f
 6131 0664 00000000 		.4byte	0
 6132 0668 00000000 		.4byte	0
 6133              	.LLST44:
 6134 066c 1A000000 		.4byte	.LVL125
 6135 0670 26000000 		.4byte	.LVL126
 6136 0674 0200     		.2byte	0x2
 6137 0676 31       		.byte	0x31
 6138 0677 9F       		.byte	0x9f
 6139 0678 00000000 		.4byte	0
 6140 067c 00000000 		.4byte	0
 6141              	.LLST46:
 6142 0680 30000000 		.4byte	.LVL127
 6143 0684 34000000 		.4byte	.LVL128
 6144 0688 0100     		.2byte	0x1
 6145 068a 50       		.byte	0x50
 6146 068b 00000000 		.4byte	0
 6147 068f 00000000 		.4byte	0
 6148              	.LLST47:
 6149 0693 00000000 		.4byte	.LVL131
 6150 0697 0A000000 		.4byte	.LVL132
 6151 069b 0200     		.2byte	0x2
 6152 069d 30       		.byte	0x30
 6153 069e 9F       		.byte	0x9f
 6154 069f 0A000000 		.4byte	.LVL132
 6155 06a3 0E000000 		.4byte	.LVL133
 6156 06a7 0200     		.2byte	0x2
 6157 06a9 31       		.byte	0x31
 6158 06aa 9F       		.byte	0x9f
 6159 06ab 0E000000 		.4byte	.LVL133
 6160 06af 10000000 		.4byte	.LVL134
 6161 06b3 0200     		.2byte	0x2
 6162 06b5 32       		.byte	0x32
 6163 06b6 9F       		.byte	0x9f
 6164 06b7 10000000 		.4byte	.LVL134
 6165 06bb 12000000 		.4byte	.LVL135
 6166 06bf 0200     		.2byte	0x2
 6167 06c1 33       		.byte	0x33
 6168 06c2 9F       		.byte	0x9f
 6169 06c3 12000000 		.4byte	.LVL135
 6170 06c7 54000000 		.4byte	.LFE35
 6171 06cb 0200     		.2byte	0x2
 6172 06cd 35       		.byte	0x35
 6173 06ce 9F       		.byte	0x9f
 6174 06cf 00000000 		.4byte	0
 6175 06d3 00000000 		.4byte	0
 6176              	.LLST48:
 6177 06d7 12000000 		.4byte	.LVL135
 6178 06db 16000000 		.4byte	.LVL137
 6179 06df 0600     		.2byte	0x6
 6180 06e1 03       		.byte	0x3
 6181 06e2 00000000 		.4byte	CySysTickServiceCallbacks
 6182 06e6 9F       		.byte	0x9f
 6183 06e7 00000000 		.4byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 172


 6184 06eb 00000000 		.4byte	0
 6185              	.LLST49:
 6186 06ef 12000000 		.4byte	.LVL135
 6187 06f3 16000000 		.4byte	.LVL137
 6188 06f7 0200     		.2byte	0x2
 6189 06f9 3F       		.byte	0x3f
 6190 06fa 9F       		.byte	0x9f
 6191 06fb 00000000 		.4byte	0
 6192 06ff 00000000 		.4byte	0
 6193              	.LLST50:
 6194 0703 12000000 		.4byte	.LVL135
 6195 0707 14000000 		.4byte	.LVL136
 6196 070b 0500     		.2byte	0x5
 6197 070d 0C       		.byte	0xc
 6198 070e 3C000020 		.4byte	0x2000003c
 6199 0712 14000000 		.4byte	.LVL136
 6200 0716 16000000 		.4byte	.LVL137
 6201 071a 0200     		.2byte	0x2
 6202 071c 73       		.byte	0x73
 6203 071d 00       		.sleb128 0
 6204 071e 00000000 		.4byte	0
 6205 0722 00000000 		.4byte	0
 6206              	.LLST51:
 6207 0726 16000000 		.4byte	.LVL137
 6208 072a 22000000 		.4byte	.LVL138
 6209 072e 0200     		.2byte	0x2
 6210 0730 31       		.byte	0x31
 6211 0731 9F       		.byte	0x9f
 6212 0732 00000000 		.4byte	0
 6213 0736 00000000 		.4byte	0
 6214              	.LLST53:
 6215 073a 2C000000 		.4byte	.LVL139
 6216 073e 30000000 		.4byte	.LVL140
 6217 0742 0100     		.2byte	0x1
 6218 0744 50       		.byte	0x50
 6219 0745 00000000 		.4byte	0
 6220 0749 00000000 		.4byte	0
 6221              	.LLST54:
 6222 074d 00000000 		.4byte	.LVL141
 6223 0751 04000000 		.4byte	.LVL142
 6224 0755 0100     		.2byte	0x1
 6225 0757 50       		.byte	0x50
 6226 0758 04000000 		.4byte	.LVL142
 6227 075c 10000000 		.4byte	.LFE40
 6228 0760 0400     		.2byte	0x4
 6229 0762 F3       		.byte	0xf3
 6230 0763 01       		.uleb128 0x1
 6231 0764 50       		.byte	0x50
 6232 0765 9F       		.byte	0x9f
 6233 0766 00000000 		.4byte	0
 6234 076a 00000000 		.4byte	0
 6235              	.LLST55:
 6236 076e 00000000 		.4byte	.LVL145
 6237 0772 06000000 		.4byte	.LVL146
 6238 0776 0100     		.2byte	0x1
 6239 0778 50       		.byte	0x50
 6240 0779 06000000 		.4byte	.LVL146
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 173


 6241 077d 10000000 		.4byte	.LFE47
 6242 0781 0400     		.2byte	0x4
 6243 0783 F3       		.byte	0xf3
 6244 0784 01       		.uleb128 0x1
 6245 0785 50       		.byte	0x50
 6246 0786 9F       		.byte	0x9f
 6247 0787 00000000 		.4byte	0
 6248 078b 00000000 		.4byte	0
 6249              	.LLST56:
 6250 078f 00000000 		.4byte	.LVL147
 6251 0793 04000000 		.4byte	.LVL148
 6252 0797 0100     		.2byte	0x1
 6253 0799 50       		.byte	0x50
 6254 079a 04000000 		.4byte	.LVL148
 6255 079e 0C000000 		.4byte	.LFE48
 6256 07a2 0400     		.2byte	0x4
 6257 07a4 F3       		.byte	0xf3
 6258 07a5 01       		.uleb128 0x1
 6259 07a6 50       		.byte	0x50
 6260 07a7 9F       		.byte	0x9f
 6261 07a8 00000000 		.4byte	0
 6262 07ac 00000000 		.4byte	0
 6263              	.LLST57:
 6264 07b0 00000000 		.4byte	.LVL150
 6265 07b4 08000000 		.4byte	.LVL151
 6266 07b8 0100     		.2byte	0x1
 6267 07ba 50       		.byte	0x50
 6268 07bb 08000000 		.4byte	.LVL151
 6269 07bf 20000000 		.4byte	.LFE51
 6270 07c3 0400     		.2byte	0x4
 6271 07c5 F3       		.byte	0xf3
 6272 07c6 01       		.uleb128 0x1
 6273 07c7 50       		.byte	0x50
 6274 07c8 9F       		.byte	0x9f
 6275 07c9 00000000 		.4byte	0
 6276 07cd 00000000 		.4byte	0
 6277              	.LLST58:
 6278 07d1 0A000000 		.4byte	.LVL152
 6279 07d5 12000000 		.4byte	.LVL153
 6280 07d9 0100     		.2byte	0x1
 6281 07db 53       		.byte	0x53
 6282 07dc 12000000 		.4byte	.LVL153
 6283 07e0 20000000 		.4byte	.LFE51
 6284 07e4 0100     		.2byte	0x1
 6285 07e6 50       		.byte	0x50
 6286 07e7 00000000 		.4byte	0
 6287 07eb 00000000 		.4byte	0
 6288              	.LLST59:
 6289 07ef 00000000 		.4byte	.LVL154
 6290 07f3 08000000 		.4byte	.LVL155
 6291 07f7 0100     		.2byte	0x1
 6292 07f9 50       		.byte	0x50
 6293 07fa 08000000 		.4byte	.LVL155
 6294 07fe 20000000 		.4byte	.LFE52
 6295 0802 0400     		.2byte	0x4
 6296 0804 F3       		.byte	0xf3
 6297 0805 01       		.uleb128 0x1
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 174


 6298 0806 50       		.byte	0x50
 6299 0807 9F       		.byte	0x9f
 6300 0808 00000000 		.4byte	0
 6301 080c 00000000 		.4byte	0
 6302              	.LLST60:
 6303 0810 0A000000 		.4byte	.LVL156
 6304 0814 12000000 		.4byte	.LVL157
 6305 0818 0100     		.2byte	0x1
 6306 081a 53       		.byte	0x53
 6307 081b 12000000 		.4byte	.LVL157
 6308 081f 20000000 		.4byte	.LFE52
 6309 0823 0100     		.2byte	0x1
 6310 0825 50       		.byte	0x50
 6311 0826 00000000 		.4byte	0
 6312 082a 00000000 		.4byte	0
 6313              	.LLST61:
 6314 082e 00000000 		.4byte	.LVL158
 6315 0832 08000000 		.4byte	.LVL159
 6316 0836 0100     		.2byte	0x1
 6317 0838 50       		.byte	0x50
 6318 0839 08000000 		.4byte	.LVL159
 6319 083d 20000000 		.4byte	.LFE53
 6320 0841 0400     		.2byte	0x4
 6321 0843 F3       		.byte	0xf3
 6322 0844 01       		.uleb128 0x1
 6323 0845 50       		.byte	0x50
 6324 0846 9F       		.byte	0x9f
 6325 0847 00000000 		.4byte	0
 6326 084b 00000000 		.4byte	0
 6327              	.LLST62:
 6328 084f 0A000000 		.4byte	.LVL160
 6329 0853 12000000 		.4byte	.LVL161
 6330 0857 0100     		.2byte	0x1
 6331 0859 53       		.byte	0x53
 6332 085a 12000000 		.4byte	.LVL161
 6333 085e 20000000 		.4byte	.LFE53
 6334 0862 0100     		.2byte	0x1
 6335 0864 50       		.byte	0x50
 6336 0865 00000000 		.4byte	0
 6337 0869 00000000 		.4byte	0
 6338              	.LLST63:
 6339 086d 00000000 		.4byte	.LVL162
 6340 0871 0C000000 		.4byte	.LVL163
 6341 0875 0100     		.2byte	0x1
 6342 0877 50       		.byte	0x50
 6343 0878 0C000000 		.4byte	.LVL163
 6344 087c 0E000000 		.4byte	.LVL164
 6345 0880 0400     		.2byte	0x4
 6346 0882 F3       		.byte	0xf3
 6347 0883 01       		.uleb128 0x1
 6348 0884 50       		.byte	0x50
 6349 0885 9F       		.byte	0x9f
 6350 0886 0E000000 		.4byte	.LVL164
 6351 088a 10000000 		.4byte	.LVL165
 6352 088e 0100     		.2byte	0x1
 6353 0890 50       		.byte	0x50
 6354 0891 10000000 		.4byte	.LVL165
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 175


 6355 0895 24000000 		.4byte	.LVL169
 6356 0899 0400     		.2byte	0x4
 6357 089b F3       		.byte	0xf3
 6358 089c 01       		.uleb128 0x1
 6359 089d 50       		.byte	0x50
 6360 089e 9F       		.byte	0x9f
 6361 089f 24000000 		.4byte	.LVL169
 6362 08a3 26000000 		.4byte	.LVL170
 6363 08a7 0100     		.2byte	0x1
 6364 08a9 50       		.byte	0x50
 6365 08aa 26000000 		.4byte	.LVL170
 6366 08ae 28000000 		.4byte	.LVL171
 6367 08b2 0400     		.2byte	0x4
 6368 08b4 F3       		.byte	0xf3
 6369 08b5 01       		.uleb128 0x1
 6370 08b6 50       		.byte	0x50
 6371 08b7 9F       		.byte	0x9f
 6372 08b8 28000000 		.4byte	.LVL171
 6373 08bc 2A000000 		.4byte	.LVL172
 6374 08c0 0100     		.2byte	0x1
 6375 08c2 50       		.byte	0x50
 6376 08c3 2A000000 		.4byte	.LVL172
 6377 08c7 3C000000 		.4byte	.LFE54
 6378 08cb 0400     		.2byte	0x4
 6379 08cd F3       		.byte	0xf3
 6380 08ce 01       		.uleb128 0x1
 6381 08cf 50       		.byte	0x50
 6382 08d0 9F       		.byte	0x9f
 6383 08d1 00000000 		.4byte	0
 6384 08d5 00000000 		.4byte	0
 6385              	.LLST64:
 6386 08d9 00000000 		.4byte	.LVL162
 6387 08dd 0C000000 		.4byte	.LVL163
 6388 08e1 0100     		.2byte	0x1
 6389 08e3 51       		.byte	0x51
 6390 08e4 0C000000 		.4byte	.LVL163
 6391 08e8 0E000000 		.4byte	.LVL164
 6392 08ec 0400     		.2byte	0x4
 6393 08ee F3       		.byte	0xf3
 6394 08ef 01       		.uleb128 0x1
 6395 08f0 51       		.byte	0x51
 6396 08f1 9F       		.byte	0x9f
 6397 08f2 0E000000 		.4byte	.LVL164
 6398 08f6 16000000 		.4byte	.LVL166
 6399 08fa 0100     		.2byte	0x1
 6400 08fc 51       		.byte	0x51
 6401 08fd 16000000 		.4byte	.LVL166
 6402 0901 24000000 		.4byte	.LVL169
 6403 0905 0400     		.2byte	0x4
 6404 0907 F3       		.byte	0xf3
 6405 0908 01       		.uleb128 0x1
 6406 0909 51       		.byte	0x51
 6407 090a 9F       		.byte	0x9f
 6408 090b 24000000 		.4byte	.LVL169
 6409 090f 3C000000 		.4byte	.LFE54
 6410 0913 0100     		.2byte	0x1
 6411 0915 51       		.byte	0x51
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 176


 6412 0916 00000000 		.4byte	0
 6413 091a 00000000 		.4byte	0
 6414              	.LLST65:
 6415 091e 18000000 		.4byte	.LVL167
 6416 0922 20000000 		.4byte	.LVL168
 6417 0926 0100     		.2byte	0x1
 6418 0928 53       		.byte	0x53
 6419 0929 20000000 		.4byte	.LVL168
 6420 092d 24000000 		.4byte	.LVL169
 6421 0931 0100     		.2byte	0x1
 6422 0933 51       		.byte	0x51
 6423 0934 00000000 		.4byte	0
 6424 0938 00000000 		.4byte	0
 6425              		.section	.debug_aranges,"",%progbits
 6426 0000 CC010000 		.4byte	0x1cc
 6427 0004 0200     		.2byte	0x2
 6428 0006 00000000 		.4byte	.Ldebug_info0
 6429 000a 04       		.byte	0x4
 6430 000b 00       		.byte	0
 6431 000c 0000     		.2byte	0
 6432 000e 0000     		.2byte	0
 6433 0010 00000000 		.4byte	.LFB49
 6434 0014 28000000 		.4byte	.LFE49-.LFB49
 6435 0018 00000000 		.4byte	.LFB55
 6436 001c 10010000 		.4byte	.LFE55-.LFB55
 6437 0020 00000000 		.4byte	.LFB1
 6438 0024 14000000 		.4byte	.LFE1-.LFB1
 6439 0028 00000000 		.4byte	.LFB2
 6440 002c 24000000 		.4byte	.LFE2-.LFB2
 6441 0030 00000000 		.4byte	.LFB3
 6442 0034 10000000 		.4byte	.LFE3-.LFB3
 6443 0038 00000000 		.4byte	.LFB4
 6444 003c 14000000 		.4byte	.LFE4-.LFB4
 6445 0040 00000000 		.4byte	.LFB5
 6446 0044 10000000 		.4byte	.LFE5-.LFB5
 6447 0048 00000000 		.4byte	.LFB6
 6448 004c 20000000 		.4byte	.LFE6-.LFB6
 6449 0050 00000000 		.4byte	.LFB7
 6450 0054 38000000 		.4byte	.LFE7-.LFB7
 6451 0058 00000000 		.4byte	.LFB8
 6452 005c 18000000 		.4byte	.LFE8-.LFB8
 6453 0060 00000000 		.4byte	.LFB9
 6454 0064 2C000000 		.4byte	.LFE9-.LFB9
 6455 0068 00000000 		.4byte	.LFB10
 6456 006c 98000000 		.4byte	.LFE10-.LFB10
 6457 0070 00000000 		.4byte	.LFB11
 6458 0074 50000000 		.4byte	.LFE11-.LFB11
 6459 0078 00000000 		.4byte	.LFB12
 6460 007c 20000000 		.4byte	.LFE12-.LFB12
 6461 0080 00000000 		.4byte	.LFB13
 6462 0084 10000000 		.4byte	.LFE13-.LFB13
 6463 0088 00000000 		.4byte	.LFB14
 6464 008c 0C000000 		.4byte	.LFE14-.LFB14
 6465 0090 00000000 		.4byte	.LFB15
 6466 0094 14000000 		.4byte	.LFE15-.LFB15
 6467 0098 00000000 		.4byte	.LFB16
 6468 009c 10000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 177


 6469 00a0 00000000 		.4byte	.LFB17
 6470 00a4 0C000000 		.4byte	.LFE17-.LFB17
 6471 00a8 00000000 		.4byte	.LFB18
 6472 00ac 0E000000 		.4byte	.LFE18-.LFB18
 6473 00b0 00000000 		.4byte	.LFB19
 6474 00b4 0E000000 		.4byte	.LFE19-.LFB19
 6475 00b8 00000000 		.4byte	.LFB20
 6476 00bc 10000000 		.4byte	.LFE20-.LFB20
 6477 00c0 00000000 		.4byte	.LFB21
 6478 00c4 10000000 		.4byte	.LFE21-.LFB21
 6479 00c8 00000000 		.4byte	.LFB22
 6480 00cc 38000000 		.4byte	.LFE22-.LFB22
 6481 00d0 00000000 		.4byte	.LFB23
 6482 00d4 24000000 		.4byte	.LFE23-.LFB23
 6483 00d8 00000000 		.4byte	.LFB24
 6484 00dc 14000000 		.4byte	.LFE24-.LFB24
 6485 00e0 00000000 		.4byte	.LFB25
 6486 00e4 18000000 		.4byte	.LFE25-.LFB25
 6487 00e8 00000000 		.4byte	.LFB26
 6488 00ec 14000000 		.4byte	.LFE26-.LFB26
 6489 00f0 00000000 		.4byte	.LFB27
 6490 00f4 14000000 		.4byte	.LFE27-.LFB27
 6491 00f8 00000000 		.4byte	.LFB28
 6492 00fc 14000000 		.4byte	.LFE28-.LFB28
 6493 0100 00000000 		.4byte	.LFB29
 6494 0104 04000000 		.4byte	.LFE29-.LFB29
 6495 0108 00000000 		.4byte	.LFB30
 6496 010c 18000000 		.4byte	.LFE30-.LFB30
 6497 0110 00000000 		.4byte	.LFB31
 6498 0114 48000000 		.4byte	.LFE31-.LFB31
 6499 0118 00000000 		.4byte	.LFB32
 6500 011c 14000000 		.4byte	.LFE32-.LFB32
 6501 0120 00000000 		.4byte	.LFB33
 6502 0124 54000000 		.4byte	.LFE33-.LFB33
 6503 0128 00000000 		.4byte	.LFB34
 6504 012c 6C000000 		.4byte	.LFE34-.LFB34
 6505 0130 00000000 		.4byte	.LFB35
 6506 0134 54000000 		.4byte	.LFE35-.LFB35
 6507 0138 00000000 		.4byte	.LFB36
 6508 013c 18000000 		.4byte	.LFE36-.LFB36
 6509 0140 00000000 		.4byte	.LFB37
 6510 0144 10000000 		.4byte	.LFE37-.LFB37
 6511 0148 00000000 		.4byte	.LFB38
 6512 014c 10000000 		.4byte	.LFE38-.LFB38
 6513 0150 00000000 		.4byte	.LFB39
 6514 0154 10000000 		.4byte	.LFE39-.LFB39
 6515 0158 00000000 		.4byte	.LFB40
 6516 015c 10000000 		.4byte	.LFE40-.LFB40
 6517 0160 00000000 		.4byte	.LFB41
 6518 0164 10000000 		.4byte	.LFE41-.LFB41
 6519 0168 00000000 		.4byte	.LFB42
 6520 016c 10000000 		.4byte	.LFE42-.LFB42
 6521 0170 00000000 		.4byte	.LFB43
 6522 0174 20000000 		.4byte	.LFE43-.LFB43
 6523 0178 00000000 		.4byte	.LFB44
 6524 017c 10000000 		.4byte	.LFE44-.LFB44
 6525 0180 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 178


 6526 0184 10000000 		.4byte	.LFE45-.LFB45
 6527 0188 00000000 		.4byte	.LFB46
 6528 018c 0C000000 		.4byte	.LFE46-.LFB46
 6529 0190 00000000 		.4byte	.LFB47
 6530 0194 10000000 		.4byte	.LFE47-.LFB47
 6531 0198 00000000 		.4byte	.LFB48
 6532 019c 0C000000 		.4byte	.LFE48-.LFB48
 6533 01a0 00000000 		.4byte	.LFB50
 6534 01a4 74000000 		.4byte	.LFE50-.LFB50
 6535 01a8 00000000 		.4byte	.LFB51
 6536 01ac 20000000 		.4byte	.LFE51-.LFB51
 6537 01b0 00000000 		.4byte	.LFB52
 6538 01b4 20000000 		.4byte	.LFE52-.LFB52
 6539 01b8 00000000 		.4byte	.LFB53
 6540 01bc 20000000 		.4byte	.LFE53-.LFB53
 6541 01c0 00000000 		.4byte	.LFB54
 6542 01c4 3C000000 		.4byte	.LFE54-.LFB54
 6543 01c8 00000000 		.4byte	0
 6544 01cc 00000000 		.4byte	0
 6545              		.section	.debug_ranges,"",%progbits
 6546              	.Ldebug_ranges0:
 6547 0000 00000000 		.4byte	.LBB38
 6548 0004 02000000 		.4byte	.LBE38
 6549 0008 04000000 		.4byte	.LBB41
 6550 000c 06000000 		.4byte	.LBE41
 6551 0010 00000000 		.4byte	0
 6552 0014 00000000 		.4byte	0
 6553 0018 00000000 		.4byte	.LBB47
 6554 001c 06000000 		.4byte	.LBE47
 6555 0020 06000000 		.4byte	.LBB50
 6556 0024 0A000000 		.4byte	.LBE50
 6557 0028 00000000 		.4byte	0
 6558 002c 00000000 		.4byte	0
 6559 0030 0A000000 		.4byte	.LBB51
 6560 0034 0C000000 		.4byte	.LBE51
 6561 0038 0E000000 		.4byte	.LBB54
 6562 003c 14000000 		.4byte	.LBE54
 6563 0040 00000000 		.4byte	0
 6564 0044 00000000 		.4byte	0
 6565 0048 0A000000 		.4byte	.LBB81
 6566 004c 0E000000 		.4byte	.LBE81
 6567 0050 18000000 		.4byte	.LBB84
 6568 0054 1A000000 		.4byte	.LBE84
 6569 0058 00000000 		.4byte	0
 6570 005c 00000000 		.4byte	0
 6571 0060 1A000000 		.4byte	.LBB85
 6572 0064 22000000 		.4byte	.LBE85
 6573 0068 24000000 		.4byte	.LBB90
 6574 006c 26000000 		.4byte	.LBE90
 6575 0070 00000000 		.4byte	0
 6576 0074 00000000 		.4byte	0
 6577 0078 3C000000 		.4byte	.LBB95
 6578 007c 40000000 		.4byte	.LBE95
 6579 0080 40000000 		.4byte	.LBB102
 6580 0084 4E000000 		.4byte	.LBE102
 6581 0088 00000000 		.4byte	0
 6582 008c 00000000 		.4byte	0
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 179


 6583 0090 3C000000 		.4byte	.LBB97
 6584 0094 40000000 		.4byte	.LBE97
 6585 0098 40000000 		.4byte	.LBB100
 6586 009c 46000000 		.4byte	.LBE100
 6587 00a0 00000000 		.4byte	0
 6588 00a4 00000000 		.4byte	0
 6589 00a8 06000000 		.4byte	.LBB113
 6590 00ac 08000000 		.4byte	.LBE113
 6591 00b0 12000000 		.4byte	.LBB117
 6592 00b4 14000000 		.4byte	.LBE117
 6593 00b8 14000000 		.4byte	.LBB118
 6594 00bc 16000000 		.4byte	.LBE118
 6595 00c0 00000000 		.4byte	0
 6596 00c4 00000000 		.4byte	0
 6597 00c8 16000000 		.4byte	.LBB119
 6598 00cc 1E000000 		.4byte	.LBE119
 6599 00d0 20000000 		.4byte	.LBB124
 6600 00d4 22000000 		.4byte	.LBE124
 6601 00d8 00000000 		.4byte	0
 6602 00dc 00000000 		.4byte	0
 6603 00e0 00000000 		.4byte	.LBB129
 6604 00e4 04000000 		.4byte	.LBE129
 6605 00e8 04000000 		.4byte	.LBB132
 6606 00ec 0A000000 		.4byte	.LBE132
 6607 00f0 00000000 		.4byte	0
 6608 00f4 00000000 		.4byte	0
 6609 00f8 00000000 		.4byte	.LBB135
 6610 00fc 02000000 		.4byte	.LBE135
 6611 0100 10000000 		.4byte	.LBB138
 6612 0104 20000000 		.4byte	.LBE138
 6613 0108 00000000 		.4byte	0
 6614 010c 00000000 		.4byte	0
 6615 0110 00000000 		.4byte	.LFB49
 6616 0114 28000000 		.4byte	.LFE49
 6617 0118 00000000 		.4byte	.LFB55
 6618 011c 10010000 		.4byte	.LFE55
 6619 0120 00000000 		.4byte	.LFB1
 6620 0124 14000000 		.4byte	.LFE1
 6621 0128 00000000 		.4byte	.LFB2
 6622 012c 24000000 		.4byte	.LFE2
 6623 0130 00000000 		.4byte	.LFB3
 6624 0134 10000000 		.4byte	.LFE3
 6625 0138 00000000 		.4byte	.LFB4
 6626 013c 14000000 		.4byte	.LFE4
 6627 0140 00000000 		.4byte	.LFB5
 6628 0144 10000000 		.4byte	.LFE5
 6629 0148 00000000 		.4byte	.LFB6
 6630 014c 20000000 		.4byte	.LFE6
 6631 0150 00000000 		.4byte	.LFB7
 6632 0154 38000000 		.4byte	.LFE7
 6633 0158 00000000 		.4byte	.LFB8
 6634 015c 18000000 		.4byte	.LFE8
 6635 0160 00000000 		.4byte	.LFB9
 6636 0164 2C000000 		.4byte	.LFE9
 6637 0168 00000000 		.4byte	.LFB10
 6638 016c 98000000 		.4byte	.LFE10
 6639 0170 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 180


 6640 0174 50000000 		.4byte	.LFE11
 6641 0178 00000000 		.4byte	.LFB12
 6642 017c 20000000 		.4byte	.LFE12
 6643 0180 00000000 		.4byte	.LFB13
 6644 0184 10000000 		.4byte	.LFE13
 6645 0188 00000000 		.4byte	.LFB14
 6646 018c 0C000000 		.4byte	.LFE14
 6647 0190 00000000 		.4byte	.LFB15
 6648 0194 14000000 		.4byte	.LFE15
 6649 0198 00000000 		.4byte	.LFB16
 6650 019c 10000000 		.4byte	.LFE16
 6651 01a0 00000000 		.4byte	.LFB17
 6652 01a4 0C000000 		.4byte	.LFE17
 6653 01a8 00000000 		.4byte	.LFB18
 6654 01ac 0E000000 		.4byte	.LFE18
 6655 01b0 00000000 		.4byte	.LFB19
 6656 01b4 0E000000 		.4byte	.LFE19
 6657 01b8 00000000 		.4byte	.LFB20
 6658 01bc 10000000 		.4byte	.LFE20
 6659 01c0 00000000 		.4byte	.LFB21
 6660 01c4 10000000 		.4byte	.LFE21
 6661 01c8 00000000 		.4byte	.LFB22
 6662 01cc 38000000 		.4byte	.LFE22
 6663 01d0 00000000 		.4byte	.LFB23
 6664 01d4 24000000 		.4byte	.LFE23
 6665 01d8 00000000 		.4byte	.LFB24
 6666 01dc 14000000 		.4byte	.LFE24
 6667 01e0 00000000 		.4byte	.LFB25
 6668 01e4 18000000 		.4byte	.LFE25
 6669 01e8 00000000 		.4byte	.LFB26
 6670 01ec 14000000 		.4byte	.LFE26
 6671 01f0 00000000 		.4byte	.LFB27
 6672 01f4 14000000 		.4byte	.LFE27
 6673 01f8 00000000 		.4byte	.LFB28
 6674 01fc 14000000 		.4byte	.LFE28
 6675 0200 00000000 		.4byte	.LFB29
 6676 0204 04000000 		.4byte	.LFE29
 6677 0208 00000000 		.4byte	.LFB30
 6678 020c 18000000 		.4byte	.LFE30
 6679 0210 00000000 		.4byte	.LFB31
 6680 0214 48000000 		.4byte	.LFE31
 6681 0218 00000000 		.4byte	.LFB32
 6682 021c 14000000 		.4byte	.LFE32
 6683 0220 00000000 		.4byte	.LFB33
 6684 0224 54000000 		.4byte	.LFE33
 6685 0228 00000000 		.4byte	.LFB34
 6686 022c 6C000000 		.4byte	.LFE34
 6687 0230 00000000 		.4byte	.LFB35
 6688 0234 54000000 		.4byte	.LFE35
 6689 0238 00000000 		.4byte	.LFB36
 6690 023c 18000000 		.4byte	.LFE36
 6691 0240 00000000 		.4byte	.LFB37
 6692 0244 10000000 		.4byte	.LFE37
 6693 0248 00000000 		.4byte	.LFB38
 6694 024c 10000000 		.4byte	.LFE38
 6695 0250 00000000 		.4byte	.LFB39
 6696 0254 10000000 		.4byte	.LFE39
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 181


 6697 0258 00000000 		.4byte	.LFB40
 6698 025c 10000000 		.4byte	.LFE40
 6699 0260 00000000 		.4byte	.LFB41
 6700 0264 10000000 		.4byte	.LFE41
 6701 0268 00000000 		.4byte	.LFB42
 6702 026c 10000000 		.4byte	.LFE42
 6703 0270 00000000 		.4byte	.LFB43
 6704 0274 20000000 		.4byte	.LFE43
 6705 0278 00000000 		.4byte	.LFB44
 6706 027c 10000000 		.4byte	.LFE44
 6707 0280 00000000 		.4byte	.LFB45
 6708 0284 10000000 		.4byte	.LFE45
 6709 0288 00000000 		.4byte	.LFB46
 6710 028c 0C000000 		.4byte	.LFE46
 6711 0290 00000000 		.4byte	.LFB47
 6712 0294 10000000 		.4byte	.LFE47
 6713 0298 00000000 		.4byte	.LFB48
 6714 029c 0C000000 		.4byte	.LFE48
 6715 02a0 00000000 		.4byte	.LFB50
 6716 02a4 74000000 		.4byte	.LFE50
 6717 02a8 00000000 		.4byte	.LFB51
 6718 02ac 20000000 		.4byte	.LFE51
 6719 02b0 00000000 		.4byte	.LFB52
 6720 02b4 20000000 		.4byte	.LFE52
 6721 02b8 00000000 		.4byte	.LFB53
 6722 02bc 20000000 		.4byte	.LFE53
 6723 02c0 00000000 		.4byte	.LFB54
 6724 02c4 3C000000 		.4byte	.LFE54
 6725 02c8 00000000 		.4byte	0
 6726 02cc 00000000 		.4byte	0
 6727              		.section	.debug_line,"",%progbits
 6728              	.Ldebug_line0:
 6729 0000 61060000 		.section	.debug_str,"MS",%progbits,1
 6729      02006700 
 6729      00000201 
 6729      FB0E0D00 
 6729      01010101 
 6730              	.LASF42:
 6731 0000 72616D56 		.ascii	"ramVectorTable\000"
 6731      6563746F 
 6731      72546162 
 6731      6C6500
 6732              	.LASF10:
 6733 000f 75696E74 		.ascii	"uint16\000"
 6733      313600
 6734              	.LASF68:
 6735 0016 696E7453 		.ascii	"intState\000"
 6735      74617465 
 6735      00
 6736              	.LASF47:
 6737 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6737      73436C6B 
 6737      57726974 
 6737      65486663 
 6737      6C6B4469 
 6738              	.LASF114:
 6739 0038 43795379 		.ascii	"CySysClkPumpConfig\000"
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 182


 6739      73436C6B 
 6739      50756D70 
 6739      436F6E66 
 6739      696700
 6740              	.LASF41:
 6741 004b 6F6C6449 		.ascii	"oldIsr\000"
 6741      737200
 6742              	.LASF96:
 6743 0052 72657456 		.ascii	"retVal\000"
 6743      616C00
 6744              	.LASF67:
 6745 0059 43794469 		.ascii	"CyDisableInts\000"
 6745      7361626C 
 6745      65496E74 
 6745      7300
 6746              	.LASF7:
 6747 0067 6C6F6E67 		.ascii	"long long unsigned int\000"
 6747      206C6F6E 
 6747      6720756E 
 6747      7369676E 
 6747      65642069 
 6748              	.LASF56:
 6749 007e 70617261 		.ascii	"parameters\000"
 6749      6D657465 
 6749      727300
 6750              	.LASF69:
 6751 0089 4379456E 		.ascii	"CyEnableInts\000"
 6751      61626C65 
 6751      496E7473 
 6751      00
 6752              	.LASF105:
 6753 0096 696E7465 		.ascii	"interfaceNumber\000"
 6753      72666163 
 6753      654E756D 
 6753      62657200 
 6754              	.LASF84:
 6755 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 6755      66747761 
 6755      72655265 
 6755      73657400 
 6756              	.LASF30:
 6757 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6757      73546963 
 6757      6B456E61 
 6757      626C6549 
 6757      6E746572 
 6758              	.LASF79:
 6759 00cf 4379496E 		.ascii	"CyIntGetState\000"
 6759      74476574 
 6759      53746174 
 6759      6500
 6760              	.LASF120:
 6761 00dd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6761      43313120 
 6761      352E342E 
 6761      31203230 
 6761      31363036 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 183


 6762 0110 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6762      20726576 
 6762      6973696F 
 6762      6E203233 
 6762      37373135 
 6763 0143 33202D66 		.ascii	"3 -ffunction-sections -ffat-lto-objects\000"
 6763      66756E63 
 6763      74696F6E 
 6763      2D736563 
 6763      74696F6E 
 6764              	.LASF6:
 6765 016b 6C6F6E67 		.ascii	"long long int\000"
 6765      206C6F6E 
 6765      6720696E 
 6765      7400
 6766              	.LASF0:
 6767 0179 7369676E 		.ascii	"signed char\000"
 6767      65642063 
 6767      68617200 
 6768              	.LASF21:
 6769 0185 66726571 		.ascii	"freq\000"
 6769      00
 6770              	.LASF85:
 6771 018a 43794465 		.ascii	"CyDelayFreq\000"
 6771      6C617946 
 6771      72657100 
 6772              	.LASF22:
 6773 0196 696E7465 		.ascii	"interruptState\000"
 6773      72727570 
 6773      74537461 
 6773      746500
 6774              	.LASF24:
 6775 01a5 6C664C69 		.ascii	"lfLimit\000"
 6775      6D697400 
 6776              	.LASF91:
 6777 01ad 43795379 		.ascii	"CySysTickGetReload\000"
 6777      73546963 
 6777      6B476574 
 6777      52656C6F 
 6777      616400
 6778              	.LASF34:
 6779 01c0 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6779      73436C6B 
 6779      496D6F47 
 6779      65745763 
 6779      6F4C6F63 
 6780              	.LASF58:
 6781 01d6 77636F4C 		.ascii	"wcoLock\000"
 6781      6F636B00 
 6782              	.LASF4:
 6783 01de 6C6F6E67 		.ascii	"long int\000"
 6783      20696E74 
 6783      00
 6784              	.LASF80:
 6785 01e7 4379496E 		.ascii	"CyIntDisable\000"
 6785      74446973 
 6785      61626C65 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 184


 6785      00
 6786              	.LASF57:
 6787 01f4 72656756 		.ascii	"regValues\000"
 6787      616C7565 
 6787      7300
 6788              	.LASF49:
 6789 01fe 43795379 		.ascii	"CySysEnablePumpClock\000"
 6789      73456E61 
 6789      626C6550 
 6789      756D7043 
 6789      6C6F636B 
 6790              	.LASF9:
 6791 0213 75696E74 		.ascii	"uint8\000"
 6791      3800
 6792              	.LASF108:
 6793 0219 63796465 		.ascii	"cydelayFreqKhz\000"
 6793      6C617946 
 6793      7265714B 
 6793      687A00
 6794              	.LASF29:
 6795 0228 43794465 		.ascii	"CyDelayUs\000"
 6795      6C617955 
 6795      7300
 6796              	.LASF13:
 6797 0232 646F7562 		.ascii	"double\000"
 6797      6C6500
 6798              	.LASF76:
 6799 0239 73686966 		.ascii	"shift\000"
 6799      7400
 6800              	.LASF27:
 6801 023f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 6801      734C7664 
 6801      436C6561 
 6801      72496E74 
 6801      65727275 
 6802              	.LASF11:
 6803 0256 75696E74 		.ascii	"uint32\000"
 6803      333200
 6804              	.LASF70:
 6805 025d 6D61736B 		.ascii	"mask\000"
 6805      00
 6806              	.LASF63:
 6807 0262 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6807      73436C6B 
 6807      47657453 
 6807      7973636C 
 6807      6B536F75 
 6808              	.LASF28:
 6809 027a 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6809      73436C6B 
 6809      496D6F45 
 6809      6E61626C 
 6809      6557636F 
 6810              	.LASF77:
 6811 0293 4379496E 		.ascii	"CyIntGetPriority\000"
 6811      74476574 
 6811      5072696F 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 185


 6811      72697479 
 6811      00
 6812              	.LASF110:
 6813 02a4 63796465 		.ascii	"cydelay32kMs\000"
 6813      6C617933 
 6813      326B4D73 
 6813      00
 6814              	.LASF86:
 6815 02b1 43795379 		.ascii	"CySysTickInit\000"
 6815      73546963 
 6815      6B496E69 
 6815      7400
 6816              	.LASF38:
 6817 02bf 76616C75 		.ascii	"value\000"
 6817      6500
 6818              	.LASF33:
 6819 02c5 636C6F63 		.ascii	"clockSource\000"
 6819      6B536F75 
 6819      72636500 
 6820              	.LASF98:
 6821 02d1 43794765 		.ascii	"CyGetUniqueId\000"
 6821      74556E69 
 6821      71756549 
 6821      6400
 6822              	.LASF35:
 6823 02df 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6823      73546963 
 6823      6B476574 
 6823      436F756E 
 6823      74466C61 
 6824              	.LASF8:
 6825 02f5 756E7369 		.ascii	"unsigned int\000"
 6825      676E6564 
 6825      20696E74 
 6825      00
 6826              	.LASF122:
 6827 0302 433A5C55 		.ascii	"C:\\Users\\AfdhalAtiffTan\\Documents\\PSoC Creator\\"
 6827      73657273 
 6827      5C416664 
 6827      68616C41 
 6827      74696666 
 6828 0331 736D6172 		.ascii	"smart_winch_prototype\\Workspace01\\Prototype.cydsn"
 6828      745F7769 
 6828      6E63685F 
 6828      70726F74 
 6828      6F747970 
 6829 0362 00       		.ascii	"\000"
 6830              	.LASF36:
 6831 0363 43795379 		.ascii	"CySysTickClear\000"
 6831      73546963 
 6831      6B436C65 
 6831      617200
 6832              	.LASF5:
 6833 0372 6C6F6E67 		.ascii	"long unsigned int\000"
 6833      20756E73 
 6833      69676E65 
 6833      6420696E 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 186


 6833      7400
 6834              	.LASF90:
 6835 0384 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 6835      734C7664 
 6835      47657449 
 6835      6E746572 
 6835      72757074 
 6836              	.LASF46:
 6837 039f 43795379 		.ascii	"CySysClkImoStop\000"
 6837      73436C6B 
 6837      496D6F53 
 6837      746F7000 
 6838              	.LASF116:
 6839 03af 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6839      74657243 
 6839      72697469 
 6839      63616C53 
 6839      65637469 
 6840              	.LASF81:
 6841 03c6 4379496E 		.ascii	"CyIntSetPending\000"
 6841      74536574 
 6841      50656E64 
 6841      696E6700 
 6842              	.LASF97:
 6843 03d6 43795379 		.ascii	"CySysTickGetCallback\000"
 6843      73546963 
 6843      6B476574 
 6843      43616C6C 
 6843      6261636B 
 6844              	.LASF64:
 6845 03eb 43795379 		.ascii	"CySysGetResetReason\000"
 6845      73476574 
 6845      52657365 
 6845      74526561 
 6845      736F6E00 
 6846              	.LASF3:
 6847 03ff 73686F72 		.ascii	"short unsigned int\000"
 6847      7420756E 
 6847      7369676E 
 6847      65642069 
 6847      6E7400
 6848              	.LASF23:
 6849 0412 72656754 		.ascii	"regTmp\000"
 6849      6D7000
 6850              	.LASF31:
 6851 0419 43795379 		.ascii	"CySysTickSetClockSource\000"
 6851      73546963 
 6851      6B536574 
 6851      436C6F63 
 6851      6B536F75 
 6852              	.LASF72:
 6853 0431 4379496E 		.ascii	"CyIntSetVector\000"
 6853      74536574 
 6853      56656374 
 6853      6F7200
 6854              	.LASF39:
 6855 0440 6E756D62 		.ascii	"number\000"
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 187


 6855      657200
 6856              	.LASF75:
 6857 0447 7072696F 		.ascii	"priority\000"
 6857      72697479 
 6857      00
 6858              	.LASF55:
 6859 0450 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6859      73436C6B 
 6859      57726974 
 6859      65496D6F 
 6859      46726571 
 6860              	.LASF102:
 6861 0465 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6861      73536574 
 6861      466C6173 
 6861      68416363 
 6861      65737341 
 6862              	.LASF124:
 6863 0484 4379496E 		.ascii	"CyIntSetSysVector\000"
 6863      74536574 
 6863      53797356 
 6863      6563746F 
 6863      7200
 6864              	.LASF26:
 6865 0496 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6865      73436C6B 
 6865      496D6F44 
 6865      69736162 
 6865      6C655763 
 6866              	.LASF16:
 6867 04b0 72656733 		.ascii	"reg32\000"
 6867      3200
 6868              	.LASF87:
 6869 04b6 43795379 		.ascii	"CySysTickStart\000"
 6869      73546963 
 6869      6B537461 
 6869      727400
 6870              	.LASF66:
 6871 04c5 72657475 		.ascii	"returnStatus\000"
 6871      726E5374 
 6871      61747573 
 6871      00
 6872              	.LASF101:
 6873 04d2 736F7572 		.ascii	"source\000"
 6873      636500
 6874              	.LASF19:
 6875 04d9 73697A65 		.ascii	"sizetype\000"
 6875      74797065 
 6875      00
 6876              	.LASF111:
 6877 04e2 43795379 		.ascii	"CySysTickInitVar\000"
 6877      73546963 
 6877      6B496E69 
 6877      74566172 
 6877      00
 6878              	.LASF104:
 6879 04f3 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 188


 6879      73536574 
 6879      50657269 
 6879      70686572 
 6879      616C4163 
 6880              	.LASF82:
 6881 0517 4379496E 		.ascii	"CyIntClearPending\000"
 6881      74436C65 
 6881      61725065 
 6881      6E64696E 
 6881      6700
 6882              	.LASF18:
 6883 0529 6C6F6E67 		.ascii	"long double\000"
 6883      20646F75 
 6883      626C6500 
 6884              	.LASF40:
 6885 0535 61646472 		.ascii	"address\000"
 6885      65737300 
 6886              	.LASF51:
 6887 053d 656E6162 		.ascii	"enable\000"
 6887      6C6500
 6888              	.LASF52:
 6889 0544 73797363 		.ascii	"sysclkSource\000"
 6889      6C6B536F 
 6889      75726365 
 6889      00
 6890              	.LASF95:
 6891 0551 66756E63 		.ascii	"function\000"
 6891      74696F6E 
 6891      00
 6892              	.LASF112:
 6893 055a 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 6893      6F467265 
 6893      714D687A 
 6893      32526567 
 6893      00
 6894              	.LASF92:
 6895 056b 43795379 		.ascii	"CySysTickGetValue\000"
 6895      73546963 
 6895      6B476574 
 6895      56616C75 
 6895      6500
 6896              	.LASF107:
 6897 057d 63796465 		.ascii	"cydelayFreqHz\000"
 6897      6C617946 
 6897      72657148 
 6897      7A00
 6898              	.LASF74:
 6899 058b 4379496E 		.ascii	"CyIntSetPriority\000"
 6899      74536574 
 6899      5072696F 
 6899      72697479 
 6899      00
 6900              	.LASF12:
 6901 059c 666C6F61 		.ascii	"float\000"
 6901      7400
 6902              	.LASF118:
 6903 05a2 43794578 		.ascii	"CyExitCriticalSection\000"
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 189


 6903      69744372 
 6903      69746963 
 6903      616C5365 
 6903      6374696F 
 6904              	.LASF59:
 6905 05b8 43795379 		.ascii	"CySysLvdEnable\000"
 6905      734C7664 
 6905      456E6162 
 6905      6C6500
 6906              	.LASF20:
 6907 05c7 63795379 		.ascii	"cySysTickCallback\000"
 6907      73546963 
 6907      6B43616C 
 6907      6C626163 
 6907      6B00
 6908              	.LASF73:
 6909 05d9 4379496E 		.ascii	"CyIntGetVector\000"
 6909      74476574 
 6909      56656374 
 6909      6F7200
 6910              	.LASF45:
 6911 05e8 6D696C6C 		.ascii	"milliseconds\000"
 6911      69736563 
 6911      6F6E6473 
 6911      00
 6912              	.LASF115:
 6913 05f5 43794465 		.ascii	"CyDelayCycles\000"
 6913      6C617943 
 6913      79636C65 
 6913      7300
 6914              	.LASF15:
 6915 0603 72656738 		.ascii	"reg8\000"
 6915      00
 6916              	.LASF60:
 6917 0608 74687265 		.ascii	"threshold\000"
 6917      73686F6C 
 6917      6400
 6918              	.LASF83:
 6919 0612 43794861 		.ascii	"CyHalt\000"
 6919      6C7400
 6920              	.LASF100:
 6921 0619 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6921      73536574 
 6921      52616D41 
 6921      63636573 
 6921      73417262 
 6922              	.LASF1:
 6923 0636 756E7369 		.ascii	"unsigned char\000"
 6923      676E6564 
 6923      20636861 
 6923      7200
 6924              	.LASF65:
 6925 0644 72656173 		.ascii	"reason\000"
 6925      6F6E00
 6926              	.LASF2:
 6927 064b 73686F72 		.ascii	"short int\000"
 6927      7420696E 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 190


 6927      7400
 6928              	.LASF78:
 6929 0655 4379496E 		.ascii	"CyIntEnable\000"
 6929      74456E61 
 6929      626C6500 
 6930              	.LASF71:
 6931 0661 4379496E 		.ascii	"CyIntGetSysVector\000"
 6931      74476574 
 6931      53797356 
 6931      6563746F 
 6931      7200
 6932              	.LASF50:
 6933 0673 636C6B53 		.ascii	"clkSelect\000"
 6933      656C6563 
 6933      7400
 6934              	.LASF123:
 6935 067d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6935      73546963 
 6935      6B536572 
 6935      76696365 
 6935      43616C6C 
 6936              	.LASF14:
 6937 0697 63686172 		.ascii	"char\000"
 6937      00
 6938              	.LASF113:
 6939 069c 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 6939      6F467265 
 6939      714D687A 
 6939      3244706C 
 6939      6C4F6666 
 6940              	.LASF17:
 6941 06b4 63796973 		.ascii	"cyisraddress\000"
 6941      72616464 
 6941      72657373 
 6941      00
 6942              	.LASF43:
 6943 06c1 43795379 		.ascii	"CySysTickEnable\000"
 6943      73546963 
 6943      6B456E61 
 6943      626C6500 
 6944              	.LASF53:
 6945 06d1 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6945      73436C6B 
 6945      57726974 
 6945      65537973 
 6945      636C6B44 
 6946              	.LASF94:
 6947 06e8 43795379 		.ascii	"CySysTickSetCallback\000"
 6947      73546963 
 6947      6B536574 
 6947      43616C6C 
 6947      6261636B 
 6948              	.LASF106:
 6949 06fd 43795379 		.ascii	"CySysTickCallbacks\000"
 6949      73546963 
 6949      6B43616C 
 6949      6C626163 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 191


 6949      6B7300
 6950              	.LASF99:
 6951 0710 756E6971 		.ascii	"uniqueId\000"
 6951      75654964 
 6951      00
 6952              	.LASF25:
 6953 0719 666C6173 		.ascii	"flashCtlReg\000"
 6953      6843746C 
 6953      52656700 
 6954              	.LASF44:
 6955 0725 43794465 		.ascii	"CyDelay\000"
 6955      6C617900 
 6956              	.LASF93:
 6957 072d 43795379 		.ascii	"CySysTickGetClockSource\000"
 6957      73546963 
 6957      6B476574 
 6957      436C6F63 
 6957      6B536F75 
 6958              	.LASF89:
 6959 0745 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6959      73546963 
 6959      6B446973 
 6959      61626C65 
 6959      496E7465 
 6960              	.LASF62:
 6961 075f 43795379 		.ascii	"CySysLvdDisable\000"
 6961      734C7664 
 6961      44697361 
 6961      626C6500 
 6962              	.LASF109:
 6963 076f 63796465 		.ascii	"cydelayFreqMhz\000"
 6963      6C617946 
 6963      7265714D 
 6963      687A00
 6964              	.LASF119:
 6965 077e 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6965      73436C6B 
 6965      57636F45 
 6965      6E61626C 
 6965      656400
 6966              	.LASF103:
 6967 0791 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6967      73536574 
 6967      446D6163 
 6967      41636365 
 6967      73734172 
 6968              	.LASF88:
 6969 07af 43795379 		.ascii	"CySysTickStop\000"
 6969      73546963 
 6969      6B53746F 
 6969      7000
 6970              	.LASF54:
 6971 07bd 64697669 		.ascii	"divider\000"
 6971      64657200 
 6972              	.LASF61:
 6973 07c5 43795379 		.ascii	"CySysClkImoStart\000"
 6973      73436C6B 
ARM GAS  C:\Users\AFDHAL~1\AppData\Local\Temp\ccm86vHw.s 			page 192


 6973      496D6F53 
 6973      74617274 
 6973      00
 6974              	.LASF117:
 6975 07d6 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6975      73466C61 
 6975      73685365 
 6975      74576169 
 6975      74437963 
 6976              	.LASF121:
 6977 07ee 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6977      72617465 
 6977      645F536F 
 6977      75726365 
 6977      5C50536F 
 6978              	.LASF32:
 6979 080d 6D696372 		.ascii	"microseconds\000"
 6979      6F736563 
 6979      6F6E6473 
 6979      00
 6980              	.LASF48:
 6981 081a 746D7052 		.ascii	"tmpReg\000"
 6981      656700
 6982              	.LASF37:
 6983 0821 43795379 		.ascii	"CySysTickSetReload\000"
 6983      73546963 
 6983      6B536574 
 6983      52656C6F 
 6983      616400
 6984              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
